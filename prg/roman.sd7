
(********************************************************************)
(*                                                                  *)
(*  roman.sd7     Write roman numbers                               *)
(*  Copyright (C) 1991, 1992, 1993, 1994, 2004  Thomas Mertes       *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the Free      *)
(*  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,  *)
(*  MA 02111-1307 USA                                               *)
(*                                                                  *)
(********************************************************************)


$ include "seed7_05.s7i";


const proc: write_0_to_9 (in integer: number, in string: one, in string: five, in string: ten) is func
  begin
    if number <= 3 then
      write(one mult number);
    else
      if number = 4 then
        write(one & five);
      else
        if number <= 8 then
          write(five & one mult (number - 5));
        else
          write(one & ten);
        end if;
      end if;
    end if;
  end func;


const proc: write_roman (in integer: number) is func
  begin
    write_0_to_9(number div 1000,         "M", "?", "?");
    write_0_to_9((number div 100) rem 10, "C", "D", "M");
    write_0_to_9((number div 10) rem 10,  "X", "L", "C");
    write_0_to_9(number rem 10,           "I", "V", "X");
  end func;


const proc: main is func
  local
    var integer: number is 0;
  begin
    for number range 0 to 3999 do
      write_roman(number);
      writeln;
    end for;
  end func;
