
(********************************************************************)
(*                                                                  *)
(*  wordcnt.sd7   Count the words in a file                         *)
(*  Copyright (C) 2005  Thomas Mertes                               *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the           *)
(*  Free Software Foundation, Inc., 51 Franklin Street,             *)
(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)
(*                                                                  *)
(********************************************************************)


$ include "seed7_05.s7i";
  include "stdio.s7i";
  include "scanfile.s7i";

const type: wordHash is hash [string] integer;
const type: countHash is hash [integer] array string;

const proc: main is func
  local
    var wordHash: numberOfWords is wordHash.EMPTY_HASH;
    var countHash: countWords is countHash.EMPTY_HASH;
    var integer: number is 0;
    var string: symbol is "";
  begin
    while not eof(IN) do
      symbol := getSimpleSymbol(IN);
      if symbol in numberOfWords then
        incr(numberOfWords[symbol]);
      else
        numberOfWords @:= [symbol] 1;
      end if;
    end while;
    countWords := flip(numberOfWords);
    for number range sort(keys(countWords)) do
      for symbol range sort(countWords[number]) do
        writeln(symbol rpad 20 <& " " <& number);
      end for;
    end for;
  end func;
