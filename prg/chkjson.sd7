
(********************************************************************)
(*                                                                  *)
(*  chkjson.sd7   Checks the JSON scanner and DOM functions         *)
(*  Copyright (C) 2024  Thomas Mertes                               *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the           *)
(*  Free Software Foundation, Inc., 51 Franklin Street,             *)
(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)
(*                                                                  *)
(********************************************************************)


$ include "seed7_05.s7i";
  include "strifile.s7i";
  include "scanjson.s7i";
  include "json.s7i";


const proc: DECLARE_RAISES_RANGE_ERROR (in type: aType) is func
  begin

    const func boolean: raisesRangeError (in func aType: expression) is func
      result
        var boolean: raisesRangeError is FALSE;
      local
        var aType: exprResult is aType.value;
      begin
        block
          exprResult := expression;
        exception
          catch RANGE_ERROR:
            raisesRangeError := TRUE;
        end block;
      end func;

  end func;


DECLARE_RAISES_RANGE_ERROR(string);
DECLARE_RAISES_RANGE_ERROR(integer);
DECLARE_RAISES_RANGE_ERROR(float);


const proc: DECLARE_RAISES_ILLEGAL_ACTION (in type: aType) is func
  begin

    const func boolean: raisesIllegalAction (in func aType: expression) is func
      result
        var boolean: raisesIllegalAction is FALSE;
      local
        var aType: exprResult is aType.value;
      begin
        block
          exprResult := expression;
        exception
          catch ILLEGAL_ACTION:
            raisesIllegalAction := TRUE;
        end block;
      end func;

  end func;


DECLARE_RAISES_ILLEGAL_ACTION(string);
DECLARE_RAISES_ILLEGAL_ACTION(integer);
DECLARE_RAISES_ILLEGAL_ACTION(bigInteger);
DECLARE_RAISES_ILLEGAL_ACTION(float);


const func file: initScan (in string: content) is func
  result
    var file: scanFile is STD_NULL;
  begin
    scanFile := openStriFile(content);
    scanFile.bufferChar := getc(scanFile);
  end func;


const func boolean: getJsonStringOkay (in string: initialStri,
    in string: expectedSymbol, in string: finalStri) is func
  result
    var boolean: okay is TRUE;
  local
    var string: stri is "";
    var string: symbol is "";
    var file: aFile is STD_NULL;
    var char: expectedBuffer is ' ';
  begin
    stri := initialStri;
    symbol := getJsonString(stri);
    if symbol <> expectedSymbol then
      writeln(" ***** getJsonString(stri) with " <&
              literal(initialStri) <& " returns "
              <& literal(symbol) <& " instead of " <&
              literal(expectedSymbol) <& ".");
      okay := FALSE;
    elsif stri <> finalStri then
      writeln(" ***** After getJsonString(stri) with " <&
              literal(initialStri) <& " stri is " <&
              literal(stri) <& " instead of " <& literal(finalStri) <&
              ".");
      okay := FALSE;
    else
      if finalStri = "" then
        expectedBuffer := EOF;
      else
        expectedBuffer := finalStri[1];
      end if;
      aFile := initScan(initialStri);
      symbol := getJsonString(aFile);
      if symbol <> expectedSymbol then
        writeln(" ***** getJsonString(file) with " <&
                literal(initialStri) <& " returns " <&
                literal(symbol) <& " instead of " <&
                literal(expectedSymbol) <& ".");
        okay := FALSE;
      elsif aFile.bufferChar <> expectedBuffer then
        writeln(" ***** After getJsonString(file) with " <&
                literal(initialStri) <& " bufferChar is " <&
                literal(aFile.bufferChar) <& " instead of " <&
                literal(expectedBuffer) <& ".");
        okay := FALSE;
      elsif expectedBuffer = EOF and not eof(aFile) then
        writeln(" ***** After getJsonString(file) with " <&
                literal(initialStri) <& " bufferChar is \
                \EOF but eof() returns FALSE.");
        okay := FALSE;
      end if;
    end if;
  end func;


const func boolean: getJsonStringRaisesRangeError (in string: initialStri) is func
  result
    var boolean: okay is TRUE;
  local
    var string: stri is "";
    var file: aFile is STD_NULL;
  begin
    stri := initialStri;
    if not raisesRangeError(getJsonString(stri)) then
      writeln(" ***** getJsonString(stri) with " <&
              literal(initialStri) <& " does not raise RANGE_ERROR.");
      okay := FALSE;
    else
      aFile := initScan(initialStri);
      if not raisesRangeError(getJsonString(aFile)) then
        writeln(" ***** getJsonString(file) with " <&
                literal(initialStri) <& " does not raise RANGE_ERROR.");
        okay := FALSE;
      end if;
    end if;
  end func;


const func boolean: checkGetJsonString1 is func
  result
    var boolean: okay is TRUE;
  begin
    if  not getJsonStringOkay("\"\"",         "\"\"",     "") or
        not getJsonStringOkay("\"x\"&ab",     "\"x\"",    "&ab") or
        not getJsonStringOkay("\"\\\\\"+",    "\"\\\"",   "+") or
        not getJsonStringOkay("\"\\\"\"/",    "\"\"\"",   "/") or
        not getJsonStringOkay("\"\\/\"*",     "\"/\"",    "*") or
        not getJsonStringOkay("\"\\b\\f\"",   "\"\b\f\"", "") or
        not getJsonStringOkay("\"\\n\\r\"",   "\"\n\r\"", "") or
        not getJsonStringOkay("\"\\t$\"-",    "\"\t$\"",  "-") or
        not getJsonStringOkay("\"\\u20ac\"",  "\"€\"",    "") or
        not getJsonStringOkay("\"\\u20ac0\"", "\"€0\"",   "") then
      writeln(" ***** getJsonString() does not work as expected. (1)");
      okay := FALSE;
    end if;

    if  not getJsonStringOkay("\"\"",        "\"\"",        "") or
        not getJsonStringOkay("\"\\\"\"",    "\"\"\"",      "") or
        not getJsonStringOkay("\"\\\\\"",    "\"\\\"",      "") or
        not getJsonStringOkay("\"\\/\"",     "\"/\"",       "") or
        not getJsonStringOkay("\"\\b\"",     "\"\b\"",      "") or
        not getJsonStringOkay("\"\\f\"",     "\"\f\"",      "") or
        not getJsonStringOkay("\"\\n\"",     "\"\n\"",      "") or
        not getJsonStringOkay("\"\\r\"",     "\"\r\"",      "") or
        not getJsonStringOkay("\"\\t\"",     "\"\t\"",      "") or
        not getJsonStringOkay("\"\\u0000\"", "\"\0;\"",     "") or
        not getJsonStringOkay("\"\\u001f\"", "\"\31;\"",    "") or
        not getJsonStringOkay("\"\\u007f\"", "\"\127;\"",   "") or
        not getJsonStringOkay("\"\\u0080\"", "\"\128;\"",   "") or
        not getJsonStringOkay("\"\\u009f\"", "\"\159;\"",   "") or
        not getJsonStringOkay("\"\\uffff\"", "\"\65535;\"", "") or
        not getJsonStringOkay("\" \"",       "\" \"",       "") or
        not getJsonStringOkay("\"!\"",       "\"!\"",       "") or
        not getJsonStringOkay("\"0\"",       "\"0\"",       "") or
        not getJsonStringOkay("\"A\"",       "\"A\"",       "") or
        not getJsonStringOkay("\"a\"",       "\"a\"",       "") or
        not getJsonStringOkay("\"~\"",       "\"~\"",       "") or
        not getJsonStringOkay("\"\160;\"",   "\"\160;\"",   "") or
        not getJsonStringOkay("\"ÿ\"",       "\"ÿ\"",       "") or
        not getJsonStringOkay("\"€\"",       "\"€\"",       "") then
      writeln(" ***** getJsonString() does not work as expected. (2)");
      okay := FALSE;
    end if;

    if  not getJsonStringOkay("\"\" ",        "\"\"",        " ") or
        not getJsonStringOkay("\"\\\"\" ",    "\"\"\"",      " ") or
        not getJsonStringOkay("\"\\\\\" ",    "\"\\\"",      " ") or
        not getJsonStringOkay("\"\\/\" ",     "\"/\"",       " ") or
        not getJsonStringOkay("\"\\b\" ",     "\"\b\"",      " ") or
        not getJsonStringOkay("\"\\f\" ",     "\"\f\"",      " ") or
        not getJsonStringOkay("\"\\n\" ",     "\"\n\"",      " ") or
        not getJsonStringOkay("\"\\r\" ",     "\"\r\"",      " ") or
        not getJsonStringOkay("\"\\t\" ",     "\"\t\"",      " ") or
        not getJsonStringOkay("\"\\u0000\" ", "\"\0;\"",     " ") or
        not getJsonStringOkay("\"\\u001f\" ", "\"\31;\"",    " ") or
        not getJsonStringOkay("\"\\u007f\" ", "\"\127;\"",   " ") or
        not getJsonStringOkay("\"\\u0080\" ", "\"\128;\"",   " ") or
        not getJsonStringOkay("\"\\u009f\" ", "\"\159;\"",   " ") or
        not getJsonStringOkay("\"\\uffff\" ", "\"\65535;\"", " ") or
        not getJsonStringOkay("\" \" ",       "\" \"",       " ") or
        not getJsonStringOkay("\"!\" ",       "\"!\"",       " ") or
        not getJsonStringOkay("\"0\" ",       "\"0\"",       " ") or
        not getJsonStringOkay("\"A\" ",       "\"A\"",       " ") or
        not getJsonStringOkay("\"a\" ",       "\"a\"",       " ") or
        not getJsonStringOkay("\"~\" ",       "\"~\"",       " ") or
        not getJsonStringOkay("\"\160;\" ",   "\"\160;\"",   " ") or
        not getJsonStringOkay("\"ÿ\" ",       "\"ÿ\"",       " ") or
        not getJsonStringOkay("\"€\" ",       "\"€\"",       " ") then
      writeln(" ***** getJsonString() does not work as expected. (3)");
      okay := FALSE;
    end if;

    if  not getJsonStringOkay("\"\"\"",        "\"\"",        "\"") or
        not getJsonStringOkay("\"\\\"\"\"",    "\"\"\"",      "\"") or
        not getJsonStringOkay("\"\\\\\"\"",    "\"\\\"",      "\"") or
        not getJsonStringOkay("\"\\/\"\"",     "\"/\"",       "\"") or
        not getJsonStringOkay("\"\\b\"\"",     "\"\b\"",      "\"") or
        not getJsonStringOkay("\"\\f\"\"",     "\"\f\"",      "\"") or
        not getJsonStringOkay("\"\\n\"\"",     "\"\n\"",      "\"") or
        not getJsonStringOkay("\"\\r\"\"",     "\"\r\"",      "\"") or
        not getJsonStringOkay("\"\\t\"\"",     "\"\t\"",      "\"") or
        not getJsonStringOkay("\"\\u0000\"\"", "\"\0;\"",     "\"") or
        not getJsonStringOkay("\"\\u001f\"\"", "\"\31;\"",    "\"") or
        not getJsonStringOkay("\"\\u007f\"\"", "\"\127;\"",   "\"") or
        not getJsonStringOkay("\"\\u0080\"\"", "\"\128;\"",   "\"") or
        not getJsonStringOkay("\"\\u009f\"\"", "\"\159;\"",   "\"") or
        not getJsonStringOkay("\"\\uffff\"\"", "\"\65535;\"", "\"") or
        not getJsonStringOkay("\" \"\"",       "\" \"",       "\"") or
        not getJsonStringOkay("\"!\"\"",       "\"!\"",       "\"") or
        not getJsonStringOkay("\"0\"\"",       "\"0\"",       "\"") or
        not getJsonStringOkay("\"A\"\"",       "\"A\"",       "\"") or
        not getJsonStringOkay("\"a\"\"",       "\"a\"",       "\"") or
        not getJsonStringOkay("\"~\"\"",       "\"~\"",       "\"") or
        not getJsonStringOkay("\"\160;\"\"",   "\"\160;\"",   "\"") or
        not getJsonStringOkay("\"ÿ\"\"",       "\"ÿ\"",       "\"") or
        not getJsonStringOkay("\"€\"\"",       "\"€\"",       "\"") then
      writeln(" ***** getJsonString() does not work as expected. (4)");
      okay := FALSE;
    end if;

    if  not getJsonStringOkay("\"\\\"\\\\\\/\\b\\f\\n\\r\\t\\u0000\\u001f\\u007f\\u0080\\u009f !0Aa~\160;ÿ€\"",
                              "\"\"\\/\b\f\n\r\t\0;\31;\127;\128;\159; !0Aa~\160;ÿ€\"", "") then
      writeln(" ***** getJsonString() does not work as expected. (5)");
      okay := FALSE;
    end if;

    if  not getJsonStringRaisesRangeError(""           ) or
        not getJsonStringRaisesRangeError("\""         ) or
        not getJsonStringRaisesRangeError("\"\0;\""    ) or
        not getJsonStringRaisesRangeError("\"\b\""     ) or
        not getJsonStringRaisesRangeError("\"\f\""     ) or
        not getJsonStringRaisesRangeError("\"\n\""     ) or
        not getJsonStringRaisesRangeError("\"\r\""     ) or
        not getJsonStringRaisesRangeError("\"\t\""     ) or
        not getJsonStringRaisesRangeError("\"\31;\""   ) or
        not getJsonStringRaisesRangeError("\"\127;\""  ) or
        not getJsonStringRaisesRangeError("\"\128;\""  ) or
        not getJsonStringRaisesRangeError("\"\159;\""  ) or
        not getJsonStringRaisesRangeError("\"\\"       ) or
        not getJsonStringRaisesRangeError("\"\\a\""    ) or
        not getJsonStringRaisesRangeError("\"\\u"      ) or
        not getJsonStringRaisesRangeError("\"\\u1"     ) or
        not getJsonStringRaisesRangeError("\"\\u12"    ) or
        not getJsonStringRaisesRangeError("\"\\u123"   ) or
        not getJsonStringRaisesRangeError("\"\\u1234"  ) or
        not getJsonStringRaisesRangeError("\"\\ug234"  ) or
        not getJsonStringRaisesRangeError("\"\\u1g34"  ) or
        not getJsonStringRaisesRangeError("\"\\u12g4"  ) or
        not getJsonStringRaisesRangeError("\"\\u123g"  ) or
        not getJsonStringRaisesRangeError("\"\\u\""    ) or
        not getJsonStringRaisesRangeError("\"\\u1\""   ) or
        not getJsonStringRaisesRangeError("\"\\u12\""  ) or
        not getJsonStringRaisesRangeError("\"\\u123\"" ) or
        not getJsonStringRaisesRangeError("\"\\ug234\"") or
        not getJsonStringRaisesRangeError("\"\\u1g34\"") or
        not getJsonStringRaisesRangeError("\"\\u12g4\"") or
        not getJsonStringRaisesRangeError("\"\\u123g\"") then
      writeln(" ***** getJsonString() does not raise RANGE_ERROR.");
      okay := FALSE;
    end if;
  end func;


const proc: checkGetJsonString is func
  local
    var boolean: okay is TRUE;
  begin
    if not checkGetJsonString1 then
      okay := FALSE;
    end if;

    if okay then
      writeln("The function getJsonString works correctly.");
    end if;
  end func;


const func boolean: getJsonNumberOkay (in string: initialStri,
    in string: expectedSymbol, in string: finalStri) is func
  result
    var boolean: okay is TRUE;
  local
    var string: stri is "";
    var string: symbol is "";
    var file: aFile is STD_NULL;
    var char: expectedBuffer is ' ';
  begin
    stri := initialStri;
    symbol := getJsonNumber(stri);
    if symbol <> expectedSymbol then
      writeln(" ***** getJsonNumber(stri) with " <&
              literal(initialStri) <& " returns " <&
              literal(symbol) <& " instead of " <&
              literal(expectedSymbol) <& ".");
      okay := FALSE;
    elsif stri <> finalStri then
      writeln(" ***** After getJsonNumber(stri) with " <&
              literal(initialStri) <& " stri is " <&
              literal(stri) <& " instead of " <& literal(finalStri) <&
              ".");
      okay := FALSE;
    else
      if finalStri = "" then
        expectedBuffer := EOF;
      else
        expectedBuffer := finalStri[1];
      end if;
      aFile := initScan(initialStri);
      symbol := getJsonNumber(aFile);
      if symbol <> expectedSymbol then
        writeln(" ***** getJsonNumber(file) with " <&
                literal(initialStri) <& " returns " <&
                literal(symbol) <& " instead of " <&
                literal(expectedSymbol) <& ".");
        okay := FALSE;
      elsif aFile.bufferChar <> expectedBuffer then
        writeln(" ***** After getJsonNumber(file) with " <&
                literal(initialStri) <& " bufferChar is " <&
                literal(aFile.bufferChar) <& " instead of " <&
                literal(expectedBuffer) <& ".");
        okay := FALSE;
      elsif expectedBuffer = EOF and not eof(aFile) then
        writeln(" ***** After getJsonNumber(file) with " <&
                literal(initialStri) <& " bufferChar is \
                \EOF but eof() returns FALSE.");
        okay := FALSE;
      end if;
    end if;
  end func;


const func boolean: getJsonNumberRaisesRangeError (in string: initialStri) is func
  result
    var boolean: okay is TRUE;
  local
    var string: stri is "";
    var file: aFile is STD_NULL;
  begin
    stri := initialStri;
    if not raisesRangeError(getJsonNumber(stri)) then
      writeln(" ***** getJsonNumber(stri) with " <&
              literal(initialStri) <& " does not raise RANGE_ERROR.");
      okay := FALSE;
    else
      aFile := initScan(initialStri);
      if not raisesRangeError(getJsonNumber(aFile)) then
        writeln(" ***** getJsonNumber(file) with " <&
                literal(initialStri) <& " does not raise RANGE_ERROR.");
        okay := FALSE;
      end if;
    end if;
  end func;


const func boolean: checkGetJsonNumber1 is func
  result
    var boolean: okay is TRUE;
  begin
    if  not getJsonNumberOkay("12",     "12",     "") or
        not getJsonNumberOkay("123*2",  "123",    "*2") or
        not getJsonNumberOkay("-2+3",   "-2",     "+3") or
        not getJsonNumberOkay("00",     "0",      "0") or
        not getJsonNumberOkay("-00",    "-0",     "0") or
        not getJsonNumberOkay("-01",    "-0",     "1") or
        not getJsonNumberOkay("1x",     "1",      "x") or
        not getJsonNumberOkay("1.0+",   "1.0",    "+") or
        not getJsonNumberOkay("1.0E1-", "1.0E1",  "-") or
        not getJsonNumberOkay("1.0e-1", "1.0e-1", "") or
        not getJsonNumberOkay("1e2y",   "1e2",    "y") or
        not getJsonNumberOkay("1E+3z",  "1E+3",   "z") or
        not getJsonNumberOkay("1234_/", "1234",   "_/") then
      writeln(" ***** getJsonNumber() does not work as expected. (1)");
      okay := FALSE;
    end if;

    if  not getJsonNumberOkay("0",       "0",       "") or
        not getJsonNumberOkay("0.0",     "0.0",     "") or
        not getJsonNumberOkay("0.0e1",   "0.0e1",   "") or
        not getJsonNumberOkay("0.0e+1",  "0.0e+1",  "") or
        not getJsonNumberOkay("0.0e-1",  "0.0e-1",  "") or
        not getJsonNumberOkay("0.0E1",   "0.0E1",   "") or
        not getJsonNumberOkay("0.0E+1",  "0.0E+1",  "") or
        not getJsonNumberOkay("0.0E-1",  "0.0E-1",  "") or
        not getJsonNumberOkay("0e1",     "0e1",     "") or
        not getJsonNumberOkay("0e+1",    "0e+1",    "") or
        not getJsonNumberOkay("0e-1",    "0e-1",    "") or
        not getJsonNumberOkay("0E1",     "0E1",     "") or
        not getJsonNumberOkay("0E+1",    "0E+1",    "") or
        not getJsonNumberOkay("0E-1",    "0E-1",    "") or
        not getJsonNumberOkay("1",       "1",       "") or
        not getJsonNumberOkay("1.0",     "1.0",     "") or
        not getJsonNumberOkay("1.0e1",   "1.0e1",   "") or
        not getJsonNumberOkay("1.0e+1",  "1.0e+1",  "") or
        not getJsonNumberOkay("1.0e-1",  "1.0e-1",  "") or
        not getJsonNumberOkay("1.0E1",   "1.0E1",   "") or
        not getJsonNumberOkay("1.0E+1",  "1.0E+1",  "") or
        not getJsonNumberOkay("1.0E-1",  "1.0E-1",  "") or
        not getJsonNumberOkay("1e1",     "1e1",     "") or
        not getJsonNumberOkay("1e+1",    "1e+1",    "") or
        not getJsonNumberOkay("1e-1",    "1e-1",    "") or
        not getJsonNumberOkay("1E1",     "1E1",     "") or
        not getJsonNumberOkay("1E+1",    "1E+1",    "") or
        not getJsonNumberOkay("1E-1",    "1E-1",    "") or
        not getJsonNumberOkay("9",       "9",       "") or
        not getJsonNumberOkay("9.0",     "9.0",     "") or
        not getJsonNumberOkay("9.0e1",   "9.0e1",   "") or
        not getJsonNumberOkay("9.0e+1",  "9.0e+1",  "") or
        not getJsonNumberOkay("9.0e-1",  "9.0e-1",  "") or
        not getJsonNumberOkay("9.0E1",   "9.0E1",   "") or
        not getJsonNumberOkay("9.0E+1",  "9.0E+1",  "") or
        not getJsonNumberOkay("9.0E-1",  "9.0E-1",  "") or
        not getJsonNumberOkay("9e1",     "9e1",     "") or
        not getJsonNumberOkay("9e+1",    "9e+1",    "") or
        not getJsonNumberOkay("9e-1",    "9e-1",    "") or
        not getJsonNumberOkay("9E1",     "9E1",     "") or
        not getJsonNumberOkay("9E+1",    "9E+1",    "") or
        not getJsonNumberOkay("9E-1",    "9E-1",    "") or
        not getJsonNumberOkay("-0",      "-0",      "") or
        not getJsonNumberOkay("-0.0",    "-0.0",    "") or
        not getJsonNumberOkay("-0.0e1",  "-0.0e1",  "") or
        not getJsonNumberOkay("-0.0e+1", "-0.0e+1", "") or
        not getJsonNumberOkay("-0.0e-1", "-0.0e-1", "") or
        not getJsonNumberOkay("-0.0E1",  "-0.0E1",  "") or
        not getJsonNumberOkay("-0.0E+1", "-0.0E+1", "") or
        not getJsonNumberOkay("-0.0E-1", "-0.0E-1", "") or
        not getJsonNumberOkay("-0e1",    "-0e1",    "") or
        not getJsonNumberOkay("-0e+1",   "-0e+1",   "") or
        not getJsonNumberOkay("-0e-1",   "-0e-1",   "") or
        not getJsonNumberOkay("-0E1",    "-0E1",    "") or
        not getJsonNumberOkay("-0E+1",   "-0E+1",   "") or
        not getJsonNumberOkay("-0E-1",   "-0E-1",   "") or
        not getJsonNumberOkay("-1",      "-1",      "") or
        not getJsonNumberOkay("-1.0",    "-1.0",    "") or
        not getJsonNumberOkay("-1.0e1",  "-1.0e1",  "") or
        not getJsonNumberOkay("-1.0e+1", "-1.0e+1", "") or
        not getJsonNumberOkay("-1.0e-1", "-1.0e-1", "") or
        not getJsonNumberOkay("-1.0E1",  "-1.0E1",  "") or
        not getJsonNumberOkay("-1.0E+1", "-1.0E+1", "") or
        not getJsonNumberOkay("-1.0E-1", "-1.0E-1", "") or
        not getJsonNumberOkay("-1e1",    "-1e1",    "") or
        not getJsonNumberOkay("-1e+1",   "-1e+1",   "") or
        not getJsonNumberOkay("-1e-1",   "-1e-1",   "") or
        not getJsonNumberOkay("-1E1",    "-1E1",    "") or
        not getJsonNumberOkay("-1E+1",   "-1E+1",   "") or
        not getJsonNumberOkay("-1E-1",   "-1E-1",   "") or
        not getJsonNumberOkay("-9",      "-9",      "") or
        not getJsonNumberOkay("-9.0",    "-9.0",    "") or
        not getJsonNumberOkay("-9.0e1",  "-9.0e1",  "") or
        not getJsonNumberOkay("-9.0e+1", "-9.0e+1", "") or
        not getJsonNumberOkay("-9.0e-1", "-9.0e-1", "") or
        not getJsonNumberOkay("-9.0E1",  "-9.0E1",  "") or
        not getJsonNumberOkay("-9.0E+1", "-9.0E+1", "") or
        not getJsonNumberOkay("-9.0E-1", "-9.0E-1", "") or
        not getJsonNumberOkay("-9e1",    "-9e1",    "") or
        not getJsonNumberOkay("-9e+1",   "-9e+1",   "") or
        not getJsonNumberOkay("-9e-1",   "-9e-1",   "") or
        not getJsonNumberOkay("-9E1",    "-9E1",    "") or
        not getJsonNumberOkay("-9E+1",   "-9E+1",   "") or
        not getJsonNumberOkay("-9E-1",   "-9E-1",   "") then
      writeln(" ***** getJsonNumber() does not work as expected. (2)");
      okay := FALSE;
    end if;

    if  not getJsonNumberOkay("0 ",       "0",       " ") or
        not getJsonNumberOkay("0.0 ",     "0.0",     " ") or
        not getJsonNumberOkay("0.0e1 ",   "0.0e1",   " ") or
        not getJsonNumberOkay("0.0e+1 ",  "0.0e+1",  " ") or
        not getJsonNumberOkay("0.0e-1 ",  "0.0e-1",  " ") or
        not getJsonNumberOkay("0.0E1 ",   "0.0E1",   " ") or
        not getJsonNumberOkay("0.0E+1 ",  "0.0E+1",  " ") or
        not getJsonNumberOkay("0.0E-1 ",  "0.0E-1",  " ") or
        not getJsonNumberOkay("0e1 ",     "0e1",     " ") or
        not getJsonNumberOkay("0e+1 ",    "0e+1",    " ") or
        not getJsonNumberOkay("0e-1 ",    "0e-1",    " ") or
        not getJsonNumberOkay("0E1 ",     "0E1",     " ") or
        not getJsonNumberOkay("0E+1 ",    "0E+1",    " ") or
        not getJsonNumberOkay("0E-1 ",    "0E-1",    " ") or
        not getJsonNumberOkay("1 ",       "1",       " ") or
        not getJsonNumberOkay("1.0 ",     "1.0",     " ") or
        not getJsonNumberOkay("1.0e1 ",   "1.0e1",   " ") or
        not getJsonNumberOkay("1.0e+1 ",  "1.0e+1",  " ") or
        not getJsonNumberOkay("1.0e-1 ",  "1.0e-1",  " ") or
        not getJsonNumberOkay("1.0E1 ",   "1.0E1",   " ") or
        not getJsonNumberOkay("1.0E+1 ",  "1.0E+1",  " ") or
        not getJsonNumberOkay("1.0E-1 ",  "1.0E-1",  " ") or
        not getJsonNumberOkay("1e1 ",     "1e1",     " ") or
        not getJsonNumberOkay("1e+1 ",    "1e+1",    " ") or
        not getJsonNumberOkay("1e-1 ",    "1e-1",    " ") or
        not getJsonNumberOkay("1E1 ",     "1E1",     " ") or
        not getJsonNumberOkay("1E+1 ",    "1E+1",    " ") or
        not getJsonNumberOkay("1E-1 ",    "1E-1",    " ") or
        not getJsonNumberOkay("9 ",       "9",       " ") or
        not getJsonNumberOkay("9.0 ",     "9.0",     " ") or
        not getJsonNumberOkay("9.0e1 ",   "9.0e1",   " ") or
        not getJsonNumberOkay("9.0e+1 ",  "9.0e+1",  " ") or
        not getJsonNumberOkay("9.0e-1 ",  "9.0e-1",  " ") or
        not getJsonNumberOkay("9.0E1 ",   "9.0E1",   " ") or
        not getJsonNumberOkay("9.0E+1 ",  "9.0E+1",  " ") or
        not getJsonNumberOkay("9.0E-1 ",  "9.0E-1",  " ") or
        not getJsonNumberOkay("9e1 ",     "9e1",     " ") or
        not getJsonNumberOkay("9e+1 ",    "9e+1",    " ") or
        not getJsonNumberOkay("9e-1 ",    "9e-1",    " ") or
        not getJsonNumberOkay("9E1 ",     "9E1",     " ") or
        not getJsonNumberOkay("9E+1 ",    "9E+1",    " ") or
        not getJsonNumberOkay("9E-1 ",    "9E-1",    " ") or
        not getJsonNumberOkay("-0 ",      "-0",      " ") or
        not getJsonNumberOkay("-0.0 ",    "-0.0",    " ") or
        not getJsonNumberOkay("-0.0e1 ",  "-0.0e1",  " ") or
        not getJsonNumberOkay("-0.0e+1 ", "-0.0e+1", " ") or
        not getJsonNumberOkay("-0.0e-1 ", "-0.0e-1", " ") or
        not getJsonNumberOkay("-0.0E1 ",  "-0.0E1",  " ") or
        not getJsonNumberOkay("-0.0E+1 ", "-0.0E+1", " ") or
        not getJsonNumberOkay("-0.0E-1 ", "-0.0E-1", " ") or
        not getJsonNumberOkay("-0e1 ",    "-0e1",    " ") or
        not getJsonNumberOkay("-0e+1 ",   "-0e+1",   " ") or
        not getJsonNumberOkay("-0e-1 ",   "-0e-1",   " ") or
        not getJsonNumberOkay("-0E1 ",    "-0E1",    " ") or
        not getJsonNumberOkay("-0E+1 ",   "-0E+1",   " ") or
        not getJsonNumberOkay("-0E-1 ",   "-0E-1",   " ") or
        not getJsonNumberOkay("-1 ",      "-1",      " ") or
        not getJsonNumberOkay("-1.0 ",    "-1.0",    " ") or
        not getJsonNumberOkay("-1.0e1 ",  "-1.0e1",  " ") or
        not getJsonNumberOkay("-1.0e+1 ", "-1.0e+1", " ") or
        not getJsonNumberOkay("-1.0e-1 ", "-1.0e-1", " ") or
        not getJsonNumberOkay("-1.0E1 ",  "-1.0E1",  " ") or
        not getJsonNumberOkay("-1.0E+1 ", "-1.0E+1", " ") or
        not getJsonNumberOkay("-1.0E-1 ", "-1.0E-1", " ") or
        not getJsonNumberOkay("-1e1 ",    "-1e1",    " ") or
        not getJsonNumberOkay("-1e+1 ",   "-1e+1",   " ") or
        not getJsonNumberOkay("-1e-1 ",   "-1e-1",   " ") or
        not getJsonNumberOkay("-1E1 ",    "-1E1",    " ") or
        not getJsonNumberOkay("-1E+1 ",   "-1E+1",   " ") or
        not getJsonNumberOkay("-1E-1 ",   "-1E-1",   " ") or
        not getJsonNumberOkay("-9 ",      "-9",      " ") or
        not getJsonNumberOkay("-9.0 ",    "-9.0",    " ") or
        not getJsonNumberOkay("-9.0e1 ",  "-9.0e1",  " ") or
        not getJsonNumberOkay("-9.0e+1 ", "-9.0e+1", " ") or
        not getJsonNumberOkay("-9.0e-1 ", "-9.0e-1", " ") or
        not getJsonNumberOkay("-9.0E1 ",  "-9.0E1",  " ") or
        not getJsonNumberOkay("-9.0E+1 ", "-9.0E+1", " ") or
        not getJsonNumberOkay("-9.0E-1 ", "-9.0E-1", " ") or
        not getJsonNumberOkay("-9e1 ",    "-9e1",    " ") or
        not getJsonNumberOkay("-9e+1 ",   "-9e+1",   " ") or
        not getJsonNumberOkay("-9e-1 ",   "-9e-1",   " ") or
        not getJsonNumberOkay("-9E1 ",    "-9E1",    " ") or
        not getJsonNumberOkay("-9E+1 ",   "-9E+1",   " ") or
        not getJsonNumberOkay("-9E-1 ",   "-9E-1",   " ") then
      writeln(" ***** getJsonNumber() does not work as expected. (3)");
      okay := FALSE;
    end if;

    if  not getJsonNumberOkay("0-",       "0",       "-") or
        not getJsonNumberOkay("0.0-",     "0.0",     "-") or
        not getJsonNumberOkay("0.0e1-",   "0.0e1",   "-") or
        not getJsonNumberOkay("0.0e+1-",  "0.0e+1",  "-") or
        not getJsonNumberOkay("0.0e-1-",  "0.0e-1",  "-") or
        not getJsonNumberOkay("0.0E1-",   "0.0E1",   "-") or
        not getJsonNumberOkay("0.0E+1-",  "0.0E+1",  "-") or
        not getJsonNumberOkay("0.0E-1-",  "0.0E-1",  "-") or
        not getJsonNumberOkay("0e1-",     "0e1",     "-") or
        not getJsonNumberOkay("0e+1-",    "0e+1",    "-") or
        not getJsonNumberOkay("0e-1-",    "0e-1",    "-") or
        not getJsonNumberOkay("0E1-",     "0E1",     "-") or
        not getJsonNumberOkay("0E+1-",    "0E+1",    "-") or
        not getJsonNumberOkay("0E-1-",    "0E-1",    "-") or
        not getJsonNumberOkay("1-",       "1",       "-") or
        not getJsonNumberOkay("1.0-",     "1.0",     "-") or
        not getJsonNumberOkay("1.0e1-",   "1.0e1",   "-") or
        not getJsonNumberOkay("1.0e+1-",  "1.0e+1",  "-") or
        not getJsonNumberOkay("1.0e-1-",  "1.0e-1",  "-") or
        not getJsonNumberOkay("1.0E1-",   "1.0E1",   "-") or
        not getJsonNumberOkay("1.0E+1-",  "1.0E+1",  "-") or
        not getJsonNumberOkay("1.0E-1-",  "1.0E-1",  "-") or
        not getJsonNumberOkay("1e1-",     "1e1",     "-") or
        not getJsonNumberOkay("1e+1-",    "1e+1",    "-") or
        not getJsonNumberOkay("1e-1-",    "1e-1",    "-") or
        not getJsonNumberOkay("1E1-",     "1E1",     "-") or
        not getJsonNumberOkay("1E+1-",    "1E+1",    "-") or
        not getJsonNumberOkay("1E-1-",    "1E-1",    "-") or
        not getJsonNumberOkay("9-",       "9",       "-") or
        not getJsonNumberOkay("9.0-",     "9.0",     "-") or
        not getJsonNumberOkay("9.0e1-",   "9.0e1",   "-") or
        not getJsonNumberOkay("9.0e+1-",  "9.0e+1",  "-") or
        not getJsonNumberOkay("9.0e-1-",  "9.0e-1",  "-") or
        not getJsonNumberOkay("9.0E1-",   "9.0E1",   "-") or
        not getJsonNumberOkay("9.0E+1-",  "9.0E+1",  "-") or
        not getJsonNumberOkay("9.0E-1-",  "9.0E-1",  "-") or
        not getJsonNumberOkay("9e1-",     "9e1",     "-") or
        not getJsonNumberOkay("9e+1-",    "9e+1",    "-") or
        not getJsonNumberOkay("9e-1-",    "9e-1",    "-") or
        not getJsonNumberOkay("9E1-",     "9E1",     "-") or
        not getJsonNumberOkay("9E+1-",    "9E+1",    "-") or
        not getJsonNumberOkay("9E-1-",    "9E-1",    "-") or
        not getJsonNumberOkay("-0-",      "-0",      "-") or
        not getJsonNumberOkay("-0.0-",    "-0.0",    "-") or
        not getJsonNumberOkay("-0.0e1-",  "-0.0e1",  "-") or
        not getJsonNumberOkay("-0.0e+1-", "-0.0e+1", "-") or
        not getJsonNumberOkay("-0.0e-1-", "-0.0e-1", "-") or
        not getJsonNumberOkay("-0.0E1-",  "-0.0E1",  "-") or
        not getJsonNumberOkay("-0.0E+1-", "-0.0E+1", "-") or
        not getJsonNumberOkay("-0.0E-1-", "-0.0E-1", "-") or
        not getJsonNumberOkay("-0e1-",    "-0e1",    "-") or
        not getJsonNumberOkay("-0e+1-",   "-0e+1",   "-") or
        not getJsonNumberOkay("-0e-1-",   "-0e-1",   "-") or
        not getJsonNumberOkay("-0E1-",    "-0E1",    "-") or
        not getJsonNumberOkay("-0E+1-",   "-0E+1",   "-") or
        not getJsonNumberOkay("-0E-1-",   "-0E-1",   "-") or
        not getJsonNumberOkay("-1-",      "-1",      "-") or
        not getJsonNumberOkay("-1.0-",    "-1.0",    "-") or
        not getJsonNumberOkay("-1.0e1-",  "-1.0e1",  "-") or
        not getJsonNumberOkay("-1.0e+1-", "-1.0e+1", "-") or
        not getJsonNumberOkay("-1.0e-1-", "-1.0e-1", "-") or
        not getJsonNumberOkay("-1.0E1-",  "-1.0E1",  "-") or
        not getJsonNumberOkay("-1.0E+1-", "-1.0E+1", "-") or
        not getJsonNumberOkay("-1.0E-1-", "-1.0E-1", "-") or
        not getJsonNumberOkay("-1e1-",    "-1e1",    "-") or
        not getJsonNumberOkay("-1e+1-",   "-1e+1",   "-") or
        not getJsonNumberOkay("-1e-1-",   "-1e-1",   "-") or
        not getJsonNumberOkay("-1E1-",    "-1E1",    "-") or
        not getJsonNumberOkay("-1E+1-",   "-1E+1",   "-") or
        not getJsonNumberOkay("-1E-1-",   "-1E-1",   "-") or
        not getJsonNumberOkay("-9-",      "-9",      "-") or
        not getJsonNumberOkay("-9.0-",    "-9.0",    "-") or
        not getJsonNumberOkay("-9.0e1-",  "-9.0e1",  "-") or
        not getJsonNumberOkay("-9.0e+1-", "-9.0e+1", "-") or
        not getJsonNumberOkay("-9.0e-1-", "-9.0e-1", "-") or
        not getJsonNumberOkay("-9.0E1-",  "-9.0E1",  "-") or
        not getJsonNumberOkay("-9.0E+1-", "-9.0E+1", "-") or
        not getJsonNumberOkay("-9.0E-1-", "-9.0E-1", "-") or
        not getJsonNumberOkay("-9e1-",    "-9e1",    "-") or
        not getJsonNumberOkay("-9e+1-",   "-9e+1",   "-") or
        not getJsonNumberOkay("-9e-1-",   "-9e-1",   "-") or
        not getJsonNumberOkay("-9E1-",    "-9E1",    "-") or
        not getJsonNumberOkay("-9E+1-",   "-9E+1",   "-") or
        not getJsonNumberOkay("-9E-1-",   "-9E-1",   "-") then
      writeln(" ***** getJsonNumber() does not work as expected. (4)");
      okay := FALSE;
    end if;

    if  not getJsonNumberRaisesRangeError(""      ) or
        not getJsonNumberRaisesRangeError("+"     ) or
        not getJsonNumberRaisesRangeError("++"    ) or
        not getJsonNumberRaisesRangeError("+-"    ) or
        not getJsonNumberRaisesRangeError("++0"   ) or
        not getJsonNumberRaisesRangeError("+-0"   ) or
        not getJsonNumberRaisesRangeError("++1"   ) or
        not getJsonNumberRaisesRangeError("+-1"   ) or
        not getJsonNumberRaisesRangeError("+a"    ) or
        not getJsonNumberRaisesRangeError("-"     ) or
        not getJsonNumberRaisesRangeError("-+"    ) or
        not getJsonNumberRaisesRangeError("--"    ) or
        not getJsonNumberRaisesRangeError("-+0"   ) or
        not getJsonNumberRaisesRangeError("--0"   ) or
        not getJsonNumberRaisesRangeError("-+1"   ) or
        not getJsonNumberRaisesRangeError("--1"   ) or
        not getJsonNumberRaisesRangeError("-a"    ) or
        not getJsonNumberRaisesRangeError("x"     ) or
        not getJsonNumberRaisesRangeError("0."    ) or
        not getJsonNumberRaisesRangeError("0e"    ) or
        not getJsonNumberRaisesRangeError("0e+"   ) or
        not getJsonNumberRaisesRangeError("0e-"   ) or
        not getJsonNumberRaisesRangeError("0E"    ) or
        not getJsonNumberRaisesRangeError("0E+"   ) or
        not getJsonNumberRaisesRangeError("0E-"   ) or
        not getJsonNumberRaisesRangeError("0.0e"  ) or
        not getJsonNumberRaisesRangeError("0.0e+" ) or
        not getJsonNumberRaisesRangeError("0.0e-" ) or
        not getJsonNumberRaisesRangeError("0.0E"  ) or
        not getJsonNumberRaisesRangeError("0.0E+" ) or
        not getJsonNumberRaisesRangeError("0.0E-" ) or
        not getJsonNumberRaisesRangeError("1."    ) or
        not getJsonNumberRaisesRangeError("1e"    ) or
        not getJsonNumberRaisesRangeError("1e+"   ) or
        not getJsonNumberRaisesRangeError("1e-"   ) or
        not getJsonNumberRaisesRangeError("1E"    ) or
        not getJsonNumberRaisesRangeError("1E+"   ) or
        not getJsonNumberRaisesRangeError("1E-"   ) or
        not getJsonNumberRaisesRangeError("1.0e"  ) or
        not getJsonNumberRaisesRangeError("1.0e+" ) or
        not getJsonNumberRaisesRangeError("1.0e-" ) or
        not getJsonNumberRaisesRangeError("1.0E"  ) or
        not getJsonNumberRaisesRangeError("1.0E+" ) or
        not getJsonNumberRaisesRangeError("1.0E-" ) or
        not getJsonNumberRaisesRangeError("-0."   ) or
        not getJsonNumberRaisesRangeError("-0e"   ) or
        not getJsonNumberRaisesRangeError("-0e+"  ) or
        not getJsonNumberRaisesRangeError("-0e-"  ) or
        not getJsonNumberRaisesRangeError("-0E"   ) or
        not getJsonNumberRaisesRangeError("-0E+"  ) or
        not getJsonNumberRaisesRangeError("-0E-"  ) or
        not getJsonNumberRaisesRangeError("-0.0e" ) or
        not getJsonNumberRaisesRangeError("-0.0e+") or
        not getJsonNumberRaisesRangeError("-0.0e-") or
        not getJsonNumberRaisesRangeError("-0.0E" ) or
        not getJsonNumberRaisesRangeError("-0.0E+") or
        not getJsonNumberRaisesRangeError("-0.0E-") or
        not getJsonNumberRaisesRangeError("-1."   ) or
        not getJsonNumberRaisesRangeError("-1e"   ) or
        not getJsonNumberRaisesRangeError("-1e+"  ) or
        not getJsonNumberRaisesRangeError("-1e-"  ) or
        not getJsonNumberRaisesRangeError("-1E"   ) or
        not getJsonNumberRaisesRangeError("-1E+"  ) or
        not getJsonNumberRaisesRangeError("-1E-"  ) or
        not getJsonNumberRaisesRangeError("-1.0e" ) or
        not getJsonNumberRaisesRangeError("-1.0e+") or
        not getJsonNumberRaisesRangeError("-1.0e-") or
        not getJsonNumberRaisesRangeError("-1.0E" ) or
        not getJsonNumberRaisesRangeError("-1.0E+") or
        not getJsonNumberRaisesRangeError("-1.0E-") then
      writeln(" ***** getJsonNumber() does not raise RANGE_ERROR.");
      okay := FALSE;
    end if;
  end func;


const proc: checkGetJsonNumber is func
  local
    var boolean: okay is TRUE;
  begin
    if not checkGetJsonNumber1 then
      okay := FALSE;
    end if;

    if okay then
      writeln("The function getJsonNumber works correctly.");
    end if;
  end func;


const proc: checkGetJsonSymbol is func
  local
    var string: stri is "";
    var file: aFile is STD_NULL;
    var boolean: okay is TRUE;
    var boolean: ok is TRUE;
  begin
    stri := " null "; ok := ok and getJsonSymbol(stri) = "null"  and stri = " ";
    stri := "\ntrue"; ok := ok and getJsonSymbol(stri) = "true"  and stri = "";
    stri := ",-9";    ok := ok and getJsonSymbol(stri) = ","     and stri = "-9";
    stri := ":true";  ok := ok and getJsonSymbol(stri) = ":"     and stri = "true";
    stri := "\r{ } "; ok := ok and getJsonSymbol(stri) = "{"     and stri = " } ";
    stri := " [123]"; ok := ok and getJsonSymbol(stri) = "["     and stri = "123]";
    stri := "\t987 "; ok := ok and getJsonSymbol(stri) = "987"   and stri = " ";
    stri := " -123,"; ok := ok and getJsonSymbol(stri) = "-123"  and stri = ",";
    stri := " \"x\""; ok := ok and getJsonSymbol(stri) = "\"x\"" and stri = "";
    if not ok then
      writeln(" ***** The function getJsonSymbol(STRING) does not work correctly.");
      okay := FALSE;
    end if;

    ok := TRUE;
    aFile := initScan(" null "); ok := ok and getJsonSymbol(aFile) = "null"  and aFile.bufferChar = ' ';
    aFile := initScan("\ntrue"); ok := ok and getJsonSymbol(aFile) = "true"  and aFile.bufferChar = EOF;
    aFile := initScan(",-9");    ok := ok and getJsonSymbol(aFile) = ","     and aFile.bufferChar = '-';
    aFile := initScan(":true");  ok := ok and getJsonSymbol(aFile) = ":"     and aFile.bufferChar = 't';
    aFile := initScan("\r{ } "); ok := ok and getJsonSymbol(aFile) = "{"     and aFile.bufferChar = ' ';
    aFile := initScan(" [123]"); ok := ok and getJsonSymbol(aFile) = "["     and aFile.bufferChar = '1';
    aFile := initScan("\t987 "); ok := ok and getJsonSymbol(aFile) = "987"   and aFile.bufferChar = ' ';
    aFile := initScan(" -123,"); ok := ok and getJsonSymbol(aFile) = "-123"  and aFile.bufferChar = ',';
    aFile := initScan(" \"x\""); ok := ok and getJsonSymbol(aFile) = "\"x\"" and aFile.bufferChar = EOF;
    if not ok then
      writeln(" ***** The function getJsonSymbol(FILE) does not work correctly.");
      okay := FALSE;
    end if;

    if okay then
      writeln("The function getJsonSymbol works correctly.");
    end if;
  end func;


const proc: checkJsonDom is func
  local
    var boolean: okay is TRUE;
  begin
    if  category(jsonValue(NULL))                 <> JSON_NULL    or
        category(jsonValue(TRUE))                 <> JSON_BOOLEAN or
        category(jsonValue(FALSE))                <> JSON_BOOLEAN or
        category(jsonValue(              12345 )) <> JSON_NUMBER  or
        category(jsonValue(9223372036854775808_)) <> JSON_NUMBER  or
        category(jsonValue(0.00000762939453125 )) <> JSON_NUMBER  or
        category(jsonValue("foo"))                <> JSON_STRING  then
      writeln(" ***** The function category(jsonValue) does not work correctly. (1)");
      okay := FALSE;
    end if;

    if  category(readJson("null"))                <> JSON_NULL    or
        category(readJson("true"))                <> JSON_BOOLEAN or
        category(readJson("false"))               <> JSON_BOOLEAN or
        category(readJson("12345"))               <> JSON_NUMBER  or
        category(readJson("9223372036854775808")) <> JSON_NUMBER  or
        category(readJson("0.00000762939453125")) <> JSON_NUMBER  or
        category(readJson("\"foo\""))             <> JSON_STRING  or
        category(readJson("[]"))                  <> JSON_ARRAY   or
        category(readJson("[1, \"foo\"]"))        <> JSON_ARRAY   or
        category(readJson("{}"))                  <> JSON_OBJECT  or
        category(readJson("{\"foo\": null}"))     <> JSON_OBJECT  then
      writeln(" ***** The function category(jsonValue) does not work correctly. (2)");
      okay := FALSE;
    end if;

    if  type(jsonValue(NULL))                 <> void       or
        type(jsonValue(TRUE))                 <> boolean    or
        type(jsonValue(FALSE))                <> boolean    or
        type(jsonValue(              12345 )) <> integer    or
        type(jsonValue(9223372036854775808_)) <> bigInteger or
        type(jsonValue(0.00000762939453125 )) <> float      or
        type(jsonValue("foo"))                <> string     then
      writeln(" ***** The function type(jsonValue) does not work correctly. (1)");
      okay := FALSE;
    end if;

    if  type(readJson("null"))                <> void           or
        type(readJson("true"))                <> boolean        or
        type(readJson("false"))               <> boolean        or
        type(readJson("12345"))               <> integer        or
        type(readJson("9223372036854775808")) <> bigInteger     or
        type(readJson("0.00000762939453125")) <> float          or
        type(readJson("\"foo\""))             <> string         or
        type(readJson("{}"))                  <> jsonValueMap   or
        type(readJson("{\"foo\": null}"))     <> jsonValueMap   or
        type(readJson("[]"))                  <> jsonValueArray or
        type(readJson("[1, \"foo\"]"))        <> jsonValueArray then
      writeln(" ***** The function type(jsonValue) does not work correctly. (2)");
      okay := FALSE;
    end if;

    if  void(      jsonValue(NULL))                 <> empty                or
        boolean(   jsonValue(TRUE))                 <> TRUE                 or
        boolean(   jsonValue(FALSE))                <> FALSE                or
        integer(   jsonValue(              12345 )) <>                12345 or
        bigInteger(jsonValue(9223372036854775808_)) <> 9223372036854775808_ or
        float(     jsonValue(0.00000762939453125 )) <> 0.00000762939453125  or
        string(    jsonValue("foo"))                <> "foo"                then
      writeln(" ***** Converting a jsonValue to a plain value does not work correctly. (1)");
      okay := FALSE;
    end if;

    if  void(      readJson("null"))                <> empty                or
        boolean(   readJson("true"))                <> TRUE                 or
        boolean(   readJson("false"))               <> FALSE                or
        integer(   readJson("12345"))               <>               12345  or
        bigInteger(readJson("9223372036854775808")) <> 9223372036854775808_ or
        float(     readJson("0.00000762939453125")) <> 0.00000762939453125  or
        string(    readJson("\"foo\""))             <> "foo"                then
      writeln(" ***** Converting a jsonValue to a plain value does not work correctly.(2)");
      okay := FALSE;
    end if;

    if  void(      jsonValue(NULL))                 <> empty                or
        boolean(   jsonValue(TRUE))                 <> TRUE                 or
        boolean(   jsonValue(FALSE))                <> FALSE                or
        integer(   jsonValue(              12345 )) <>               12345  or
        bigInteger(jsonValue(9223372036854775808_)) <> 9223372036854775808_ or
        float(     jsonValue(0.00000762939453125 )) <> 0.00000762939453125  or
        string(    jsonValue("foo"))                <> "foo"                then
      writeln(" ***** Converting a plain value to a jsonValue does not work correctly.");
      okay := FALSE;
    end if;

    if  type(   readJson("{\"fee\": 0.5, \"foo\": true}")["fee"]) <> float   or
        float(  readJson("{\"fee\": 0.5, \"foo\": true}")["fee"]) <> 0.5     or
        type(   readJson("{\"fee\": 0.5, \"foo\": true}")["foo"]) <> boolean or
        boolean(readJson("{\"fee\": 0.5, \"foo\": true}")["foo"]) <> TRUE    then
      writeln(" ***** Selecting an element from an jsonObject does not work correctly.");
      okay := FALSE;
    end if;

    if  not ("fee"     in readJson("{\"fee\": 0.5, \"foo\": true}")) or
             "fee" not in readJson("{\"fee\": 0.5, \"foo\": true}")  or
        not ("foo"     in readJson("{\"fee\": 0.5, \"foo\": true}")) or
             "foo" not in readJson("{\"fee\": 0.5, \"foo\": true}")  then
      writeln(" ***** Checking for element names in an jsonObject does not work correctly.");
      okay := FALSE;
    end if;

    if  keys(readJson("{}"))                            <> 0 times ""        or
        keys(readJson("{\"fee\": 0.5}"))                <> [] ("fee")        or
        keys(readJson("{\"fee\": 0.5, \"foo\": true}")) <> [] ("fee", "foo") then
      writeln(" ***** Getting the list of element names from an jsonObject does not work correctly.");
      okay := FALSE;
    end if;

    if          values(readJson("[]"))              <> 0 times jsonValue.value or
        string( values(readJson("[\"fee\"]"))[1])   <> "fee"                   or
        float(  values(readJson("[0.5, true]"))[1]) <> 0.5                     or
        boolean(values(readJson("[0.5, true]"))[2]) <> TRUE                    then
      writeln(" ***** Getting the list of elements from an jsonArray does not work correctly.");
      okay := FALSE;
    end if;

    if  type(   jsonValue([] (jsonValue(9), jsonValue("x")))[1]) <> integer or
        integer(jsonValue([] (jsonValue(9), jsonValue("x")))[1]) <> 9       or
        type(   jsonValue([] (jsonValue(9), jsonValue("x")))[2]) <> string  or
        string( jsonValue([] (jsonValue(9), jsonValue("x")))[2]) <> "x"     then
      writeln(" ***** Indexing into a jsonArray does not work correctly. (1)");
      okay := FALSE;
    end if;

    if  type(   readJson("[1, \"foo\", false, 0.125]")[1]) <> integer or
        integer(readJson("[1, \"foo\", false, 0.125]")[1]) <> 1       or
        type(   readJson("[1, \"foo\", false, 0.125]")[2]) <> string  or
        string( readJson("[1, \"foo\", false, 0.125]")[2]) <> "foo"   or
        type(   readJson("[1, \"foo\", false, 0.125]")[3]) <> boolean or
        boolean(readJson("[1, \"foo\", false, 0.125]")[3]) <> FALSE   or
        type(   readJson("[1, \"foo\", false, 0.125]")[4]) <> float   or
        float(  readJson("[1, \"foo\", false, 0.125]")[4]) <> 0.125   then
      writeln(" ***** Indexing into a jsonArray does not work correctly. (2)");
      okay := FALSE;
    end if;

    if  length(jsonValue(0 times jsonValue.value)) <> 0 or
        minIdx(jsonValue(0 times jsonValue.value)) <> 1 or
        maxIdx(jsonValue(0 times jsonValue.value)) <> 0 or
        length(jsonValue([] (jsonValue(1)))) <> 1 or
        minIdx(jsonValue([] (jsonValue(1)))) <> 1 or
        maxIdx(jsonValue([] (jsonValue(1)))) <> 1 or
        length(jsonValue([] (jsonValue(1), jsonValue(2)))) <> 2 or
        minIdx(jsonValue([] (jsonValue(1), jsonValue(2)))) <> 1 or
        maxIdx(jsonValue([] (jsonValue(1), jsonValue(2)))) <> 2 or
        length(jsonValue([] (jsonValue(1), jsonValue(2), jsonValue(3)))) <> 3 or
        minIdx(jsonValue([] (jsonValue(1), jsonValue(2), jsonValue(3)))) <> 1 or
        maxIdx(jsonValue([] (jsonValue(1), jsonValue(2), jsonValue(3)))) <> 3 or
        length(jsonValue([] (jsonValue(1), jsonValue(2), jsonValue(3), jsonValue(4)))) <> 4 or
        minIdx(jsonValue([] (jsonValue(1), jsonValue(2), jsonValue(3), jsonValue(4)))) <> 1 or
        maxIdx(jsonValue([] (jsonValue(1), jsonValue(2), jsonValue(3), jsonValue(4)))) <> 4 then
      writeln(" ***** Length, minIdx and maxIdx of a jsonArray does not work correctly. (1)");
      okay := FALSE;
    end if;

    if  length(readJson("[]")) <> 0 or
        minIdx(readJson("[]")) <> 1 or
        maxIdx(readJson("[]")) <> 0 or
        length(readJson("[1]")) <> 1 or
        minIdx(readJson("[1]")) <> 1 or
        maxIdx(readJson("[1]")) <> 1 or
        length(readJson("[1, \"foo\"]")) <> 2 or
        minIdx(readJson("[1, \"foo\"]")) <> 1 or
        maxIdx(readJson("[1, \"foo\"]")) <> 2 or
        length(readJson("[1, \"foo\", false]")) <> 3 or
        minIdx(readJson("[1, \"foo\", false]")) <> 1 or
        maxIdx(readJson("[1, \"foo\", false]")) <> 3 or
        length(readJson("[1, \"foo\", false, 0.125]")) <> 4 or
        minIdx(readJson("[1, \"foo\", false, 0.125]")) <> 1 or
        maxIdx(readJson("[1, \"foo\", false, 0.125]")) <> 4 then
      writeln(" ***** Length, minIdx and maxIdx of a jsonArray does not work correctly. (2)");
      okay := FALSE;
    end if;

    if  not raisesIllegalAction(string(readJson("null")))                or
        not raisesIllegalAction(string(readJson("true")))                or
        not raisesIllegalAction(string(readJson("false")))               or
        not raisesIllegalAction(string(readJson("12345")))               or
        not raisesIllegalAction(string(readJson("9223372036854775808"))) or
        not raisesIllegalAction(string(readJson("0.00000762939453125"))) or
        not raisesIllegalAction(string(readJson("{}")))                  or
        not raisesIllegalAction(string(readJson("{\"foo\": null}")))     or
        not raisesIllegalAction(string(readJson("[]")))                  or
        not raisesIllegalAction(string(readJson("[1, \"foo\"]")))        then
      writeln(" ***** Converting a jsonValue other than jsonString to a string does not work correctly.");
      okay := FALSE;
    end if;

    if  not raisesIllegalAction(integer(readJson("null")))            or
        not raisesIllegalAction(integer(readJson("true")))            or
        not raisesIllegalAction(integer(readJson("false")))           or
        not raisesIllegalAction(integer(readJson("\"foo\"")))         or
        not raisesIllegalAction(integer(readJson("{}")))              or
        not raisesIllegalAction(integer(readJson("{\"foo\": null}"))) or
        not raisesIllegalAction(integer(readJson("[]")))              or
        not raisesIllegalAction(integer(readJson("[1, \"foo\"]")))    then
      writeln(" ***** Converting a jsonValue other than jsonNumber to an integer does not work correctly.");
      okay := FALSE;
    end if;

    if  not raisesIllegalAction(bigInteger(readJson("null")))            or
        not raisesIllegalAction(bigInteger(readJson("true")))            or
        not raisesIllegalAction(bigInteger(readJson("false")))           or
        not raisesIllegalAction(bigInteger(readJson("\"foo\"")))         or
        not raisesIllegalAction(bigInteger(readJson("{}")))              or
        not raisesIllegalAction(bigInteger(readJson("{\"foo\": null}"))) or
        not raisesIllegalAction(bigInteger(readJson("[]")))              or
        not raisesIllegalAction(bigInteger(readJson("[1, \"foo\"]")))    then
      writeln(" ***** Converting a jsonValue other than jsonNumber to a bigInteger does not work correctly.");
      okay := FALSE;
    end if;

    if  not raisesIllegalAction(float(readJson("null")))            or
        not raisesIllegalAction(float(readJson("true")))            or
        not raisesIllegalAction(float(readJson("false")))           or
        not raisesIllegalAction(float(readJson("\"foo\"")))         or
        not raisesIllegalAction(float(readJson("{}")))              or
        not raisesIllegalAction(float(readJson("{\"foo\": null}"))) or
        not raisesIllegalAction(float(readJson("[]")))              or
        not raisesIllegalAction(float(readJson("[1, \"foo\"]")))    then
      writeln(" ***** Converting a jsonValue other than jsonNumber to a float does not work correctly.");
      okay := FALSE;
    end if;

    if  not raisesIllegalAction(length(readJson("null")))                or
        not raisesIllegalAction(length(readJson("true")))                or
        not raisesIllegalAction(length(readJson("false")))               or
        not raisesIllegalAction(length(readJson("12345")))               or
        not raisesIllegalAction(length(readJson("9223372036854775808"))) or
        not raisesIllegalAction(length(readJson("0.00000762939453125"))) or
        not raisesIllegalAction(length(readJson("\"foo\"")))             or
        not raisesIllegalAction(length(readJson("{}")))                  or
        not raisesIllegalAction(length(readJson("{\"foo\": null}")))     then
      writeln(" ***** Computing the length of a jsonValue other than jsonArray does not work correctly.");
      okay := FALSE;
    end if;

    if okay then
      writeln("JSON DOM functions work correctly.");
    end if;
  end func;


const proc: main is func
  begin
    writeln;
    checkGetJsonString;
    checkGetJsonNumber;
    checkGetJsonSymbol;
    checkJsonDom;
  end func;
