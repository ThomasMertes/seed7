
(********************************************************************)
(*                                                                  *)
(*  chkbitdata.sd7  Checks functions from the bitdata.s7i library.  *)
(*  Copyright (C) 2019  Thomas Mertes                               *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the           *)
(*  Free Software Foundation, Inc., 51 Franklin Street,             *)
(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)
(*                                                                  *)
(********************************************************************)


$ include "seed7_05.s7i";
  include "bitdata.s7i";
  include "strifile.s7i";


const func boolean: chkGetBitLsb (in string: stri, in integer: bytePos,
    in integer: bitPos, in integer: bitsExpected,
    in integer: bytePosExpected, in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var integer: bytePosVar is 0;
    var integer: bitPosVar is 0;
    var integer: bits is 0;
    var char: ch is ' ';
    var file: testFile is STD_NULL;
  begin
    bytePosVar := bytePos;
    bitPosVar := bitPos;
    bits := getBitLsb(stri, bytePosVar, bitPosVar);
    if bits <> bitsExpected or bytePosVar <> bytePosExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("getBitLsb(\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 <& ";");
      end for;
      writeln("\", " <& bytePos <& ", " <& bitPos <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if bytePosVar <> bytePosExpected then
        writeln(" ***** Expected bytePos " <& bytePosExpected <& " found " <& bytePosVar);
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    testFile := openStrifile(stri);
    ignore(gets(testFile, pred(bytePos)));
    if bitPos = 0 then
      bitPosVar := 8;
    else
      bitPosVar := bitPos;
      testFile.bufferChar := getc(testFile);
    end if;
    bits := getBitLsb(testFile, bitPosVar);
    if bits <> bitsExpected or (bitPosExpected = 0 and bitPosVar <> 8) or
        (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
      okay := FALSE;
      write("\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 <& ";");
      end for;
      writeln("\": getBitLsb(testFile, " <& bitPos <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if (bitPosExpected = 0 and bitPosVar <> 8) or
          (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
  end func;


const proc: chkGetBitLsb is func
  begin
    if  chkGetBitLsb("\2#0;",                   1, 0, 2#0, 1, 1) and
        chkGetBitLsb("\2#000;",                 1, 1, 2#0, 1, 2) and
        chkGetBitLsb("\2#101;",                 1, 1, 2#0, 1, 2) and
        chkGetBitLsb("\2#01001;",               1, 2, 2#0, 1, 3) and
        chkGetBitLsb("\2#10010;",               1, 2, 2#0, 1, 3) and
        chkGetBitLsb("\2#0100010;",             1, 3, 2#0, 1, 4) and
        chkGetBitLsb("\2#1010101;",             1, 3, 2#0, 1, 4) and
        chkGetBitLsb("\2#10100101;\2#0;",       1, 4, 2#0, 1, 5) and
        chkGetBitLsb("\2#01101011;\2#1;",       1, 4, 2#0, 1, 5) and
        chkGetBitLsb("\2#11001011;\2#010;",     1, 5, 2#0, 1, 6) and
        chkGetBitLsb("\2#11010011;\2#100;",     1, 5, 2#0, 1, 6) and
        chkGetBitLsb("\2#10010011;\2#01001;",   1, 6, 2#0, 1, 7) and
        chkGetBitLsb("\2#10110101;\2#11010;",   1, 6, 2#0, 1, 7) and
        chkGetBitLsb("\2#00110101;\2#0110101;", 1, 7, 2#0, 2, 0) and
        chkGetBitLsb("\2#01011001;\2#1011001;", 1, 7, 2#0, 2, 0) and
        chkGetBitLsb("\2#1;",                   1, 0, 2#1, 1, 1) and
        chkGetBitLsb("\2#010;",                 1, 1, 2#1, 1, 2) and
        chkGetBitLsb("\2#111;",                 1, 1, 2#1, 1, 2) and
        chkGetBitLsb("\2#01101;",               1, 2, 2#1, 1, 3) and
        chkGetBitLsb("\2#10110;",               1, 2, 2#1, 1, 3) and
        chkGetBitLsb("\2#0101010;",             1, 3, 2#1, 1, 4) and
        chkGetBitLsb("\2#1011101;",             1, 3, 2#1, 1, 4) and
        chkGetBitLsb("\2#10110101;\2#0;",       1, 4, 2#1, 1, 5) and
        chkGetBitLsb("\2#01111011;\2#1;",       1, 4, 2#1, 1, 5) and
        chkGetBitLsb("\2#11101011;\2#010;",     1, 5, 2#1, 1, 6) and
        chkGetBitLsb("\2#11110011;\2#100;",     1, 5, 2#1, 1, 6) and
        chkGetBitLsb("\2#11010011;\2#01001;",   1, 6, 2#1, 1, 7) and
        chkGetBitLsb("\2#11110101;\2#11010;",   1, 6, 2#1, 1, 7) and
        chkGetBitLsb("\2#10110101;\2#0110101;", 1, 7, 2#1, 2, 0) and
        chkGetBitLsb("\2#11011001;\2#1011001;", 1, 7, 2#1, 2, 0) then
      writeln("getBitLsb works correct.");
    end if;
  end func;


const func boolean: chkGetBitsLsb (in string: stri, in integer: bytePos,
    in integer: bitPos, in integer: bitsNeeded, in integer: bitsExpected,
    in integer: bytePosExpected, in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var integer: bytePosVar is 0;
    var integer: bitPosVar is 0;
    var integer: bits is 0;
    var char: ch is ' ';
    var file: testFile is STD_NULL;
  begin
    bytePosVar := bytePos;
    bitPosVar := bitPos;
    bits := getBitsLsb(stri, bytePosVar, bitPosVar, bitsNeeded);
    if bits <> bitsExpected or bytePosVar <> bytePosExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("getBitsLsb(\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 <& ";");
      end for;
      writeln("\", " <& bytePos <& ", " <& bitPos <& ", " <& bitsNeeded <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if bytePosVar <> bytePosExpected then
        writeln(" ***** Expected bytePos " <& bytePosExpected <& " found " <& bytePosVar);
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    testFile := openStrifile(stri);
    ignore(gets(testFile, pred(bytePos)));
    if bitPos = 0 then
      bitPosVar := 8;
    else
      bitPosVar := bitPos;
      testFile.bufferChar := getc(testFile);
    end if;
    bits := getBitsLsb(testFile, bitPosVar, bitsNeeded);
    if bits <> bitsExpected or (bitPosExpected = 0 and bitPosVar <> 8) or
        (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
      okay := FALSE;
      write("\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 <& ";");
      end for;
      writeln("\": getBitsLsb(testFile, " <& bitPos <& ", " <& bitsNeeded <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if (bitPosExpected = 0 and bitPosVar <> 8) or
          (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
  end func;


const proc: chkGetBitsLsb is func
  begin
    if  chkGetBitsLsb("\2#0;",                                                   1, 0,  1,                     2#0, 1, 1) and
        chkGetBitsLsb("\2#000;",                                                 1, 1,  1,                     2#0, 1, 2) and
        chkGetBitsLsb("\2#101;",                                                 1, 1,  1,                     2#0, 1, 2) and
        chkGetBitsLsb("\2#01001;",                                               1, 2,  1,                     2#0, 1, 3) and
        chkGetBitsLsb("\2#10010;",                                               1, 2,  1,                     2#0, 1, 3) and
        chkGetBitsLsb("\2#0100010;",                                             1, 3,  1,                     2#0, 1, 4) and
        chkGetBitsLsb("\2#1010101;",                                             1, 3,  1,                     2#0, 1, 4) and
        chkGetBitsLsb("\2#10100101;\2#0;",                                       1, 4,  1,                     2#0, 1, 5) and
        chkGetBitsLsb("\2#01101011;\2#1;",                                       1, 4,  1,                     2#0, 1, 5) and
        chkGetBitsLsb("\2#11001011;\2#010;",                                     1, 5,  1,                     2#0, 1, 6) and
        chkGetBitsLsb("\2#11010011;\2#100;",                                     1, 5,  1,                     2#0, 1, 6) and
        chkGetBitsLsb("\2#10010011;\2#01001;",                                   1, 6,  1,                     2#0, 1, 7) and
        chkGetBitsLsb("\2#10110101;\2#11010;",                                   1, 6,  1,                     2#0, 1, 7) and
        chkGetBitsLsb("\2#00110101;\2#0110101;",                                 1, 7,  1,                     2#0, 2, 0) and
        chkGetBitsLsb("\2#01011001;\2#1011001;",                                 1, 7,  1,                     2#0, 2, 0) and
        chkGetBitsLsb("\2#1;",                                                   1, 0,  1,                     2#1, 1, 1) and
        chkGetBitsLsb("\2#010;",                                                 1, 1,  1,                     2#1, 1, 2) and
        chkGetBitsLsb("\2#111;",                                                 1, 1,  1,                     2#1, 1, 2) and
        chkGetBitsLsb("\2#01101;",                                               1, 2,  1,                     2#1, 1, 3) and
        chkGetBitsLsb("\2#10110;",                                               1, 2,  1,                     2#1, 1, 3) and
        chkGetBitsLsb("\2#0101010;",                                             1, 3,  1,                     2#1, 1, 4) and
        chkGetBitsLsb("\2#1011101;",                                             1, 3,  1,                     2#1, 1, 4) and
        chkGetBitsLsb("\2#10110101;\2#0;",                                       1, 4,  1,                     2#1, 1, 5) and
        chkGetBitsLsb("\2#01111011;\2#1;",                                       1, 4,  1,                     2#1, 1, 5) and
        chkGetBitsLsb("\2#11101011;\2#010;",                                     1, 5,  1,                     2#1, 1, 6) and
        chkGetBitsLsb("\2#11110011;\2#100;",                                     1, 5,  1,                     2#1, 1, 6) and
        chkGetBitsLsb("\2#11010011;\2#01001;",                                   1, 6,  1,                     2#1, 1, 7) and
        chkGetBitsLsb("\2#11110101;\2#11010;",                                   1, 6,  1,                     2#1, 1, 7) and
        chkGetBitsLsb("\2#10110101;\2#0110101;",                                 1, 7,  1,                     2#1, 2, 0) and
        chkGetBitsLsb("\2#11011001;\2#1011001;",                                 1, 7,  1,                     2#1, 2, 0) and
        chkGetBitsLsb("\2#01;",                                                  1, 0,  2,                    2#01, 1, 2) and
        chkGetBitsLsb("\2#0010;",                                                1, 1,  2,                    2#01, 1, 3) and
        chkGetBitsLsb("\2#1011;",                                                1, 1,  2,                    2#01, 1, 3) and
        chkGetBitsLsb("\2#010101;",                                              1, 2,  2,                    2#01, 1, 4) and
        chkGetBitsLsb("\2#100110;",                                              1, 2,  2,                    2#01, 1, 4) and
        chkGetBitsLsb("\2#01001010;",                                            1, 3,  2,                    2#01, 1, 5) and
        chkGetBitsLsb("\2#10101101;",                                            1, 3,  2,                    2#01, 1, 5) and
        chkGetBitsLsb("\2#01010101;\2#01;",                                      1, 4,  2,                    2#01, 1, 6) and
        chkGetBitsLsb("\2#11011011;\2#10;",                                      1, 4,  2,                    2#01, 1, 6) and
        chkGetBitsLsb("\2#10101011;\2#0101;",                                    1, 5,  2,                    2#01, 1, 7) and
        chkGetBitsLsb("\2#10110011;\2#1001;",                                    1, 5,  2,                    2#01, 1, 7) and
        chkGetBitsLsb("\2#01010011;\2#010011;",                                  1, 6,  2,                    2#01, 2, 0) and
        chkGetBitsLsb("\2#01110101;\2#110101;",                                  1, 6,  2,                    2#01, 2, 0) and
        chkGetBitsLsb("\2#10110101;\2#01101010;",                                1, 7,  2,                    2#01, 2, 1) and
        chkGetBitsLsb("\2#11011001;\2#10110010;",                                1, 7,  2,                    2#01, 2, 1) and
        chkGetBitsLsb("\2#10;",                                                  1, 0,  2,                    2#10, 1, 2) and
        chkGetBitsLsb("\2#0100;",                                                1, 1,  2,                    2#10, 1, 3) and
        chkGetBitsLsb("\2#1101;",                                                1, 1,  2,                    2#10, 1, 3) and
        chkGetBitsLsb("\2#011001;",                                              1, 2,  2,                    2#10, 1, 4) and
        chkGetBitsLsb("\2#101010;",                                              1, 2,  2,                    2#10, 1, 4) and
        chkGetBitsLsb("\2#01010010;",                                            1, 3,  2,                    2#10, 1, 5) and
        chkGetBitsLsb("\2#10110101;",                                            1, 3,  2,                    2#10, 1, 5) and
        chkGetBitsLsb("\2#01100101;\2#01;",                                      1, 4,  2,                    2#10, 1, 6) and
        chkGetBitsLsb("\2#11101011;\2#10;",                                      1, 4,  2,                    2#10, 1, 6) and
        chkGetBitsLsb("\2#11001011;\2#0101;",                                    1, 5,  2,                    2#10, 1, 7) and
        chkGetBitsLsb("\2#11010011;\2#1001;",                                    1, 5,  2,                    2#10, 1, 7) and
        chkGetBitsLsb("\2#10010011;\2#010011;",                                  1, 6,  2,                    2#10, 2, 0) and
        chkGetBitsLsb("\2#10110101;\2#110101;",                                  1, 6,  2,                    2#10, 2, 0) and
        chkGetBitsLsb("\2#00110101;\2#01101011;",                                1, 7,  2,                    2#10, 2, 1) and
        chkGetBitsLsb("\2#01011001;\2#10110011;",                                1, 7,  2,                    2#10, 2, 1) and
        chkGetBitsLsb("\2#010;",                                                 1, 0,  3,                   2#010, 1, 3) and
        chkGetBitsLsb("\2#00100;",                                               1, 1,  3,                   2#010, 1, 4) and
        chkGetBitsLsb("\2#10101;",                                               1, 1,  3,                   2#010, 1, 4) and
        chkGetBitsLsb("\2#0101001;",                                             1, 2,  3,                   2#010, 1, 5) and
        chkGetBitsLsb("\2#1001010;",                                             1, 2,  3,                   2#010, 1, 5) and
        chkGetBitsLsb("\2#10010010;\2#0;",                                       1, 3,  3,                   2#010, 1, 6) and
        chkGetBitsLsb("\2#01010101;\2#1;",                                       1, 3,  3,                   2#010, 1, 6) and
        chkGetBitsLsb("\2#10100101;\2#010;",                                     1, 4,  3,                   2#010, 1, 7) and
        chkGetBitsLsb("\2#10101011;\2#101;",                                     1, 4,  3,                   2#010, 1, 7) and
        chkGetBitsLsb("\2#01001011;\2#01011;",                                   1, 5,  3,                   2#010, 2, 0) and
        chkGetBitsLsb("\2#01010011;\2#10011;",                                   1, 5,  3,                   2#010, 2, 0) and
        chkGetBitsLsb("\2#10010011;\2#0100110;",                                 1, 6,  3,                   2#010, 2, 1) and
        chkGetBitsLsb("\2#10110101;\2#1101010;",                                 1, 6,  3,                   2#010, 2, 1) and
        chkGetBitsLsb("\2#00110101;\2#11010101;\2#0;",                           1, 7,  3,                   2#010, 2, 2) and
        chkGetBitsLsb("\2#01011001;\2#01100101;\2#1;",                           1, 7,  3,                   2#010, 2, 2) and
        chkGetBitsLsb("\2#101;",                                                 1, 0,  3,                   2#101, 1, 3) and
        chkGetBitsLsb("\2#01010;",                                               1, 1,  3,                   2#101, 1, 4) and
        chkGetBitsLsb("\2#11011;",                                               1, 1,  3,                   2#101, 1, 4) and
        chkGetBitsLsb("\2#0110101;",                                             1, 2,  3,                   2#101, 1, 5) and
        chkGetBitsLsb("\2#1010110;",                                             1, 2,  3,                   2#101, 1, 5) and
        chkGetBitsLsb("\2#10101010;\2#0;",                                       1, 3,  3,                   2#101, 1, 6) and
        chkGetBitsLsb("\2#01101101;\2#1;",                                       1, 3,  3,                   2#101, 1, 6) and
        chkGetBitsLsb("\2#11010101;\2#010;",                                     1, 4,  3,                   2#101, 1, 7) and
        chkGetBitsLsb("\2#11011011;\2#101;",                                     1, 4,  3,                   2#101, 1, 7) and
        chkGetBitsLsb("\2#10101011;\2#01011;",                                   1, 5,  3,                   2#101, 2, 0) and
        chkGetBitsLsb("\2#10110011;\2#10011;",                                   1, 5,  3,                   2#101, 2, 0) and
        chkGetBitsLsb("\2#01010011;\2#0100111;",                                 1, 6,  3,                   2#101, 2, 1) and
        chkGetBitsLsb("\2#01110101;\2#1101011;",                                 1, 6,  3,                   2#101, 2, 1) and
        chkGetBitsLsb("\2#10110101;\2#11010110;\2#0;",                           1, 7,  3,                   2#101, 2, 2) and
        chkGetBitsLsb("\2#11011001;\2#01100110;\2#1;",                           1, 7,  3,                   2#101, 2, 2) and
        chkGetBitsLsb("\2#0101;",                                                1, 0,  4,                  2#0101, 1, 4) and
        chkGetBitsLsb("\2#001010;",                                              1, 1,  4,                  2#0101, 1, 5) and
        chkGetBitsLsb("\2#101011;",                                              1, 1,  4,                  2#0101, 1, 5) and
        chkGetBitsLsb("\2#01010101;",                                            1, 2,  4,                  2#0101, 1, 6) and
        chkGetBitsLsb("\2#10010110;",                                            1, 2,  4,                  2#0101, 1, 6) and
        chkGetBitsLsb("\2#00101010;\2#01;",                                      1, 3,  4,                  2#0101, 1, 7) and
        chkGetBitsLsb("\2#10101101;\2#10;",                                      1, 3,  4,                  2#0101, 1, 7) and
        chkGetBitsLsb("\2#01010101;\2#0101;",                                    1, 4,  4,                  2#0101, 2, 0) and
        chkGetBitsLsb("\2#01011011;\2#1011;",                                    1, 4,  4,                  2#0101, 2, 0) and
        chkGetBitsLsb("\2#10101011;\2#010110;",                                  1, 5,  4,                  2#0101, 2, 1) and
        chkGetBitsLsb("\2#10110011;\2#100110;",                                  1, 5,  4,                  2#0101, 2, 1) and
        chkGetBitsLsb("\2#01010011;\2#01001101;",                                1, 6,  4,                  2#0101, 2, 2) and
        chkGetBitsLsb("\2#01110101;\2#11010101;",                                1, 6,  4,                  2#0101, 2, 2) and
        chkGetBitsLsb("\2#10110101;\2#10101010;\2#01;",                          1, 7,  4,                  2#0101, 2, 3) and
        chkGetBitsLsb("\2#11011001;\2#11001010;\2#10;",                          1, 7,  4,                  2#0101, 2, 3) and
        chkGetBitsLsb("\2#1011;",                                                1, 0,  4,                  2#1011, 1, 4) and
        chkGetBitsLsb("\2#010110;",                                              1, 1,  4,                  2#1011, 1, 5) and
        chkGetBitsLsb("\2#110111;",                                              1, 1,  4,                  2#1011, 1, 5) and
        chkGetBitsLsb("\2#01101101;",                                            1, 2,  4,                  2#1011, 1, 6) and
        chkGetBitsLsb("\2#10101110;",                                            1, 2,  4,                  2#1011, 1, 6) and
        chkGetBitsLsb("\2#01011010;\2#01;",                                      1, 3,  4,                  2#1011, 1, 7) and
        chkGetBitsLsb("\2#11011101;\2#10;",                                      1, 3,  4,                  2#1011, 1, 7) and
        chkGetBitsLsb("\2#10110101;\2#0101;",                                    1, 4,  4,                  2#1011, 2, 0) and
        chkGetBitsLsb("\2#10111011;\2#1011;",                                    1, 4,  4,                  2#1011, 2, 0) and
        chkGetBitsLsb("\2#01101011;\2#010111;",                                  1, 5,  4,                  2#1011, 2, 1) and
        chkGetBitsLsb("\2#01110011;\2#100111;",                                  1, 5,  4,                  2#1011, 2, 1) and
        chkGetBitsLsb("\2#11010011;\2#01001110;",                                1, 6,  4,                  2#1011, 2, 2) and
        chkGetBitsLsb("\2#11110101;\2#11010110;",                                1, 6,  4,                  2#1011, 2, 2) and
        chkGetBitsLsb("\2#10110101;\2#10101101;\2#01;",                          1, 7,  4,                  2#1011, 2, 3) and
        chkGetBitsLsb("\2#11011001;\2#11001101;\2#10;",                          1, 7,  4,                  2#1011, 2, 3) and
        chkGetBitsLsb("\2#01011;",                                               1, 0,  5,                 2#01011, 1, 5) and
        chkGetBitsLsb("\2#0010110;",                                             1, 1,  5,                 2#01011, 1, 6) and
        chkGetBitsLsb("\2#1010111;",                                             1, 1,  5,                 2#01011, 1, 6) and
        chkGetBitsLsb("\2#10101101;\2#0;",                                       1, 2,  5,                 2#01011, 1, 7) and
        chkGetBitsLsb("\2#00101110;\2#1;",                                       1, 2,  5,                 2#01011, 1, 7) and
        chkGetBitsLsb("\2#01011010;\2#010;",                                     1, 3,  5,                 2#01011, 2, 0) and
        chkGetBitsLsb("\2#01011101;\2#101;",                                     1, 3,  5,                 2#01011, 2, 0) and
        chkGetBitsLsb("\2#10110101;\2#01010;",                                   1, 4,  5,                 2#01011, 2, 1) and
        chkGetBitsLsb("\2#10111011;\2#10110;",                                   1, 4,  5,                 2#01011, 2, 1) and
        chkGetBitsLsb("\2#01101011;\2#0101101;",                                 1, 5,  5,                 2#01011, 2, 2) and
        chkGetBitsLsb("\2#01110011;\2#1001101;",                                 1, 5,  5,                 2#01011, 2, 2) and
        chkGetBitsLsb("\2#11010011;\2#10011010;\2#0;",                           1, 6,  5,                 2#01011, 2, 3) and
        chkGetBitsLsb("\2#11110101;\2#10101010;\2#1;",                           1, 6,  5,                 2#01011, 2, 3) and
        chkGetBitsLsb("\2#10110101;\2#01010101;\2#011;",                         1, 7,  5,                 2#01011, 2, 4) and
        chkGetBitsLsb("\2#11011001;\2#10010101;\2#101;",                         1, 7,  5,                 2#01011, 2, 4) and
        chkGetBitsLsb("\2#10011;",                                               1, 0,  5,                 2#10011, 1, 5) and
        chkGetBitsLsb("\2#0100110;",                                             1, 1,  5,                 2#10011, 1, 6) and
        chkGetBitsLsb("\2#1100111;",                                             1, 1,  5,                 2#10011, 1, 6) and
        chkGetBitsLsb("\2#11001101;\2#0;",                                       1, 2,  5,                 2#10011, 1, 7) and
        chkGetBitsLsb("\2#01001110;\2#1;",                                       1, 2,  5,                 2#10011, 1, 7) and
        chkGetBitsLsb("\2#10011010;\2#010;",                                     1, 3,  5,                 2#10011, 2, 0) and
        chkGetBitsLsb("\2#10011101;\2#101;",                                     1, 3,  5,                 2#10011, 2, 0) and
        chkGetBitsLsb("\2#00110101;\2#01011;",                                   1, 4,  5,                 2#10011, 2, 1) and
        chkGetBitsLsb("\2#00111011;\2#10111;",                                   1, 4,  5,                 2#10011, 2, 1) and
        chkGetBitsLsb("\2#01101011;\2#0101110;",                                 1, 5,  5,                 2#10011, 2, 2) and
        chkGetBitsLsb("\2#01110011;\2#1001110;",                                 1, 5,  5,                 2#10011, 2, 2) and
        chkGetBitsLsb("\2#11010011;\2#10011100;\2#0;",                           1, 6,  5,                 2#10011, 2, 3) and
        chkGetBitsLsb("\2#11110101;\2#10101100;\2#1;",                           1, 6,  5,                 2#10011, 2, 3) and
        chkGetBitsLsb("\2#10110101;\2#01011001;\2#011;",                         1, 7,  5,                 2#10011, 2, 4) and
        chkGetBitsLsb("\2#11011001;\2#10011001;\2#101;",                         1, 7,  5,                 2#10011, 2, 4) and
        chkGetBitsLsb("\2#010011;",                                              1, 0,  6,                2#010011, 1, 6) and
        chkGetBitsLsb("\2#00100110;",                                            1, 1,  6,                2#010011, 1, 7) and
        chkGetBitsLsb("\2#10100111;",                                            1, 1,  6,                2#010011, 1, 7) and
        chkGetBitsLsb("\2#01001101;\2#01;",                                      1, 2,  6,                2#010011, 2, 0) and
        chkGetBitsLsb("\2#01001110;\2#10;",                                      1, 2,  6,                2#010011, 2, 0) and
        chkGetBitsLsb("\2#10011010;\2#0100;",                                    1, 3,  6,                2#010011, 2, 1) and
        chkGetBitsLsb("\2#10011101;\2#1010;",                                    1, 3,  6,                2#010011, 2, 1) and
        chkGetBitsLsb("\2#00110101;\2#010101;",                                  1, 4,  6,                2#010011, 2, 2) and
        chkGetBitsLsb("\2#00111011;\2#101101;",                                  1, 4,  6,                2#010011, 2, 2) and
        chkGetBitsLsb("\2#01101011;\2#01011010;",                                1, 5,  6,                2#010011, 2, 3) and
        chkGetBitsLsb("\2#01110011;\2#10011010;",                                1, 5,  6,                2#010011, 2, 3) and
        chkGetBitsLsb("\2#11010011;\2#00110100;\2#01;",                          1, 6,  6,                2#010011, 2, 4) and
        chkGetBitsLsb("\2#11110101;\2#01010100;\2#11;",                          1, 6,  6,                2#010011, 2, 4) and
        chkGetBitsLsb("\2#10110101;\2#10101001;\2#0110;",                        1, 7,  6,                2#010011, 2, 5) and
        chkGetBitsLsb("\2#11011001;\2#00101001;\2#1011;",                        1, 7,  6,                2#010011, 2, 5) and
        chkGetBitsLsb("\2#110101;",                                              1, 0,  6,                2#110101, 1, 6) and
        chkGetBitsLsb("\2#01101010;",                                            1, 1,  6,                2#110101, 1, 7) and
        chkGetBitsLsb("\2#11101011;",                                            1, 1,  6,                2#110101, 1, 7) and
        chkGetBitsLsb("\2#11010101;\2#01;",                                      1, 2,  6,                2#110101, 2, 0) and
        chkGetBitsLsb("\2#11010110;\2#10;",                                      1, 2,  6,                2#110101, 2, 0) and
        chkGetBitsLsb("\2#10101010;\2#0101;",                                    1, 3,  6,                2#110101, 2, 1) and
        chkGetBitsLsb("\2#10101101;\2#1011;",                                    1, 3,  6,                2#110101, 2, 1) and
        chkGetBitsLsb("\2#01010101;\2#010111;",                                  1, 4,  6,                2#110101, 2, 2) and
        chkGetBitsLsb("\2#01011011;\2#101111;",                                  1, 4,  6,                2#110101, 2, 2) and
        chkGetBitsLsb("\2#10101011;\2#01011110;",                                1, 5,  6,                2#110101, 2, 3) and
        chkGetBitsLsb("\2#10110011;\2#10011110;",                                1, 5,  6,                2#110101, 2, 3) and
        chkGetBitsLsb("\2#01010011;\2#00111101;\2#01;",                          1, 6,  6,                2#110101, 2, 4) and
        chkGetBitsLsb("\2#01110101;\2#01011101;\2#11;",                          1, 6,  6,                2#110101, 2, 4) and
        chkGetBitsLsb("\2#10110101;\2#10111010;\2#0110;",                        1, 7,  6,                2#110101, 2, 5) and
        chkGetBitsLsb("\2#11011001;\2#00111010;\2#1011;",                        1, 7,  6,                2#110101, 2, 5) and
        chkGetBitsLsb("\2#0110101;",                                             1, 0,  7,               2#0110101, 1, 7) and
        chkGetBitsLsb("\2#01101010;\2#0;",                                       1, 1,  7,               2#0110101, 2, 0) and
        chkGetBitsLsb("\2#01101011;\2#1;",                                       1, 1,  7,               2#0110101, 2, 0) and
        chkGetBitsLsb("\2#11010101;\2#010;",                                     1, 2,  7,               2#0110101, 2, 1) and
        chkGetBitsLsb("\2#11010110;\2#100;",                                     1, 2,  7,               2#0110101, 2, 1) and
        chkGetBitsLsb("\2#10101010;\2#01001;",                                   1, 3,  7,               2#0110101, 2, 2) and
        chkGetBitsLsb("\2#10101101;\2#10101;",                                   1, 3,  7,               2#0110101, 2, 2) and
        chkGetBitsLsb("\2#01010101;\2#0101011;",                                 1, 4,  7,               2#0110101, 2, 3) and
        chkGetBitsLsb("\2#01011011;\2#1011011;",                                 1, 4,  7,               2#0110101, 2, 3) and
        chkGetBitsLsb("\2#10101011;\2#10110110;\2#0;",                           1, 5,  7,               2#0110101, 2, 4) and
        chkGetBitsLsb("\2#10110011;\2#00110110;\2#1;",                           1, 5,  7,               2#0110101, 2, 4) and
        chkGetBitsLsb("\2#01010011;\2#01101101;\2#010;",                         1, 6,  7,               2#0110101, 2, 5) and
        chkGetBitsLsb("\2#01110101;\2#10101101;\2#110;",                         1, 6,  7,               2#0110101, 2, 5) and
        chkGetBitsLsb("\2#10110101;\2#01011010;\2#01101;",                       1, 7,  7,               2#0110101, 2, 6) and
        chkGetBitsLsb("\2#11011001;\2#01011010;\2#10110;",                       1, 7,  7,               2#0110101, 2, 6) and
        chkGetBitsLsb("\2#1011001;",                                             1, 0,  7,               2#1011001, 1, 7) and
        chkGetBitsLsb("\2#10110010;\2#0;",                                       1, 1,  7,               2#1011001, 2, 0) and
        chkGetBitsLsb("\2#10110011;\2#1;",                                       1, 1,  7,               2#1011001, 2, 0) and
        chkGetBitsLsb("\2#01100101;\2#011;",                                     1, 2,  7,               2#1011001, 2, 1) and
        chkGetBitsLsb("\2#01100110;\2#101;",                                     1, 2,  7,               2#1011001, 2, 1) and
        chkGetBitsLsb("\2#11001010;\2#01010;",                                   1, 3,  7,               2#1011001, 2, 2) and
        chkGetBitsLsb("\2#11001101;\2#10110;",                                   1, 3,  7,               2#1011001, 2, 2) and
        chkGetBitsLsb("\2#10010101;\2#0101101;",                                 1, 4,  7,               2#1011001, 2, 3) and
        chkGetBitsLsb("\2#10011011;\2#1011101;",                                 1, 4,  7,               2#1011001, 2, 3) and
        chkGetBitsLsb("\2#00101011;\2#10111011;\2#0;",                           1, 5,  7,               2#1011001, 2, 4) and
        chkGetBitsLsb("\2#00110011;\2#00111011;\2#1;",                           1, 5,  7,               2#1011001, 2, 4) and
        chkGetBitsLsb("\2#01010011;\2#01110110;\2#010;",                         1, 6,  7,               2#1011001, 2, 5) and
        chkGetBitsLsb("\2#01110101;\2#10110110;\2#110;",                         1, 6,  7,               2#1011001, 2, 5) and
        chkGetBitsLsb("\2#10110101;\2#01101100;\2#01101;",                       1, 7,  7,               2#1011001, 2, 6) and
        chkGetBitsLsb("\2#11011001;\2#01101100;\2#10110;",                       1, 7,  7,               2#1011001, 2, 6) and
        chkGetBitsLsb("\2#01011001;",                                            1, 0,  8,              2#01011001, 2, 0) and
        chkGetBitsLsb("\2#10110010;\2#00;",                                      1, 1,  8,              2#01011001, 2, 1) and
        chkGetBitsLsb("\2#10110011;\2#10;",                                      1, 1,  8,              2#01011001, 2, 1) and
        chkGetBitsLsb("\2#01100101;\2#0101;",                                    1, 2,  8,              2#01011001, 2, 2) and
        chkGetBitsLsb("\2#01100110;\2#1001;",                                    1, 2,  8,              2#01011001, 2, 2) and
        chkGetBitsLsb("\2#11001010;\2#010010;",                                  1, 3,  8,              2#01011001, 2, 3) and
        chkGetBitsLsb("\2#11001101;\2#101010;",                                  1, 3,  8,              2#01011001, 2, 3) and
        chkGetBitsLsb("\2#10010101;\2#01010101;",                                1, 4,  8,              2#01011001, 2, 4) and
        chkGetBitsLsb("\2#10011011;\2#10110101;",                                1, 4,  8,              2#01011001, 2, 4) and
        chkGetBitsLsb("\2#00101011;\2#01101011;\2#01;",                          1, 5,  8,              2#01011001, 2, 5) and
        chkGetBitsLsb("\2#00110011;\2#01101011;\2#10;",                          1, 5,  8,              2#01011001, 2, 5) and
        chkGetBitsLsb("\2#01010011;\2#11010110;\2#0100;",                        1, 6,  8,              2#01011001, 2, 6) and
        chkGetBitsLsb("\2#01110101;\2#01010110;\2#1101;",                        1, 6,  8,              2#01011001, 2, 6) and
        chkGetBitsLsb("\2#10110101;\2#10101100;\2#011010;",                      1, 7,  8,              2#01011001, 2, 7) and
        chkGetBitsLsb("\2#11011001;\2#10101100;\2#101100;",                      1, 7,  8,              2#01011001, 2, 7) and
        chkGetBitsLsb("\2#10100011;",                                            1, 0,  8,              2#10100011, 2, 0) and
        chkGetBitsLsb("\2#01000110;\2#01;",                                      1, 1,  8,              2#10100011, 2, 1) and
        chkGetBitsLsb("\2#01000111;\2#11;",                                      1, 1,  8,              2#10100011, 2, 1) and
        chkGetBitsLsb("\2#10001101;\2#0110;",                                    1, 2,  8,              2#10100011, 2, 2) and
        chkGetBitsLsb("\2#10001110;\2#1010;",                                    1, 2,  8,              2#10100011, 2, 2) and
        chkGetBitsLsb("\2#00011010;\2#010101;",                                  1, 3,  8,              2#10100011, 2, 3) and
        chkGetBitsLsb("\2#00011101;\2#101101;",                                  1, 3,  8,              2#10100011, 2, 3) and
        chkGetBitsLsb("\2#00110101;\2#01011010;",                                1, 4,  8,              2#10100011, 2, 4) and
        chkGetBitsLsb("\2#00111011;\2#10111010;",                                1, 4,  8,              2#10100011, 2, 4) and
        chkGetBitsLsb("\2#01101011;\2#01110100;\2#01;",                          1, 5,  8,              2#10100011, 2, 5) and
        chkGetBitsLsb("\2#01110011;\2#01110100;\2#10;",                          1, 5,  8,              2#10100011, 2, 5) and
        chkGetBitsLsb("\2#11010011;\2#11101000;\2#0100;",                        1, 6,  8,              2#10100011, 2, 6) and
        chkGetBitsLsb("\2#11110101;\2#01101000;\2#1101;",                        1, 6,  8,              2#10100011, 2, 6) and
        chkGetBitsLsb("\2#10110101;\2#11010001;\2#011010;",                      1, 7,  8,              2#10100011, 2, 7) and
        chkGetBitsLsb("\2#11011001;\2#11010001;\2#101100;",                      1, 7,  8,              2#10100011, 2, 7) and
        chkGetBitsLsb("\2#10100011;\2#0;",                                       1, 0,  9,             2#010100011, 2, 1) and
        chkGetBitsLsb("\2#01000110;\2#001;",                                     1, 1,  9,             2#010100011, 2, 2) and
        chkGetBitsLsb("\2#01000111;\2#101;",                                     1, 1,  9,             2#010100011, 2, 2) and
        chkGetBitsLsb("\2#10001101;\2#01010;",                                   1, 2,  9,             2#010100011, 2, 3) and
        chkGetBitsLsb("\2#10001110;\2#10010;",                                   1, 2,  9,             2#010100011, 2, 3) and
        chkGetBitsLsb("\2#00011010;\2#0100101;",                                 1, 3,  9,             2#010100011, 2, 4) and
        chkGetBitsLsb("\2#00011101;\2#1010101;",                                 1, 3,  9,             2#010100011, 2, 4) and
        chkGetBitsLsb("\2#00110101;\2#10101010;\2#0;",                           1, 4,  9,             2#010100011, 2, 5) and
        chkGetBitsLsb("\2#00111011;\2#01101010;\2#1;",                           1, 4,  9,             2#010100011, 2, 5) and
        chkGetBitsLsb("\2#01101011;\2#11010100;\2#010;",                         1, 5,  9,             2#010100011, 2, 6) and
        chkGetBitsLsb("\2#01110011;\2#11010100;\2#100;",                         1, 5,  9,             2#010100011, 2, 6) and
        chkGetBitsLsb("\2#11010011;\2#10101000;\2#01001;",                       1, 6,  9,             2#010100011, 2, 7) and
        chkGetBitsLsb("\2#11110101;\2#10101000;\2#11010;",                       1, 6,  9,             2#010100011, 2, 7) and
        chkGetBitsLsb("\2#10110101;\2#01010001;\2#0110101;",                     1, 7,  9,             2#010100011, 3, 0) and
        chkGetBitsLsb("\2#11011001;\2#01010001;\2#1011001;",                     1, 7,  9,             2#010100011, 3, 0) and
        chkGetBitsLsb("\2#10110111;\2#1;",                                       1, 0,  9,             2#110110111, 2, 1) and
        chkGetBitsLsb("\2#01101110;\2#011;",                                     1, 1,  9,             2#110110111, 2, 2) and
        chkGetBitsLsb("\2#01101111;\2#111;",                                     1, 1,  9,             2#110110111, 2, 2) and
        chkGetBitsLsb("\2#11011101;\2#01110;",                                   1, 2,  9,             2#110110111, 2, 3) and
        chkGetBitsLsb("\2#11011110;\2#10110;",                                   1, 2,  9,             2#110110111, 2, 3) and
        chkGetBitsLsb("\2#10111010;\2#0101101;",                                 1, 3,  9,             2#110110111, 2, 4) and
        chkGetBitsLsb("\2#10111101;\2#1011101;",                                 1, 3,  9,             2#110110111, 2, 4) and
        chkGetBitsLsb("\2#01110101;\2#10111011;\2#0;",                           1, 4,  9,             2#110110111, 2, 5) and
        chkGetBitsLsb("\2#01111011;\2#01111011;\2#1;",                           1, 4,  9,             2#110110111, 2, 5) and
        chkGetBitsLsb("\2#11101011;\2#11110110;\2#010;",                         1, 5,  9,             2#110110111, 2, 6) and
        chkGetBitsLsb("\2#11110011;\2#11110110;\2#100;",                         1, 5,  9,             2#110110111, 2, 6) and
        chkGetBitsLsb("\2#11010011;\2#11101101;\2#01001;",                       1, 6,  9,             2#110110111, 2, 7) and
        chkGetBitsLsb("\2#11110101;\2#11101101;\2#11010;",                       1, 6,  9,             2#110110111, 2, 7) and
        chkGetBitsLsb("\2#10110101;\2#11011011;\2#0110101;",                     1, 7,  9,             2#110110111, 3, 0) and
        chkGetBitsLsb("\2#11011001;\2#11011011;\2#1011001;",                     1, 7,  9,             2#110110111, 3, 0) and
        chkGetBitsLsb("\2#10110111;\2#01;",                                      1, 0, 10,            2#0110110111, 2, 2) and
        chkGetBitsLsb("\2#01101110;\2#0011;",                                    1, 1, 10,            2#0110110111, 2, 3) and
        chkGetBitsLsb("\2#01101111;\2#1011;",                                    1, 1, 10,            2#0110110111, 2, 3) and
        chkGetBitsLsb("\2#11011101;\2#010110;",                                  1, 2, 10,            2#0110110111, 2, 4) and
        chkGetBitsLsb("\2#11011110;\2#100110;",                                  1, 2, 10,            2#0110110111, 2, 4) and
        chkGetBitsLsb("\2#10111010;\2#01001101;",                                1, 3, 10,            2#0110110111, 2, 5) and
        chkGetBitsLsb("\2#10111101;\2#10101101;",                                1, 3, 10,            2#0110110111, 2, 5) and
        chkGetBitsLsb("\2#01110101;\2#01011011;\2#01;",                          1, 4, 10,            2#0110110111, 2, 6) and
        chkGetBitsLsb("\2#01111011;\2#11011011;\2#10;",                          1, 4, 10,            2#0110110111, 2, 6) and
        chkGetBitsLsb("\2#11101011;\2#10110110;\2#0101;",                        1, 5, 10,            2#0110110111, 2, 7) and
        chkGetBitsLsb("\2#11110011;\2#10110110;\2#1001;",                        1, 5, 10,            2#0110110111, 2, 7) and
        chkGetBitsLsb("\2#11010011;\2#01101101;\2#010011;",                      1, 6, 10,            2#0110110111, 3, 0) and
        chkGetBitsLsb("\2#11110101;\2#01101101;\2#110101;",                      1, 6, 10,            2#0110110111, 3, 0) and
        chkGetBitsLsb("\2#10110101;\2#11011011;\2#01101010;",                    1, 7, 10,            2#0110110111, 3, 1) and
        chkGetBitsLsb("\2#11011001;\2#11011011;\2#10110010;",                    1, 7, 10,            2#0110110111, 3, 1) and
        chkGetBitsLsb("\2#00010011;\2#11;",                                      1, 0, 10,            2#1100010011, 2, 2) and
        chkGetBitsLsb("\2#00100110;\2#0110;",                                    1, 1, 10,            2#1100010011, 2, 3) and
        chkGetBitsLsb("\2#00100111;\2#1110;",                                    1, 1, 10,            2#1100010011, 2, 3) and
        chkGetBitsLsb("\2#01001101;\2#011100;",                                  1, 2, 10,            2#1100010011, 2, 4) and
        chkGetBitsLsb("\2#01001110;\2#101100;",                                  1, 2, 10,            2#1100010011, 2, 4) and
        chkGetBitsLsb("\2#10011010;\2#01011000;",                                1, 3, 10,            2#1100010011, 2, 5) and
        chkGetBitsLsb("\2#10011101;\2#10111000;",                                1, 3, 10,            2#1100010011, 2, 5) and
        chkGetBitsLsb("\2#00110101;\2#01110001;\2#01;",                          1, 4, 10,            2#1100010011, 2, 6) and
        chkGetBitsLsb("\2#00111011;\2#11110001;\2#10;",                          1, 4, 10,            2#1100010011, 2, 6) and
        chkGetBitsLsb("\2#01101011;\2#11100010;\2#0101;",                        1, 5, 10,            2#1100010011, 2, 7) and
        chkGetBitsLsb("\2#01110011;\2#11100010;\2#1001;",                        1, 5, 10,            2#1100010011, 2, 7) and
        chkGetBitsLsb("\2#11010011;\2#11000100;\2#010011;",                      1, 6, 10,            2#1100010011, 3, 0) and
        chkGetBitsLsb("\2#11110101;\2#11000100;\2#110101;",                      1, 6, 10,            2#1100010011, 3, 0) and
        chkGetBitsLsb("\2#10110101;\2#10001001;\2#01101011;",                    1, 7, 10,            2#1100010011, 3, 1) and
        chkGetBitsLsb("\2#11011001;\2#10001001;\2#10110011;",                    1, 7, 10,            2#1100010011, 3, 1) and
        chkGetBitsLsb("\2#00010011;\2#011;",                                     1, 0, 11,           2#01100010011, 2, 3) and
        chkGetBitsLsb("\2#00100110;\2#00110;",                                   1, 1, 11,           2#01100010011, 2, 4) and
        chkGetBitsLsb("\2#00100111;\2#10110;",                                   1, 1, 11,           2#01100010011, 2, 4) and
        chkGetBitsLsb("\2#01001101;\2#0101100;",                                 1, 2, 11,           2#01100010011, 2, 5) and
        chkGetBitsLsb("\2#01001110;\2#1001100;",                                 1, 2, 11,           2#01100010011, 2, 5) and
        chkGetBitsLsb("\2#10011010;\2#10011000;\2#0;",                           1, 3, 11,           2#01100010011, 2, 6) and
        chkGetBitsLsb("\2#10011101;\2#01011000;\2#1;",                           1, 3, 11,           2#01100010011, 2, 6) and
        chkGetBitsLsb("\2#00110101;\2#10110001;\2#010;",                         1, 4, 11,           2#01100010011, 2, 7) and
        chkGetBitsLsb("\2#00111011;\2#10110001;\2#101;",                         1, 4, 11,           2#01100010011, 2, 7) and
        chkGetBitsLsb("\2#01101011;\2#01100010;\2#01011;",                       1, 5, 11,           2#01100010011, 3, 0) and
        chkGetBitsLsb("\2#01110011;\2#01100010;\2#10011;",                       1, 5, 11,           2#01100010011, 3, 0) and
        chkGetBitsLsb("\2#11010011;\2#11000100;\2#0100110;",                     1, 6, 11,           2#01100010011, 3, 1) and
        chkGetBitsLsb("\2#11110101;\2#11000100;\2#1101010;",                     1, 6, 11,           2#01100010011, 3, 1) and
        chkGetBitsLsb("\2#10110101;\2#10001001;\2#11010101;\2#0;",               1, 7, 11,           2#01100010011, 3, 2) and
        chkGetBitsLsb("\2#11011001;\2#10001001;\2#01100101;\2#1;",               1, 7, 11,           2#01100010011, 3, 2) and
        chkGetBitsLsb("\2#10100111;\2#101;",                                     1, 0, 11,           2#10110100111, 2, 3) and
        chkGetBitsLsb("\2#01001110;\2#01011;",                                   1, 1, 11,           2#10110100111, 2, 4) and
        chkGetBitsLsb("\2#01001111;\2#11011;",                                   1, 1, 11,           2#10110100111, 2, 4) and
        chkGetBitsLsb("\2#10011101;\2#0110110;",                                 1, 2, 11,           2#10110100111, 2, 5) and
        chkGetBitsLsb("\2#10011110;\2#1010110;",                                 1, 2, 11,           2#10110100111, 2, 5) and
        chkGetBitsLsb("\2#00111010;\2#10101101;\2#0;",                           1, 3, 11,           2#10110100111, 2, 6) and
        chkGetBitsLsb("\2#00111101;\2#01101101;\2#1;",                           1, 3, 11,           2#10110100111, 2, 6) and
        chkGetBitsLsb("\2#01110101;\2#11011010;\2#010;",                         1, 4, 11,           2#10110100111, 2, 7) and
        chkGetBitsLsb("\2#01111011;\2#11011010;\2#101;",                         1, 4, 11,           2#10110100111, 2, 7) and
        chkGetBitsLsb("\2#11101011;\2#10110100;\2#01011;",                       1, 5, 11,           2#10110100111, 3, 0) and
        chkGetBitsLsb("\2#11110011;\2#10110100;\2#10011;",                       1, 5, 11,           2#10110100111, 3, 0) and
        chkGetBitsLsb("\2#11010011;\2#01101001;\2#0100111;",                     1, 6, 11,           2#10110100111, 3, 1) and
        chkGetBitsLsb("\2#11110101;\2#01101001;\2#1101011;",                     1, 6, 11,           2#10110100111, 3, 1) and
        chkGetBitsLsb("\2#10110101;\2#11010011;\2#11010110;\2#0;",               1, 7, 11,           2#10110100111, 3, 2) and
        chkGetBitsLsb("\2#11011001;\2#11010011;\2#01100110;\2#1;",               1, 7, 11,           2#10110100111, 3, 2) and
        chkGetBitsLsb("\2#10100111;\2#0101;",                                    1, 0, 12,          2#010110100111, 2, 4) and
        chkGetBitsLsb("\2#01001110;\2#001011;",                                  1, 1, 12,          2#010110100111, 2, 5) and
        chkGetBitsLsb("\2#01001111;\2#101011;",                                  1, 1, 12,          2#010110100111, 2, 5) and
        chkGetBitsLsb("\2#10011101;\2#01010110;",                                1, 2, 12,          2#010110100111, 2, 6) and
        chkGetBitsLsb("\2#10011110;\2#10010110;",                                1, 2, 12,          2#010110100111, 2, 6) and
        chkGetBitsLsb("\2#00111010;\2#00101101;\2#01;",                          1, 3, 12,          2#010110100111, 2, 7) and
        chkGetBitsLsb("\2#00111101;\2#10101101;\2#10;",                          1, 3, 12,          2#010110100111, 2, 7) and
        chkGetBitsLsb("\2#01110101;\2#01011010;\2#0101;",                        1, 4, 12,          2#010110100111, 3, 0) and
        chkGetBitsLsb("\2#01111011;\2#01011010;\2#1011;",                        1, 4, 12,          2#010110100111, 3, 0) and
        chkGetBitsLsb("\2#11101011;\2#10110100;\2#010110;",                      1, 5, 12,          2#010110100111, 3, 1) and
        chkGetBitsLsb("\2#11110011;\2#10110100;\2#100110;",                      1, 5, 12,          2#010110100111, 3, 1) and
        chkGetBitsLsb("\2#11010011;\2#01101001;\2#01001101;",                    1, 6, 12,          2#010110100111, 3, 2) and
        chkGetBitsLsb("\2#11110101;\2#01101001;\2#11010101;",                    1, 6, 12,          2#010110100111, 3, 2) and
        chkGetBitsLsb("\2#10110101;\2#11010011;\2#10101010;\2#01;",              1, 7, 12,          2#010110100111, 3, 3) and
        chkGetBitsLsb("\2#11011001;\2#11010011;\2#11001010;\2#10;",              1, 7, 12,          2#010110100111, 3, 3) and
        chkGetBitsLsb("\2#10001101;\2#1011;",                                    1, 0, 12,          2#101110001101, 2, 4) and
        chkGetBitsLsb("\2#00011010;\2#010111;",                                  1, 1, 12,          2#101110001101, 2, 5) and
        chkGetBitsLsb("\2#00011011;\2#110111;",                                  1, 1, 12,          2#101110001101, 2, 5) and
        chkGetBitsLsb("\2#00110101;\2#01101110;",                                1, 2, 12,          2#101110001101, 2, 6) and
        chkGetBitsLsb("\2#00110110;\2#10101110;",                                1, 2, 12,          2#101110001101, 2, 6) and
        chkGetBitsLsb("\2#01101010;\2#01011100;\2#01;",                          1, 3, 12,          2#101110001101, 2, 7) and
        chkGetBitsLsb("\2#01101101;\2#11011100;\2#10;",                          1, 3, 12,          2#101110001101, 2, 7) and
        chkGetBitsLsb("\2#11010101;\2#10111000;\2#0101;",                        1, 4, 12,          2#101110001101, 3, 0) and
        chkGetBitsLsb("\2#11011011;\2#10111000;\2#1011;",                        1, 4, 12,          2#101110001101, 3, 0) and
        chkGetBitsLsb("\2#10101011;\2#01110001;\2#010111;",                      1, 5, 12,          2#101110001101, 3, 1) and
        chkGetBitsLsb("\2#10110011;\2#01110001;\2#100111;",                      1, 5, 12,          2#101110001101, 3, 1) and
        chkGetBitsLsb("\2#01010011;\2#11100011;\2#01001110;",                    1, 6, 12,          2#101110001101, 3, 2) and
        chkGetBitsLsb("\2#01110101;\2#11100011;\2#11010110;",                    1, 6, 12,          2#101110001101, 3, 2) and
        chkGetBitsLsb("\2#10110101;\2#11000110;\2#10101101;\2#01;",              1, 7, 12,          2#101110001101, 3, 3) and
        chkGetBitsLsb("\2#11011001;\2#11000110;\2#11001101;\2#10;",              1, 7, 12,          2#101110001101, 3, 3) and
        chkGetBitsLsb("\2#10001101;\2#01011;",                                   1, 0, 13,         2#0101110001101, 2, 5) and
        chkGetBitsLsb("\2#00011010;\2#0010111;",                                 1, 1, 13,         2#0101110001101, 2, 6) and
        chkGetBitsLsb("\2#00011011;\2#1010111;",                                 1, 1, 13,         2#0101110001101, 2, 6) and
        chkGetBitsLsb("\2#00110101;\2#10101110;\2#0;",                           1, 2, 13,         2#0101110001101, 2, 7) and
        chkGetBitsLsb("\2#00110110;\2#00101110;\2#1;",                           1, 2, 13,         2#0101110001101, 2, 7) and
        chkGetBitsLsb("\2#01101010;\2#01011100;\2#010;",                         1, 3, 13,         2#0101110001101, 3, 0) and
        chkGetBitsLsb("\2#01101101;\2#01011100;\2#101;",                         1, 3, 13,         2#0101110001101, 3, 0) and
        chkGetBitsLsb("\2#11010101;\2#10111000;\2#01010;",                       1, 4, 13,         2#0101110001101, 3, 1) and
        chkGetBitsLsb("\2#11011011;\2#10111000;\2#10110;",                       1, 4, 13,         2#0101110001101, 3, 1) and
        chkGetBitsLsb("\2#10101011;\2#01110001;\2#0101101;",                     1, 5, 13,         2#0101110001101, 3, 2) and
        chkGetBitsLsb("\2#10110011;\2#01110001;\2#1001101;",                     1, 5, 13,         2#0101110001101, 3, 2) and
        chkGetBitsLsb("\2#01010011;\2#11100011;\2#10011010;\2#0;",               1, 6, 13,         2#0101110001101, 3, 3) and
        chkGetBitsLsb("\2#01110101;\2#11100011;\2#10101010;\2#1;",               1, 6, 13,         2#0101110001101, 3, 3) and
        chkGetBitsLsb("\2#10110101;\2#11000110;\2#01010101;\2#011;",             1, 7, 13,         2#0101110001101, 3, 4) and
        chkGetBitsLsb("\2#11011001;\2#11000110;\2#10010101;\2#101;",             1, 7, 13,         2#0101110001101, 3, 4) and
        chkGetBitsLsb("\2#00110111;\2#11011;",                                   1, 0, 13,         2#1101100110111, 2, 5) and
        chkGetBitsLsb("\2#01101110;\2#0110110;",                                 1, 1, 13,         2#1101100110111, 2, 6) and
        chkGetBitsLsb("\2#01101111;\2#1110110;",                                 1, 1, 13,         2#1101100110111, 2, 6) and
        chkGetBitsLsb("\2#11011101;\2#11101100;\2#0;",                           1, 2, 13,         2#1101100110111, 2, 7) and
        chkGetBitsLsb("\2#11011110;\2#01101100;\2#1;",                           1, 2, 13,         2#1101100110111, 2, 7) and
        chkGetBitsLsb("\2#10111010;\2#11011001;\2#010;",                         1, 3, 13,         2#1101100110111, 3, 0) and
        chkGetBitsLsb("\2#10111101;\2#11011001;\2#101;",                         1, 3, 13,         2#1101100110111, 3, 0) and
        chkGetBitsLsb("\2#01110101;\2#10110011;\2#01011;",                       1, 4, 13,         2#1101100110111, 3, 1) and
        chkGetBitsLsb("\2#01111011;\2#10110011;\2#10111;",                       1, 4, 13,         2#1101100110111, 3, 1) and
        chkGetBitsLsb("\2#11101011;\2#01100110;\2#0101111;",                     1, 5, 13,         2#1101100110111, 3, 2) and
        chkGetBitsLsb("\2#11110011;\2#01100110;\2#1001111;",                     1, 5, 13,         2#1101100110111, 3, 2) and
        chkGetBitsLsb("\2#11010011;\2#11001101;\2#10011110;\2#0;",               1, 6, 13,         2#1101100110111, 3, 3) and
        chkGetBitsLsb("\2#11110101;\2#11001101;\2#10101110;\2#1;",               1, 6, 13,         2#1101100110111, 3, 3) and
        chkGetBitsLsb("\2#10110101;\2#10011011;\2#01011101;\2#011;",             1, 7, 13,         2#1101100110111, 3, 4) and
        chkGetBitsLsb("\2#11011001;\2#10011011;\2#10011101;\2#101;",             1, 7, 13,         2#1101100110111, 3, 4) and
        chkGetBitsLsb("\2#00110111;\2#011011;",                                  1, 0, 14,        2#01101100110111, 2, 6) and
        chkGetBitsLsb("\2#01101110;\2#00110110;",                                1, 1, 14,        2#01101100110111, 2, 7) and
        chkGetBitsLsb("\2#01101111;\2#10110110;",                                1, 1, 14,        2#01101100110111, 2, 7) and
        chkGetBitsLsb("\2#11011101;\2#01101100;\2#01;",                          1, 2, 14,        2#01101100110111, 3, 0) and
        chkGetBitsLsb("\2#11011110;\2#01101100;\2#10;",                          1, 2, 14,        2#01101100110111, 3, 0) and
        chkGetBitsLsb("\2#10111010;\2#11011001;\2#0100;",                        1, 3, 14,        2#01101100110111, 3, 1) and
        chkGetBitsLsb("\2#10111101;\2#11011001;\2#1010;",                        1, 3, 14,        2#01101100110111, 3, 1) and
        chkGetBitsLsb("\2#01110101;\2#10110011;\2#010101;",                      1, 4, 14,        2#01101100110111, 3, 2) and
        chkGetBitsLsb("\2#01111011;\2#10110011;\2#101101;",                      1, 4, 14,        2#01101100110111, 3, 2) and
        chkGetBitsLsb("\2#11101011;\2#01100110;\2#01011011;",                    1, 5, 14,        2#01101100110111, 3, 3) and
        chkGetBitsLsb("\2#11110011;\2#01100110;\2#10011011;",                    1, 5, 14,        2#01101100110111, 3, 3) and
        chkGetBitsLsb("\2#11010011;\2#11001101;\2#00110110;\2#01;",              1, 6, 14,        2#01101100110111, 3, 4) and
        chkGetBitsLsb("\2#11110101;\2#11001101;\2#01010110;\2#11;",              1, 6, 14,        2#01101100110111, 3, 4) and
        chkGetBitsLsb("\2#10110101;\2#10011011;\2#10101101;\2#0110;",            1, 7, 14,        2#01101100110111, 3, 5) and
        chkGetBitsLsb("\2#11011001;\2#10011011;\2#00101101;\2#1011;",            1, 7, 14,        2#01101100110111, 3, 5) and
        chkGetBitsLsb("\2#11010101;\2#100110;",                                  1, 0, 14,        2#10011011010101, 2, 6) and
        chkGetBitsLsb("\2#10101010;\2#01001101;",                                1, 1, 14,        2#10011011010101, 2, 7) and
        chkGetBitsLsb("\2#10101011;\2#11001101;",                                1, 1, 14,        2#10011011010101, 2, 7) and
        chkGetBitsLsb("\2#01010101;\2#10011011;\2#01;",                          1, 2, 14,        2#10011011010101, 3, 0) and
        chkGetBitsLsb("\2#01010110;\2#10011011;\2#10;",                          1, 2, 14,        2#10011011010101, 3, 0) and
        chkGetBitsLsb("\2#10101010;\2#00110110;\2#0101;",                        1, 3, 14,        2#10011011010101, 3, 1) and
        chkGetBitsLsb("\2#10101101;\2#00110110;\2#1011;",                        1, 3, 14,        2#10011011010101, 3, 1) and
        chkGetBitsLsb("\2#01010101;\2#01101101;\2#010110;",                      1, 4, 14,        2#10011011010101, 3, 2) and
        chkGetBitsLsb("\2#01011011;\2#01101101;\2#101110;",                      1, 4, 14,        2#10011011010101, 3, 2) and
        chkGetBitsLsb("\2#10101011;\2#11011010;\2#01011100;",                    1, 5, 14,        2#10011011010101, 3, 3) and
        chkGetBitsLsb("\2#10110011;\2#11011010;\2#10011100;",                    1, 5, 14,        2#10011011010101, 3, 3) and
        chkGetBitsLsb("\2#01010011;\2#10110101;\2#00111001;\2#01;",              1, 6, 14,        2#10011011010101, 3, 4) and
        chkGetBitsLsb("\2#01110101;\2#10110101;\2#01011001;\2#11;",              1, 6, 14,        2#10011011010101, 3, 4) and
        chkGetBitsLsb("\2#10110101;\2#01101010;\2#10110011;\2#0110;",            1, 7, 14,        2#10011011010101, 3, 5) and
        chkGetBitsLsb("\2#11011001;\2#01101010;\2#00110011;\2#1011;",            1, 7, 14,        2#10011011010101, 3, 5) and
        chkGetBitsLsb("\2#11010101;\2#0100110;",                                 1, 0, 15,       2#010011011010101, 2, 7) and
        chkGetBitsLsb("\2#10101010;\2#01001101;\2#0;",                           1, 1, 15,       2#010011011010101, 3, 0) and
        chkGetBitsLsb("\2#10101011;\2#01001101;\2#1;",                           1, 1, 15,       2#010011011010101, 3, 0) and
        chkGetBitsLsb("\2#01010101;\2#10011011;\2#010;",                         1, 2, 15,       2#010011011010101, 3, 1) and
        chkGetBitsLsb("\2#01010110;\2#10011011;\2#100;",                         1, 2, 15,       2#010011011010101, 3, 1) and
        chkGetBitsLsb("\2#10101010;\2#00110110;\2#01001;",                       1, 3, 15,       2#010011011010101, 3, 2) and
        chkGetBitsLsb("\2#10101101;\2#00110110;\2#10101;",                       1, 3, 15,       2#010011011010101, 3, 2) and
        chkGetBitsLsb("\2#01010101;\2#01101101;\2#0101010;",                     1, 4, 15,       2#010011011010101, 3, 3) and
        chkGetBitsLsb("\2#01011011;\2#01101101;\2#1011010;",                     1, 4, 15,       2#010011011010101, 3, 3) and
        chkGetBitsLsb("\2#10101011;\2#11011010;\2#10110100;\2#0;",               1, 5, 15,       2#010011011010101, 3, 4) and
        chkGetBitsLsb("\2#10110011;\2#11011010;\2#00110100;\2#1;",               1, 5, 15,       2#010011011010101, 3, 4) and
        chkGetBitsLsb("\2#01010011;\2#10110101;\2#01101001;\2#010;",             1, 6, 15,       2#010011011010101, 3, 5) and
        chkGetBitsLsb("\2#01110101;\2#10110101;\2#10101001;\2#110;",             1, 6, 15,       2#010011011010101, 3, 5) and
        chkGetBitsLsb("\2#10110101;\2#01101010;\2#01010011;\2#01101;",           1, 7, 15,       2#010011011010101, 3, 6) and
        chkGetBitsLsb("\2#11011001;\2#01101010;\2#01010011;\2#10110;",           1, 7, 15,       2#010011011010101, 3, 6) and
        chkGetBitsLsb("\2#11011001;\2#1001011;",                                 1, 0, 15,       2#100101111011001, 2, 7) and
        chkGetBitsLsb("\2#10110010;\2#10010111;\2#0;",                           1, 1, 15,       2#100101111011001, 3, 0) and
        chkGetBitsLsb("\2#10110011;\2#10010111;\2#1;",                           1, 1, 15,       2#100101111011001, 3, 0) and
        chkGetBitsLsb("\2#01100101;\2#00101111;\2#011;",                         1, 2, 15,       2#100101111011001, 3, 1) and
        chkGetBitsLsb("\2#01100110;\2#00101111;\2#101;",                         1, 2, 15,       2#100101111011001, 3, 1) and
        chkGetBitsLsb("\2#11001010;\2#01011110;\2#01010;",                       1, 3, 15,       2#100101111011001, 3, 2) and
        chkGetBitsLsb("\2#11001101;\2#01011110;\2#10110;",                       1, 3, 15,       2#100101111011001, 3, 2) and
        chkGetBitsLsb("\2#10010101;\2#10111101;\2#0101100;",                     1, 4, 15,       2#100101111011001, 3, 3) and
        chkGetBitsLsb("\2#10011011;\2#10111101;\2#1011100;",                     1, 4, 15,       2#100101111011001, 3, 3) and
        chkGetBitsLsb("\2#00101011;\2#01111011;\2#10111001;\2#0;",               1, 5, 15,       2#100101111011001, 3, 4) and
        chkGetBitsLsb("\2#00110011;\2#01111011;\2#00111001;\2#1;",               1, 5, 15,       2#100101111011001, 3, 4) and
        chkGetBitsLsb("\2#01010011;\2#11110110;\2#01110010;\2#010;",             1, 6, 15,       2#100101111011001, 3, 5) and
        chkGetBitsLsb("\2#01110101;\2#11110110;\2#10110010;\2#110;",             1, 6, 15,       2#100101111011001, 3, 5) and
        chkGetBitsLsb("\2#10110101;\2#11101100;\2#01100101;\2#01101;",           1, 7, 15,       2#100101111011001, 3, 6) and
        chkGetBitsLsb("\2#11011001;\2#11101100;\2#01100101;\2#10110;",           1, 7, 15,       2#100101111011001, 3, 6) and
        chkGetBitsLsb("\2#11011001;\2#01001011;",                                1, 0, 16,      2#0100101111011001, 3, 0) and
        chkGetBitsLsb("\2#10110010;\2#10010111;\2#00;",                          1, 1, 16,      2#0100101111011001, 3, 1) and
        chkGetBitsLsb("\2#10110011;\2#10010111;\2#10;",                          1, 1, 16,      2#0100101111011001, 3, 1) and
        chkGetBitsLsb("\2#01100101;\2#00101111;\2#0101;",                        1, 2, 16,      2#0100101111011001, 3, 2) and
        chkGetBitsLsb("\2#01100110;\2#00101111;\2#1001;",                        1, 2, 16,      2#0100101111011001, 3, 2) and
        chkGetBitsLsb("\2#11001010;\2#01011110;\2#010010;",                      1, 3, 16,      2#0100101111011001, 3, 3) and
        chkGetBitsLsb("\2#11001101;\2#01011110;\2#101010;",                      1, 3, 16,      2#0100101111011001, 3, 3) and
        chkGetBitsLsb("\2#10010101;\2#10111101;\2#01010100;",                    1, 4, 16,      2#0100101111011001, 3, 4) and
        chkGetBitsLsb("\2#10011011;\2#10111101;\2#10110100;",                    1, 4, 16,      2#0100101111011001, 3, 4) and
        chkGetBitsLsb("\2#00101011;\2#01111011;\2#01101001;\2#01;",              1, 5, 16,      2#0100101111011001, 3, 5) and
        chkGetBitsLsb("\2#00110011;\2#01111011;\2#01101001;\2#10;",              1, 5, 16,      2#0100101111011001, 3, 5) and
        chkGetBitsLsb("\2#01010011;\2#11110110;\2#11010010;\2#0100;",            1, 6, 16,      2#0100101111011001, 3, 6) and
        chkGetBitsLsb("\2#01110101;\2#11110110;\2#01010010;\2#1101;",            1, 6, 16,      2#0100101111011001, 3, 6) and
        chkGetBitsLsb("\2#10110101;\2#11101100;\2#10100101;\2#011010;",          1, 7, 16,      2#0100101111011001, 3, 7) and
        chkGetBitsLsb("\2#11011001;\2#11101100;\2#10100101;\2#101100;",          1, 7, 16,      2#0100101111011001, 3, 7) and
        chkGetBitsLsb("\2#01100111;\2#11011000;",                                1, 0, 16,      2#1101100001100111, 3, 0) and
        chkGetBitsLsb("\2#11001110;\2#10110000;\2#01;",                          1, 1, 16,      2#1101100001100111, 3, 1) and
        chkGetBitsLsb("\2#11001111;\2#10110000;\2#11;",                          1, 1, 16,      2#1101100001100111, 3, 1) and
        chkGetBitsLsb("\2#10011101;\2#01100001;\2#0111;",                        1, 2, 16,      2#1101100001100111, 3, 2) and
        chkGetBitsLsb("\2#10011110;\2#01100001;\2#1011;",                        1, 2, 16,      2#1101100001100111, 3, 2) and
        chkGetBitsLsb("\2#00111010;\2#11000011;\2#010110;",                      1, 3, 16,      2#1101100001100111, 3, 3) and
        chkGetBitsLsb("\2#00111101;\2#11000011;\2#101110;",                      1, 3, 16,      2#1101100001100111, 3, 3) and
        chkGetBitsLsb("\2#01110101;\2#10000110;\2#01011101;",                    1, 4, 16,      2#1101100001100111, 3, 4) and
        chkGetBitsLsb("\2#01111011;\2#10000110;\2#10111101;",                    1, 4, 16,      2#1101100001100111, 3, 4) and
        chkGetBitsLsb("\2#11101011;\2#00001100;\2#01111011;\2#01;",              1, 5, 16,      2#1101100001100111, 3, 5) and
        chkGetBitsLsb("\2#11110011;\2#00001100;\2#01111011;\2#10;",              1, 5, 16,      2#1101100001100111, 3, 5) and
        chkGetBitsLsb("\2#11010011;\2#00011001;\2#11110110;\2#0100;",            1, 6, 16,      2#1101100001100111, 3, 6) and
        chkGetBitsLsb("\2#11110101;\2#00011001;\2#01110110;\2#1101;",            1, 6, 16,      2#1101100001100111, 3, 6) and
        chkGetBitsLsb("\2#10110101;\2#00110011;\2#11101100;\2#011010;",          1, 7, 16,      2#1101100001100111, 3, 7) and
        chkGetBitsLsb("\2#11011001;\2#00110011;\2#11101100;\2#101100;",          1, 7, 16,      2#1101100001100111, 3, 7) and
        chkGetBitsLsb("\2#01100111;\2#11011000;\2#0;",                           1, 0, 17,     2#01101100001100111, 3, 1) and
        chkGetBitsLsb("\2#11001110;\2#10110000;\2#001;",                         1, 1, 17,     2#01101100001100111, 3, 2) and
        chkGetBitsLsb("\2#11001111;\2#10110000;\2#101;",                         1, 1, 17,     2#01101100001100111, 3, 2) and
        chkGetBitsLsb("\2#10011101;\2#01100001;\2#01011;",                       1, 2, 17,     2#01101100001100111, 3, 3) and
        chkGetBitsLsb("\2#10011110;\2#01100001;\2#10011;",                       1, 2, 17,     2#01101100001100111, 3, 3) and
        chkGetBitsLsb("\2#00111010;\2#11000011;\2#0100110;",                     1, 3, 17,     2#01101100001100111, 3, 4) and
        chkGetBitsLsb("\2#00111101;\2#11000011;\2#1010110;",                     1, 3, 17,     2#01101100001100111, 3, 4) and
        chkGetBitsLsb("\2#01110101;\2#10000110;\2#10101101;\2#0;",               1, 4, 17,     2#01101100001100111, 3, 5) and
        chkGetBitsLsb("\2#01111011;\2#10000110;\2#01101101;\2#1;",               1, 4, 17,     2#01101100001100111, 3, 5) and
        chkGetBitsLsb("\2#11101011;\2#00001100;\2#11011011;\2#010;",             1, 5, 17,     2#01101100001100111, 3, 6) and
        chkGetBitsLsb("\2#11110011;\2#00001100;\2#11011011;\2#100;",             1, 5, 17,     2#01101100001100111, 3, 6) and
        chkGetBitsLsb("\2#11010011;\2#00011001;\2#10110110;\2#01001;",           1, 6, 17,     2#01101100001100111, 3, 7) and
        chkGetBitsLsb("\2#11110101;\2#00011001;\2#10110110;\2#11010;",           1, 6, 17,     2#01101100001100111, 3, 7) and
        chkGetBitsLsb("\2#10110101;\2#00110011;\2#01101100;\2#0110101;",         1, 7, 17,     2#01101100001100111, 4, 0) and
        chkGetBitsLsb("\2#11011001;\2#00110011;\2#01101100;\2#1011001;",         1, 7, 17,     2#01101100001100111, 4, 0) and
        chkGetBitsLsb("\2#10011101;\2#01000101;\2#1;",                           1, 0, 17,     2#10100010110011101, 3, 1) and
        chkGetBitsLsb("\2#00111010;\2#10001011;\2#010;",                         1, 1, 17,     2#10100010110011101, 3, 2) and
        chkGetBitsLsb("\2#00111011;\2#10001011;\2#110;",                         1, 1, 17,     2#10100010110011101, 3, 2) and
        chkGetBitsLsb("\2#01110101;\2#00010110;\2#01101;",                       1, 2, 17,     2#10100010110011101, 3, 3) and
        chkGetBitsLsb("\2#01110110;\2#00010110;\2#10101;",                       1, 2, 17,     2#10100010110011101, 3, 3) and
        chkGetBitsLsb("\2#11101010;\2#00101100;\2#0101010;",                     1, 3, 17,     2#10100010110011101, 3, 4) and
        chkGetBitsLsb("\2#11101101;\2#00101100;\2#1011010;",                     1, 3, 17,     2#10100010110011101, 3, 4) and
        chkGetBitsLsb("\2#11010101;\2#01011001;\2#10110100;\2#0;",               1, 4, 17,     2#10100010110011101, 3, 5) and
        chkGetBitsLsb("\2#11011011;\2#01011001;\2#01110100;\2#1;",               1, 4, 17,     2#10100010110011101, 3, 5) and
        chkGetBitsLsb("\2#10101011;\2#10110011;\2#11101000;\2#010;",             1, 5, 17,     2#10100010110011101, 3, 6) and
        chkGetBitsLsb("\2#10110011;\2#10110011;\2#11101000;\2#100;",             1, 5, 17,     2#10100010110011101, 3, 6) and
        chkGetBitsLsb("\2#01010011;\2#01100111;\2#11010001;\2#01001;",           1, 6, 17,     2#10100010110011101, 3, 7) and
        chkGetBitsLsb("\2#01110101;\2#01100111;\2#11010001;\2#11010;",           1, 6, 17,     2#10100010110011101, 3, 7) and
        chkGetBitsLsb("\2#10110101;\2#11001110;\2#10100010;\2#0110101;",         1, 7, 17,     2#10100010110011101, 4, 0) and
        chkGetBitsLsb("\2#11011001;\2#11001110;\2#10100010;\2#1011001;",         1, 7, 17,     2#10100010110011101, 4, 0) and
        chkGetBitsLsb("\2#10011101;\2#01000101;\2#01;",                          1, 0, 18,    2#010100010110011101, 3, 2) and
        chkGetBitsLsb("\2#00111010;\2#10001011;\2#0010;",                        1, 1, 18,    2#010100010110011101, 3, 3) and
        chkGetBitsLsb("\2#00111011;\2#10001011;\2#1010;",                        1, 1, 18,    2#010100010110011101, 3, 3) and
        chkGetBitsLsb("\2#01110101;\2#00010110;\2#010101;",                      1, 2, 18,    2#010100010110011101, 3, 4) and
        chkGetBitsLsb("\2#01110110;\2#00010110;\2#100101;",                      1, 2, 18,    2#010100010110011101, 3, 4) and
        chkGetBitsLsb("\2#11101010;\2#00101100;\2#01001010;",                    1, 3, 18,    2#010100010110011101, 3, 5) and
        chkGetBitsLsb("\2#11101101;\2#00101100;\2#10101010;",                    1, 3, 18,    2#010100010110011101, 3, 5) and
        chkGetBitsLsb("\2#11010101;\2#01011001;\2#01010100;\2#01;",              1, 4, 18,    2#010100010110011101, 3, 6) and
        chkGetBitsLsb("\2#11011011;\2#01011001;\2#11010100;\2#10;",              1, 4, 18,    2#010100010110011101, 3, 6) and
        chkGetBitsLsb("\2#10101011;\2#10110011;\2#10101000;\2#0101;",            1, 5, 18,    2#010100010110011101, 3, 7) and
        chkGetBitsLsb("\2#10110011;\2#10110011;\2#10101000;\2#1001;",            1, 5, 18,    2#010100010110011101, 3, 7) and
        chkGetBitsLsb("\2#01010011;\2#01100111;\2#01010001;\2#010011;",          1, 6, 18,    2#010100010110011101, 4, 0) and
        chkGetBitsLsb("\2#01110101;\2#01100111;\2#01010001;\2#110101;",          1, 6, 18,    2#010100010110011101, 4, 0) and
        chkGetBitsLsb("\2#10110101;\2#11001110;\2#10100010;\2#01101010;",        1, 7, 18,    2#010100010110011101, 4, 1) and
        chkGetBitsLsb("\2#11011001;\2#11001110;\2#10100010;\2#10110010;",        1, 7, 18,    2#010100010110011101, 4, 1) and
        chkGetBitsLsb("\2#11011101;\2#10010100;\2#10;",                          1, 0, 18,    2#101001010011011101, 3, 2) and
        chkGetBitsLsb("\2#10111010;\2#00101001;\2#0101;",                        1, 1, 18,    2#101001010011011101, 3, 3) and
        chkGetBitsLsb("\2#10111011;\2#00101001;\2#1101;",                        1, 1, 18,    2#101001010011011101, 3, 3) and
        chkGetBitsLsb("\2#01110101;\2#01010011;\2#011010;",                      1, 2, 18,    2#101001010011011101, 3, 4) and
        chkGetBitsLsb("\2#01110110;\2#01010011;\2#101010;",                      1, 2, 18,    2#101001010011011101, 3, 4) and
        chkGetBitsLsb("\2#11101010;\2#10100110;\2#01010100;",                    1, 3, 18,    2#101001010011011101, 3, 5) and
        chkGetBitsLsb("\2#11101101;\2#10100110;\2#10110100;",                    1, 3, 18,    2#101001010011011101, 3, 5) and
        chkGetBitsLsb("\2#11010101;\2#01001101;\2#01101001;\2#01;",              1, 4, 18,    2#101001010011011101, 3, 6) and
        chkGetBitsLsb("\2#11011011;\2#01001101;\2#11101001;\2#10;",              1, 4, 18,    2#101001010011011101, 3, 6) and
        chkGetBitsLsb("\2#10101011;\2#10011011;\2#11010010;\2#0101;",            1, 5, 18,    2#101001010011011101, 3, 7) and
        chkGetBitsLsb("\2#10110011;\2#10011011;\2#11010010;\2#1001;",            1, 5, 18,    2#101001010011011101, 3, 7) and
        chkGetBitsLsb("\2#01010011;\2#00110111;\2#10100101;\2#010011;",          1, 6, 18,    2#101001010011011101, 4, 0) and
        chkGetBitsLsb("\2#01110101;\2#00110111;\2#10100101;\2#110101;",          1, 6, 18,    2#101001010011011101, 4, 0) and
        chkGetBitsLsb("\2#10110101;\2#01101110;\2#01001010;\2#01101011;",        1, 7, 18,    2#101001010011011101, 4, 1) and
        chkGetBitsLsb("\2#11011001;\2#01101110;\2#01001010;\2#10110011;",        1, 7, 18,    2#101001010011011101, 4, 1) and
        chkGetBitsLsb("\2#11011101;\2#10010100;\2#010;",                         1, 0, 19,   2#0101001010011011101, 3, 3) and
        chkGetBitsLsb("\2#10111010;\2#00101001;\2#00101;",                       1, 1, 19,   2#0101001010011011101, 3, 4) and
        chkGetBitsLsb("\2#10111011;\2#00101001;\2#10101;",                       1, 1, 19,   2#0101001010011011101, 3, 4) and
        chkGetBitsLsb("\2#01110101;\2#01010011;\2#0101010;",                     1, 2, 19,   2#0101001010011011101, 3, 5) and
        chkGetBitsLsb("\2#01110110;\2#01010011;\2#1001010;",                     1, 2, 19,   2#0101001010011011101, 3, 5) and
        chkGetBitsLsb("\2#11101010;\2#10100110;\2#10010100;\2#0;",               1, 3, 19,   2#0101001010011011101, 3, 6) and
        chkGetBitsLsb("\2#11101101;\2#10100110;\2#01010100;\2#1;",               1, 3, 19,   2#0101001010011011101, 3, 6) and
        chkGetBitsLsb("\2#11010101;\2#01001101;\2#10101001;\2#010;",             1, 4, 19,   2#0101001010011011101, 3, 7) and
        chkGetBitsLsb("\2#11011011;\2#01001101;\2#10101001;\2#101;",             1, 4, 19,   2#0101001010011011101, 3, 7) and
        chkGetBitsLsb("\2#10101011;\2#10011011;\2#01010010;\2#01011;",           1, 5, 19,   2#0101001010011011101, 4, 0) and
        chkGetBitsLsb("\2#10110011;\2#10011011;\2#01010010;\2#10011;",           1, 5, 19,   2#0101001010011011101, 4, 0) and
        chkGetBitsLsb("\2#01010011;\2#00110111;\2#10100101;\2#0100110;",         1, 6, 19,   2#0101001010011011101, 4, 1) and
        chkGetBitsLsb("\2#01110101;\2#00110111;\2#10100101;\2#1101010;",         1, 6, 19,   2#0101001010011011101, 4, 1) and
        chkGetBitsLsb("\2#10110101;\2#01101110;\2#01001010;\2#11010101;\2#0;",   1, 7, 19,   2#0101001010011011101, 4, 2) and
        chkGetBitsLsb("\2#11011001;\2#01101110;\2#01001010;\2#01100101;\2#1;",   1, 7, 19,   2#0101001010011011101, 4, 2) and
        chkGetBitsLsb("\2#11001001;\2#11011001;\2#110;",                         1, 0, 19,   2#1101101100111001001, 3, 3) and
        chkGetBitsLsb("\2#10010010;\2#10110011;\2#01101;",                       1, 1, 19,   2#1101101100111001001, 3, 4) and
        chkGetBitsLsb("\2#10010011;\2#10110011;\2#11101;",                       1, 1, 19,   2#1101101100111001001, 3, 4) and
        chkGetBitsLsb("\2#00100101;\2#01100111;\2#0111011;",                     1, 2, 19,   2#1101101100111001001, 3, 5) and
        chkGetBitsLsb("\2#00100110;\2#01100111;\2#1011011;",                     1, 2, 19,   2#1101101100111001001, 3, 5) and
        chkGetBitsLsb("\2#01001010;\2#11001110;\2#10110110;\2#0;",               1, 3, 19,   2#1101101100111001001, 3, 6) and
        chkGetBitsLsb("\2#01001101;\2#11001110;\2#01110110;\2#1;",               1, 3, 19,   2#1101101100111001001, 3, 6) and
        chkGetBitsLsb("\2#10010101;\2#10011100;\2#11101101;\2#010;",             1, 4, 19,   2#1101101100111001001, 3, 7) and
        chkGetBitsLsb("\2#10011011;\2#10011100;\2#11101101;\2#101;",             1, 4, 19,   2#1101101100111001001, 3, 7) and
        chkGetBitsLsb("\2#00101011;\2#00111001;\2#11011011;\2#01011;",           1, 5, 19,   2#1101101100111001001, 4, 0) and
        chkGetBitsLsb("\2#00110011;\2#00111001;\2#11011011;\2#10011;",           1, 5, 19,   2#1101101100111001001, 4, 0) and
        chkGetBitsLsb("\2#01010011;\2#01110010;\2#10110110;\2#0100111;",         1, 6, 19,   2#1101101100111001001, 4, 1) and
        chkGetBitsLsb("\2#01110101;\2#01110010;\2#10110110;\2#1101011;",         1, 6, 19,   2#1101101100111001001, 4, 1) and
        chkGetBitsLsb("\2#10110101;\2#11100100;\2#01101100;\2#11010111;\2#0;",   1, 7, 19,   2#1101101100111001001, 4, 2) and
        chkGetBitsLsb("\2#11011001;\2#11100100;\2#01101100;\2#01100111;\2#1;",   1, 7, 19,   2#1101101100111001001, 4, 2) and
        chkGetBitsLsb("\2#11001001;\2#11011001;\2#0110;",                        1, 0, 20,  2#01101101100111001001, 3, 4) and
        chkGetBitsLsb("\2#10010010;\2#10110011;\2#001101;",                      1, 1, 20,  2#01101101100111001001, 3, 5) and
        chkGetBitsLsb("\2#10010011;\2#10110011;\2#101101;",                      1, 1, 20,  2#01101101100111001001, 3, 5) and
        chkGetBitsLsb("\2#00100101;\2#01100111;\2#01011011;",                    1, 2, 20,  2#01101101100111001001, 3, 6) and
        chkGetBitsLsb("\2#00100110;\2#01100111;\2#10011011;",                    1, 2, 20,  2#01101101100111001001, 3, 6) and
        chkGetBitsLsb("\2#01001010;\2#11001110;\2#00110110;\2#01;",              1, 3, 20,  2#01101101100111001001, 3, 7) and
        chkGetBitsLsb("\2#01001101;\2#11001110;\2#10110110;\2#10;",              1, 3, 20,  2#01101101100111001001, 3, 7) and
        chkGetBitsLsb("\2#10010101;\2#10011100;\2#01101101;\2#0101;",            1, 4, 20,  2#01101101100111001001, 4, 0) and
        chkGetBitsLsb("\2#10011011;\2#10011100;\2#01101101;\2#1011;",            1, 4, 20,  2#01101101100111001001, 4, 0) and
        chkGetBitsLsb("\2#00101011;\2#00111001;\2#11011011;\2#010110;",          1, 5, 20,  2#01101101100111001001, 4, 1) and
        chkGetBitsLsb("\2#00110011;\2#00111001;\2#11011011;\2#100110;",          1, 5, 20,  2#01101101100111001001, 4, 1) and
        chkGetBitsLsb("\2#01010011;\2#01110010;\2#10110110;\2#01001101;",        1, 6, 20,  2#01101101100111001001, 4, 2) and
        chkGetBitsLsb("\2#01110101;\2#01110010;\2#10110110;\2#11010101;",        1, 6, 20,  2#01101101100111001001, 4, 2) and
        chkGetBitsLsb("\2#10110101;\2#11100100;\2#01101100;\2#10101011;\2#01;",  1, 7, 20,  2#01101101100111001001, 4, 3) and
        chkGetBitsLsb("\2#11011001;\2#11100100;\2#01101100;\2#11001011;\2#10;",  1, 7, 20,  2#01101101100111001001, 4, 3) and
        chkGetBitsLsb("\2#11001001;\2#01111110;\2#1110;",                        1, 0, 20,  2#11100111111011001001, 3, 4) and
        chkGetBitsLsb("\2#10010010;\2#11111101;\2#011100;",                      1, 1, 20,  2#11100111111011001001, 3, 5) and
        chkGetBitsLsb("\2#10010011;\2#11111101;\2#111100;",                      1, 1, 20,  2#11100111111011001001, 3, 5) and
        chkGetBitsLsb("\2#00100101;\2#11111011;\2#01111001;",                    1, 2, 20,  2#11100111111011001001, 3, 6) and
        chkGetBitsLsb("\2#00100110;\2#11111011;\2#10111001;",                    1, 2, 20,  2#11100111111011001001, 3, 6) and
        chkGetBitsLsb("\2#01001010;\2#11110110;\2#01110011;\2#01;",              1, 3, 20,  2#11100111111011001001, 3, 7) and
        chkGetBitsLsb("\2#01001101;\2#11110110;\2#11110011;\2#10;",              1, 3, 20,  2#11100111111011001001, 3, 7) and
        chkGetBitsLsb("\2#10010101;\2#11101100;\2#11100111;\2#0101;",            1, 4, 20,  2#11100111111011001001, 4, 0) and
        chkGetBitsLsb("\2#10011011;\2#11101100;\2#11100111;\2#1011;",            1, 4, 20,  2#11100111111011001001, 4, 0) and
        chkGetBitsLsb("\2#00101011;\2#11011001;\2#11001111;\2#010111;",          1, 5, 20,  2#11100111111011001001, 4, 1) and
        chkGetBitsLsb("\2#00110011;\2#11011001;\2#11001111;\2#100111;",          1, 5, 20,  2#11100111111011001001, 4, 1) and
        chkGetBitsLsb("\2#01010011;\2#10110010;\2#10011111;\2#01001111;",        1, 6, 20,  2#11100111111011001001, 4, 2) and
        chkGetBitsLsb("\2#01110101;\2#10110010;\2#10011111;\2#11010111;",        1, 6, 20,  2#11100111111011001001, 4, 2) and
        chkGetBitsLsb("\2#10110101;\2#01100100;\2#00111111;\2#10101111;\2#01;",  1, 7, 20,  2#11100111111011001001, 4, 3) and
        chkGetBitsLsb("\2#11011001;\2#01100100;\2#00111111;\2#11001111;\2#10;",  1, 7, 20,  2#11100111111011001001, 4, 3) and
        chkGetBitsLsb("\2#11001001;\2#01111110;\2#01110;",                       1, 0, 21, 2#011100111111011001001, 3, 5) and
        chkGetBitsLsb("\2#10010010;\2#11111101;\2#0011100;",                     1, 1, 21, 2#011100111111011001001, 3, 6) and
        chkGetBitsLsb("\2#10010011;\2#11111101;\2#1011100;",                     1, 1, 21, 2#011100111111011001001, 3, 6) and
        chkGetBitsLsb("\2#00100101;\2#11111011;\2#10111001;\2#0;",               1, 2, 21, 2#011100111111011001001, 3, 7) and
        chkGetBitsLsb("\2#00100110;\2#11111011;\2#00111001;\2#1;",               1, 2, 21, 2#011100111111011001001, 3, 7) and
        chkGetBitsLsb("\2#01001010;\2#11110110;\2#01110011;\2#010;",             1, 3, 21, 2#011100111111011001001, 4, 0) and
        chkGetBitsLsb("\2#01001101;\2#11110110;\2#01110011;\2#101;",             1, 3, 21, 2#011100111111011001001, 4, 0) and
        chkGetBitsLsb("\2#10010101;\2#11101100;\2#11100111;\2#01010;",           1, 4, 21, 2#011100111111011001001, 4, 1) and
        chkGetBitsLsb("\2#10011011;\2#11101100;\2#11100111;\2#10110;",           1, 4, 21, 2#011100111111011001001, 4, 1) and
        chkGetBitsLsb("\2#00101011;\2#11011001;\2#11001111;\2#0101101;",         1, 5, 21, 2#011100111111011001001, 4, 2) and
        chkGetBitsLsb("\2#00110011;\2#11011001;\2#11001111;\2#1001101;",         1, 5, 21, 2#011100111111011001001, 4, 2) and
        chkGetBitsLsb("\2#01010011;\2#10110010;\2#10011111;\2#10011011;\2#0;",   1, 6, 21, 2#011100111111011001001, 4, 3) and
        chkGetBitsLsb("\2#01110101;\2#10110010;\2#10011111;\2#10101011;\2#1;",   1, 6, 21, 2#011100111111011001001, 4, 3) and
        chkGetBitsLsb("\2#10110101;\2#01100100;\2#00111111;\2#01010111;\2#011;", 1, 7, 21, 2#011100111111011001001, 4, 4) and
        chkGetBitsLsb("\2#11011001;\2#01100100;\2#00111111;\2#10010111;\2#101;", 1, 7, 21, 2#011100111111011001001, 4, 4) and
        chkGetBitsLsb("\2#11000111;\2#00100101;\2#10100;",                       1, 0, 21, 2#101000010010111000111, 3, 5) and
        chkGetBitsLsb("\2#10001110;\2#01001011;\2#0101000;",                     1, 1, 21, 2#101000010010111000111, 3, 6) and
        chkGetBitsLsb("\2#10001111;\2#01001011;\2#1101000;",                     1, 1, 21, 2#101000010010111000111, 3, 6) and
        chkGetBitsLsb("\2#00011101;\2#10010111;\2#11010000;\2#0;",               1, 2, 21, 2#101000010010111000111, 3, 7) and
        chkGetBitsLsb("\2#00011110;\2#10010111;\2#01010000;\2#1;",               1, 2, 21, 2#101000010010111000111, 3, 7) and
        chkGetBitsLsb("\2#00111010;\2#00101110;\2#10100001;\2#010;",             1, 3, 21, 2#101000010010111000111, 4, 0) and
        chkGetBitsLsb("\2#00111101;\2#00101110;\2#10100001;\2#101;",             1, 3, 21, 2#101000010010111000111, 4, 0) and
        chkGetBitsLsb("\2#01110101;\2#01011100;\2#01000010;\2#01011;",           1, 4, 21, 2#101000010010111000111, 4, 1) and
        chkGetBitsLsb("\2#01111011;\2#01011100;\2#01000010;\2#10111;",           1, 4, 21, 2#101000010010111000111, 4, 1) and
        chkGetBitsLsb("\2#11101011;\2#10111000;\2#10000100;\2#0101110;",         1, 5, 21, 2#101000010010111000111, 4, 2) and
        chkGetBitsLsb("\2#11110011;\2#10111000;\2#10000100;\2#1001110;",         1, 5, 21, 2#101000010010111000111, 4, 2) and
        chkGetBitsLsb("\2#11010011;\2#01110001;\2#00001001;\2#10011101;\2#0;",   1, 6, 21, 2#101000010010111000111, 4, 3) and
        chkGetBitsLsb("\2#11110101;\2#01110001;\2#00001001;\2#10101101;\2#1;",   1, 6, 21, 2#101000010010111000111, 4, 3) and
        chkGetBitsLsb("\2#10110101;\2#11100011;\2#00010010;\2#01011010;\2#011;", 1, 7, 21, 2#101000010010111000111, 4, 4) and
        chkGetBitsLsb("\2#11011001;\2#11100011;\2#00010010;\2#10011010;\2#101;", 1, 7, 21, 2#101000010010111000111, 4, 4) then
      writeln("getBitsLsb works correct.");
    end if;
  end func;


const func boolean: chkPutBitLsb (in string: stri, in integer: bitPos,
    in integer: bit, in string: striExpected, in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var string: striVar is "";
    var integer: bitPosVar is 0;
    var file: testFile is STD_NULL;
  begin
    striVar := stri;
    bitPosVar := bitPos;
    putBitLsb(striVar, bitPosVar, bit);
    if striVar <> striExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("putBitLsb(\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\", " <& bitPos <& ", " <& bit radix 2 <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    if bitPos = 0 then
      testFile := openStrifile(stri);
      testFile.bufferChar := '\0;';
    else
      testFile := openStrifile(stri[.. pred(length(stri))]);
      testFile.bufferChar := stri[length(stri)];
    end if;
    bitPosVar := bitPos;
    putBitLsb(testFile, bitPosVar, bit);
    seek(testFile, 1);
    striVar := gets(testFile, length(testFile));
    if bitPosVar <> 0 then
      striVar &:= testFile.bufferChar;
    end if;
    if striVar <> striExpected or bitPosVar <> bitPosExpected or (bitPosVar = 0 and testFile.bufferChar <> '\0;') then
      okay := FALSE;
      write("\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\": putBitLsb(testFile, " <& bitPos <& ", " <& bit radix 2 <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
      if bitPosVar = 0 and testFile.bufferChar <> '\0;' then
        writeln(" ***** Expected bufferChar to be '\\0;' if bitPos is 0. Found '\\" <& ord(testFile.bufferChar) <& ";'");
      end if;
    end if;
  end func;


const proc: chkPutBitLsb is func
  begin
    if  chkPutBitLsb(           "", 0, 2#0, "\2#0;", 1) and
        chkPutBitLsb(      "\2#0;", 1, 2#0, "\2#00;", 2) and
        chkPutBitLsb(      "\2#1;", 1, 2#0, "\2#01;", 2) and
        chkPutBitLsb(     "\2#01;", 2, 2#0, "\2#001;", 3) and
        chkPutBitLsb(     "\2#10;", 2, 2#0, "\2#010;", 3) and
        chkPutBitLsb(    "\2#010;", 3, 2#0, "\2#0010;", 4) and
        chkPutBitLsb(    "\2#101;", 3, 2#0, "\2#0101;", 4) and
        chkPutBitLsb(   "\2#0101;", 4, 2#0, "\2#00101;", 5) and
        chkPutBitLsb(   "\2#1011;", 4, 2#0, "\2#01011;", 5) and
        chkPutBitLsb(  "\2#01011;", 5, 2#0, "\2#001011;", 6) and
        chkPutBitLsb(  "\2#10011;", 5, 2#0, "\2#010011;", 6) and
        chkPutBitLsb( "\2#010011;", 6, 2#0, "\2#0010011;", 7) and
        chkPutBitLsb( "\2#110101;", 6, 2#0, "\2#0110101;", 7) and
        chkPutBitLsb("\2#0110101;", 7, 2#0, "\2#00110101;", 0) and
        chkPutBitLsb("\2#1011001;", 7, 2#0, "\2#01011001;", 0) and
        chkPutBitLsb(           "", 0, 2#1, "\2#1;", 1) and
        chkPutBitLsb(      "\2#0;", 1, 2#1, "\2#10;", 2) and
        chkPutBitLsb(      "\2#1;", 1, 2#1, "\2#11;", 2) and
        chkPutBitLsb(     "\2#01;", 2, 2#1, "\2#101;", 3) and
        chkPutBitLsb(     "\2#10;", 2, 2#1, "\2#110;", 3) and
        chkPutBitLsb(    "\2#010;", 3, 2#1, "\2#1010;", 4) and
        chkPutBitLsb(    "\2#101;", 3, 2#1, "\2#1101;", 4) and
        chkPutBitLsb(   "\2#0101;", 4, 2#1, "\2#10101;", 5) and
        chkPutBitLsb(   "\2#1011;", 4, 2#1, "\2#11011;", 5) and
        chkPutBitLsb(  "\2#01011;", 5, 2#1, "\2#101011;", 6) and
        chkPutBitLsb(  "\2#10011;", 5, 2#1, "\2#110011;", 6) and
        chkPutBitLsb( "\2#010011;", 6, 2#1, "\2#1010011;", 7) and
        chkPutBitLsb( "\2#110101;", 6, 2#1, "\2#1110101;", 7) and
        chkPutBitLsb("\2#0110101;", 7, 2#1, "\2#10110101;", 0) and
        chkPutBitLsb("\2#1011001;", 7, 2#1, "\2#11011001;", 0) then
      writeln("putBitLsb works correct.");
    end if;
  end func;


const func boolean: chkPutBitsLsb (in string: stri, in integer: bitPos,
    in integer: bits, in integer: bitsToWrite, in string: striExpected,
    in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var string: striVar is "";
    var integer: bitPosVar is 0;
    var file: testFile is STD_NULL;
  begin
    striVar := stri;
    bitPosVar := bitPos;
    putBitsLsb(striVar, bitPosVar, bits, bitsToWrite);
    if striVar <> striExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("putBitsLsb(\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\", " <& bitPos <& ", " <& bits radix 2 <& ", " <& bitsToWrite <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    if bitPos = 0 then
      testFile := openStrifile(stri);
      testFile.bufferChar := '\0;';
    else
      testFile := openStrifile(stri[.. pred(length(stri))]);
      testFile.bufferChar := stri[length(stri)];
    end if;
    bitPosVar := bitPos;
    putBitsLsb(testFile, bitPosVar, bits, bitsToWrite);
    seek(testFile, 1);
    striVar := gets(testFile, length(testFile));
    if bitPosVar <> 0 then
      striVar &:= testFile.bufferChar;
    end if;
    if striVar <> striExpected or bitPosVar <> bitPosExpected or (bitPosVar = 0 and testFile.bufferChar <> '\0;') then
      okay := FALSE;
      write("\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\": putBitsLsb(testFile, " <& bitPos <& ", " <& bits radix 2 <& ", " <& bitsToWrite <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
      if bitPosVar = 0 and testFile.bufferChar <> '\0;' then
        writeln(" ***** Expected bufferChar to be '\\0;' if bitPos is 0. Found '\\" <& ord(testFile.bufferChar) <& ";'");
      end if;
    end if;
  end func;


const proc: chkPutBitsLsb is func
  begin
    if  chkPutBitsLsb(           "", 0,                     2#0,  1, "\2#0;", 1) and
        chkPutBitsLsb(      "\2#0;", 1,                     2#0,  1, "\2#00;", 2) and
        chkPutBitsLsb(      "\2#1;", 1,                     2#0,  1, "\2#01;", 2) and
        chkPutBitsLsb(     "\2#01;", 2,                     2#0,  1, "\2#001;", 3) and
        chkPutBitsLsb(     "\2#10;", 2,                     2#0,  1, "\2#010;", 3) and
        chkPutBitsLsb(    "\2#010;", 3,                     2#0,  1, "\2#0010;", 4) and
        chkPutBitsLsb(    "\2#101;", 3,                     2#0,  1, "\2#0101;", 4) and
        chkPutBitsLsb(   "\2#0101;", 4,                     2#0,  1, "\2#00101;", 5) and
        chkPutBitsLsb(   "\2#1011;", 4,                     2#0,  1, "\2#01011;", 5) and
        chkPutBitsLsb(  "\2#01011;", 5,                     2#0,  1, "\2#001011;", 6) and
        chkPutBitsLsb(  "\2#10011;", 5,                     2#0,  1, "\2#010011;", 6) and
        chkPutBitsLsb( "\2#010011;", 6,                     2#0,  1, "\2#0010011;", 7) and
        chkPutBitsLsb( "\2#110101;", 6,                     2#0,  1, "\2#0110101;", 7) and
        chkPutBitsLsb("\2#0110101;", 7,                     2#0,  1, "\2#00110101;", 0) and
        chkPutBitsLsb("\2#1011001;", 7,                     2#0,  1, "\2#01011001;", 0) and
        chkPutBitsLsb(           "", 0,                     2#1,  1, "\2#1;", 1) and
        chkPutBitsLsb(      "\2#0;", 1,                     2#1,  1, "\2#10;", 2) and
        chkPutBitsLsb(      "\2#1;", 1,                     2#1,  1, "\2#11;", 2) and
        chkPutBitsLsb(     "\2#01;", 2,                     2#1,  1, "\2#101;", 3) and
        chkPutBitsLsb(     "\2#10;", 2,                     2#1,  1, "\2#110;", 3) and
        chkPutBitsLsb(    "\2#010;", 3,                     2#1,  1, "\2#1010;", 4) and
        chkPutBitsLsb(    "\2#101;", 3,                     2#1,  1, "\2#1101;", 4) and
        chkPutBitsLsb(   "\2#0101;", 4,                     2#1,  1, "\2#10101;", 5) and
        chkPutBitsLsb(   "\2#1011;", 4,                     2#1,  1, "\2#11011;", 5) and
        chkPutBitsLsb(  "\2#01011;", 5,                     2#1,  1, "\2#101011;", 6) and
        chkPutBitsLsb(  "\2#10011;", 5,                     2#1,  1, "\2#110011;", 6) and
        chkPutBitsLsb( "\2#010011;", 6,                     2#1,  1, "\2#1010011;", 7) and
        chkPutBitsLsb( "\2#110101;", 6,                     2#1,  1, "\2#1110101;", 7) and
        chkPutBitsLsb("\2#0110101;", 7,                     2#1,  1, "\2#10110101;", 0) and
        chkPutBitsLsb("\2#1011001;", 7,                     2#1,  1, "\2#11011001;", 0) and
        chkPutBitsLsb(           "", 0,                    2#01,  2, "\2#01;", 2) and
        chkPutBitsLsb(      "\2#0;", 1,                    2#01,  2, "\2#010;", 3) and
        chkPutBitsLsb(      "\2#1;", 1,                    2#01,  2, "\2#011;", 3) and
        chkPutBitsLsb(     "\2#01;", 2,                    2#01,  2, "\2#0101;", 4) and
        chkPutBitsLsb(     "\2#10;", 2,                    2#01,  2, "\2#0110;", 4) and
        chkPutBitsLsb(    "\2#010;", 3,                    2#01,  2, "\2#01010;", 5) and
        chkPutBitsLsb(    "\2#101;", 3,                    2#01,  2, "\2#01101;", 5) and
        chkPutBitsLsb(   "\2#0101;", 4,                    2#01,  2, "\2#010101;", 6) and
        chkPutBitsLsb(   "\2#1011;", 4,                    2#01,  2, "\2#011011;", 6) and
        chkPutBitsLsb(  "\2#01011;", 5,                    2#01,  2, "\2#0101011;", 7) and
        chkPutBitsLsb(  "\2#10011;", 5,                    2#01,  2, "\2#0110011;", 7) and
        chkPutBitsLsb( "\2#010011;", 6,                    2#01,  2, "\2#01010011;", 0) and
        chkPutBitsLsb( "\2#110101;", 6,                    2#01,  2, "\2#01110101;", 0) and
        chkPutBitsLsb("\2#0110101;", 7,                    2#01,  2, "\2#10110101;\2#0;", 1) and
        chkPutBitsLsb("\2#1011001;", 7,                    2#01,  2, "\2#11011001;\2#0;", 1) and
        chkPutBitsLsb(           "", 0,                    2#10,  2, "\2#10;", 2) and
        chkPutBitsLsb(      "\2#0;", 1,                    2#10,  2, "\2#100;", 3) and
        chkPutBitsLsb(      "\2#1;", 1,                    2#10,  2, "\2#101;", 3) and
        chkPutBitsLsb(     "\2#01;", 2,                    2#10,  2, "\2#1001;", 4) and
        chkPutBitsLsb(     "\2#10;", 2,                    2#10,  2, "\2#1010;", 4) and
        chkPutBitsLsb(    "\2#010;", 3,                    2#10,  2, "\2#10010;", 5) and
        chkPutBitsLsb(    "\2#101;", 3,                    2#10,  2, "\2#10101;", 5) and
        chkPutBitsLsb(   "\2#0101;", 4,                    2#10,  2, "\2#100101;", 6) and
        chkPutBitsLsb(   "\2#1011;", 4,                    2#10,  2, "\2#101011;", 6) and
        chkPutBitsLsb(  "\2#01011;", 5,                    2#10,  2, "\2#1001011;", 7) and
        chkPutBitsLsb(  "\2#10011;", 5,                    2#10,  2, "\2#1010011;", 7) and
        chkPutBitsLsb( "\2#010011;", 6,                    2#10,  2, "\2#10010011;", 0) and
        chkPutBitsLsb( "\2#110101;", 6,                    2#10,  2, "\2#10110101;", 0) and
        chkPutBitsLsb("\2#0110101;", 7,                    2#10,  2, "\2#00110101;\2#1;", 1) and
        chkPutBitsLsb("\2#1011001;", 7,                    2#10,  2, "\2#01011001;\2#1;", 1) and
        chkPutBitsLsb(           "", 0,                   2#010,  3, "\2#010;", 3) and
        chkPutBitsLsb(      "\2#0;", 1,                   2#010,  3, "\2#0100;", 4) and
        chkPutBitsLsb(      "\2#1;", 1,                   2#010,  3, "\2#0101;", 4) and
        chkPutBitsLsb(     "\2#01;", 2,                   2#010,  3, "\2#01001;", 5) and
        chkPutBitsLsb(     "\2#10;", 2,                   2#010,  3, "\2#01010;", 5) and
        chkPutBitsLsb(    "\2#010;", 3,                   2#010,  3, "\2#010010;", 6) and
        chkPutBitsLsb(    "\2#101;", 3,                   2#010,  3, "\2#010101;", 6) and
        chkPutBitsLsb(   "\2#0101;", 4,                   2#010,  3, "\2#0100101;", 7) and
        chkPutBitsLsb(   "\2#1011;", 4,                   2#010,  3, "\2#0101011;", 7) and
        chkPutBitsLsb(  "\2#01011;", 5,                   2#010,  3, "\2#01001011;", 0) and
        chkPutBitsLsb(  "\2#10011;", 5,                   2#010,  3, "\2#01010011;", 0) and
        chkPutBitsLsb( "\2#010011;", 6,                   2#010,  3, "\2#10010011;\2#0;", 1) and
        chkPutBitsLsb( "\2#110101;", 6,                   2#010,  3, "\2#10110101;\2#0;", 1) and
        chkPutBitsLsb("\2#0110101;", 7,                   2#010,  3, "\2#00110101;\2#01;", 2) and
        chkPutBitsLsb("\2#1011001;", 7,                   2#010,  3, "\2#01011001;\2#01;", 2) and
        chkPutBitsLsb(           "", 0,                   2#101,  3, "\2#101;", 3) and
        chkPutBitsLsb(      "\2#0;", 1,                   2#101,  3, "\2#1010;", 4) and
        chkPutBitsLsb(      "\2#1;", 1,                   2#101,  3, "\2#1011;", 4) and
        chkPutBitsLsb(     "\2#01;", 2,                   2#101,  3, "\2#10101;", 5) and
        chkPutBitsLsb(     "\2#10;", 2,                   2#101,  3, "\2#10110;", 5) and
        chkPutBitsLsb(    "\2#010;", 3,                   2#101,  3, "\2#101010;", 6) and
        chkPutBitsLsb(    "\2#101;", 3,                   2#101,  3, "\2#101101;", 6) and
        chkPutBitsLsb(   "\2#0101;", 4,                   2#101,  3, "\2#1010101;", 7) and
        chkPutBitsLsb(   "\2#1011;", 4,                   2#101,  3, "\2#1011011;", 7) and
        chkPutBitsLsb(  "\2#01011;", 5,                   2#101,  3, "\2#10101011;", 0) and
        chkPutBitsLsb(  "\2#10011;", 5,                   2#101,  3, "\2#10110011;", 0) and
        chkPutBitsLsb( "\2#010011;", 6,                   2#101,  3, "\2#01010011;\2#1;", 1) and
        chkPutBitsLsb( "\2#110101;", 6,                   2#101,  3, "\2#01110101;\2#1;", 1) and
        chkPutBitsLsb("\2#0110101;", 7,                   2#101,  3, "\2#10110101;\2#10;", 2) and
        chkPutBitsLsb("\2#1011001;", 7,                   2#101,  3, "\2#11011001;\2#10;", 2) and
        chkPutBitsLsb(           "", 0,                  2#0101,  4, "\2#0101;", 4) and
        chkPutBitsLsb(      "\2#0;", 1,                  2#0101,  4, "\2#01010;", 5) and
        chkPutBitsLsb(      "\2#1;", 1,                  2#0101,  4, "\2#01011;", 5) and
        chkPutBitsLsb(     "\2#01;", 2,                  2#0101,  4, "\2#010101;", 6) and
        chkPutBitsLsb(     "\2#10;", 2,                  2#0101,  4, "\2#010110;", 6) and
        chkPutBitsLsb(    "\2#010;", 3,                  2#0101,  4, "\2#0101010;", 7) and
        chkPutBitsLsb(    "\2#101;", 3,                  2#0101,  4, "\2#0101101;", 7) and
        chkPutBitsLsb(   "\2#0101;", 4,                  2#0101,  4, "\2#01010101;", 0) and
        chkPutBitsLsb(   "\2#1011;", 4,                  2#0101,  4, "\2#01011011;", 0) and
        chkPutBitsLsb(  "\2#01011;", 5,                  2#0101,  4, "\2#10101011;\2#0;", 1) and
        chkPutBitsLsb(  "\2#10011;", 5,                  2#0101,  4, "\2#10110011;\2#0;", 1) and
        chkPutBitsLsb( "\2#010011;", 6,                  2#0101,  4, "\2#01010011;\2#01;", 2) and
        chkPutBitsLsb( "\2#110101;", 6,                  2#0101,  4, "\2#01110101;\2#01;", 2) and
        chkPutBitsLsb("\2#0110101;", 7,                  2#0101,  4, "\2#10110101;\2#010;", 3) and
        chkPutBitsLsb("\2#1011001;", 7,                  2#0101,  4, "\2#11011001;\2#010;", 3) and
        chkPutBitsLsb(           "", 0,                  2#1011,  4, "\2#1011;", 4) and
        chkPutBitsLsb(      "\2#0;", 1,                  2#1011,  4, "\2#10110;", 5) and
        chkPutBitsLsb(      "\2#1;", 1,                  2#1011,  4, "\2#10111;", 5) and
        chkPutBitsLsb(     "\2#01;", 2,                  2#1011,  4, "\2#101101;", 6) and
        chkPutBitsLsb(     "\2#10;", 2,                  2#1011,  4, "\2#101110;", 6) and
        chkPutBitsLsb(    "\2#010;", 3,                  2#1011,  4, "\2#1011010;", 7) and
        chkPutBitsLsb(    "\2#101;", 3,                  2#1011,  4, "\2#1011101;", 7) and
        chkPutBitsLsb(   "\2#0101;", 4,                  2#1011,  4, "\2#10110101;", 0) and
        chkPutBitsLsb(   "\2#1011;", 4,                  2#1011,  4, "\2#10111011;", 0) and
        chkPutBitsLsb(  "\2#01011;", 5,                  2#1011,  4, "\2#01101011;\2#1;", 1) and
        chkPutBitsLsb(  "\2#10011;", 5,                  2#1011,  4, "\2#01110011;\2#1;", 1) and
        chkPutBitsLsb( "\2#010011;", 6,                  2#1011,  4, "\2#11010011;\2#10;", 2) and
        chkPutBitsLsb( "\2#110101;", 6,                  2#1011,  4, "\2#11110101;\2#10;", 2) and
        chkPutBitsLsb("\2#0110101;", 7,                  2#1011,  4, "\2#10110101;\2#101;", 3) and
        chkPutBitsLsb("\2#1011001;", 7,                  2#1011,  4, "\2#11011001;\2#101;", 3) and
        chkPutBitsLsb(           "", 0,                 2#01011,  5, "\2#01011;", 5) and
        chkPutBitsLsb(      "\2#0;", 1,                 2#01011,  5, "\2#010110;", 6) and
        chkPutBitsLsb(      "\2#1;", 1,                 2#01011,  5, "\2#010111;", 6) and
        chkPutBitsLsb(     "\2#01;", 2,                 2#01011,  5, "\2#0101101;", 7) and
        chkPutBitsLsb(     "\2#10;", 2,                 2#01011,  5, "\2#0101110;", 7) and
        chkPutBitsLsb(    "\2#010;", 3,                 2#01011,  5, "\2#01011010;", 0) and
        chkPutBitsLsb(    "\2#101;", 3,                 2#01011,  5, "\2#01011101;", 0) and
        chkPutBitsLsb(   "\2#0101;", 4,                 2#01011,  5, "\2#10110101;\2#0;", 1) and
        chkPutBitsLsb(   "\2#1011;", 4,                 2#01011,  5, "\2#10111011;\2#0;", 1) and
        chkPutBitsLsb(  "\2#01011;", 5,                 2#01011,  5, "\2#01101011;\2#01;", 2) and
        chkPutBitsLsb(  "\2#10011;", 5,                 2#01011,  5, "\2#01110011;\2#01;", 2) and
        chkPutBitsLsb( "\2#010011;", 6,                 2#01011,  5, "\2#11010011;\2#010;", 3) and
        chkPutBitsLsb( "\2#110101;", 6,                 2#01011,  5, "\2#11110101;\2#010;", 3) and
        chkPutBitsLsb("\2#0110101;", 7,                 2#01011,  5, "\2#10110101;\2#0101;", 4) and
        chkPutBitsLsb("\2#1011001;", 7,                 2#01011,  5, "\2#11011001;\2#0101;", 4) and
        chkPutBitsLsb(           "", 0,                 2#10011,  5, "\2#10011;", 5) and
        chkPutBitsLsb(      "\2#0;", 1,                 2#10011,  5, "\2#100110;", 6) and
        chkPutBitsLsb(      "\2#1;", 1,                 2#10011,  5, "\2#100111;", 6) and
        chkPutBitsLsb(     "\2#01;", 2,                 2#10011,  5, "\2#1001101;", 7) and
        chkPutBitsLsb(     "\2#10;", 2,                 2#10011,  5, "\2#1001110;", 7) and
        chkPutBitsLsb(    "\2#010;", 3,                 2#10011,  5, "\2#10011010;", 0) and
        chkPutBitsLsb(    "\2#101;", 3,                 2#10011,  5, "\2#10011101;", 0) and
        chkPutBitsLsb(   "\2#0101;", 4,                 2#10011,  5, "\2#00110101;\2#1;", 1) and
        chkPutBitsLsb(   "\2#1011;", 4,                 2#10011,  5, "\2#00111011;\2#1;", 1) and
        chkPutBitsLsb(  "\2#01011;", 5,                 2#10011,  5, "\2#01101011;\2#10;", 2) and
        chkPutBitsLsb(  "\2#10011;", 5,                 2#10011,  5, "\2#01110011;\2#10;", 2) and
        chkPutBitsLsb( "\2#010011;", 6,                 2#10011,  5, "\2#11010011;\2#100;", 3) and
        chkPutBitsLsb( "\2#110101;", 6,                 2#10011,  5, "\2#11110101;\2#100;", 3) and
        chkPutBitsLsb("\2#0110101;", 7,                 2#10011,  5, "\2#10110101;\2#1001;", 4) and
        chkPutBitsLsb("\2#1011001;", 7,                 2#10011,  5, "\2#11011001;\2#1001;", 4) and
        chkPutBitsLsb(           "", 0,                2#010011,  6, "\2#010011;", 6) and
        chkPutBitsLsb(      "\2#0;", 1,                2#010011,  6, "\2#0100110;", 7) and
        chkPutBitsLsb(      "\2#1;", 1,                2#010011,  6, "\2#0100111;", 7) and
        chkPutBitsLsb(     "\2#01;", 2,                2#010011,  6, "\2#01001101;", 0) and
        chkPutBitsLsb(     "\2#10;", 2,                2#010011,  6, "\2#01001110;", 0) and
        chkPutBitsLsb(    "\2#010;", 3,                2#010011,  6, "\2#10011010;\2#0;", 1) and
        chkPutBitsLsb(    "\2#101;", 3,                2#010011,  6, "\2#10011101;\2#0;", 1) and
        chkPutBitsLsb(   "\2#0101;", 4,                2#010011,  6, "\2#00110101;\2#01;", 2) and
        chkPutBitsLsb(   "\2#1011;", 4,                2#010011,  6, "\2#00111011;\2#01;", 2) and
        chkPutBitsLsb(  "\2#01011;", 5,                2#010011,  6, "\2#01101011;\2#010;", 3) and
        chkPutBitsLsb(  "\2#10011;", 5,                2#010011,  6, "\2#01110011;\2#010;", 3) and
        chkPutBitsLsb( "\2#010011;", 6,                2#010011,  6, "\2#11010011;\2#0100;", 4) and
        chkPutBitsLsb( "\2#110101;", 6,                2#010011,  6, "\2#11110101;\2#0100;", 4) and
        chkPutBitsLsb("\2#0110101;", 7,                2#010011,  6, "\2#10110101;\2#01001;", 5) and
        chkPutBitsLsb("\2#1011001;", 7,                2#010011,  6, "\2#11011001;\2#01001;", 5) and
        chkPutBitsLsb(           "", 0,                2#110101,  6, "\2#110101;", 6) and
        chkPutBitsLsb(      "\2#0;", 1,                2#110101,  6, "\2#1101010;", 7) and
        chkPutBitsLsb(      "\2#1;", 1,                2#110101,  6, "\2#1101011;", 7) and
        chkPutBitsLsb(     "\2#01;", 2,                2#110101,  6, "\2#11010101;", 0) and
        chkPutBitsLsb(     "\2#10;", 2,                2#110101,  6, "\2#11010110;", 0) and
        chkPutBitsLsb(    "\2#010;", 3,                2#110101,  6, "\2#10101010;\2#1;", 1) and
        chkPutBitsLsb(    "\2#101;", 3,                2#110101,  6, "\2#10101101;\2#1;", 1) and
        chkPutBitsLsb(   "\2#0101;", 4,                2#110101,  6, "\2#01010101;\2#11;", 2) and
        chkPutBitsLsb(   "\2#1011;", 4,                2#110101,  6, "\2#01011011;\2#11;", 2) and
        chkPutBitsLsb(  "\2#01011;", 5,                2#110101,  6, "\2#10101011;\2#110;", 3) and
        chkPutBitsLsb(  "\2#10011;", 5,                2#110101,  6, "\2#10110011;\2#110;", 3) and
        chkPutBitsLsb( "\2#010011;", 6,                2#110101,  6, "\2#01010011;\2#1101;", 4) and
        chkPutBitsLsb( "\2#110101;", 6,                2#110101,  6, "\2#01110101;\2#1101;", 4) and
        chkPutBitsLsb("\2#0110101;", 7,                2#110101,  6, "\2#10110101;\2#11010;", 5) and
        chkPutBitsLsb("\2#1011001;", 7,                2#110101,  6, "\2#11011001;\2#11010;", 5) and
        chkPutBitsLsb(           "", 0,               2#0110101,  7, "\2#0110101;", 7) and
        chkPutBitsLsb(      "\2#0;", 1,               2#0110101,  7, "\2#01101010;", 0) and
        chkPutBitsLsb(      "\2#1;", 1,               2#0110101,  7, "\2#01101011;", 0) and
        chkPutBitsLsb(     "\2#01;", 2,               2#0110101,  7, "\2#11010101;\2#0;", 1) and
        chkPutBitsLsb(     "\2#10;", 2,               2#0110101,  7, "\2#11010110;\2#0;", 1) and
        chkPutBitsLsb(    "\2#010;", 3,               2#0110101,  7, "\2#10101010;\2#01;", 2) and
        chkPutBitsLsb(    "\2#101;", 3,               2#0110101,  7, "\2#10101101;\2#01;", 2) and
        chkPutBitsLsb(   "\2#0101;", 4,               2#0110101,  7, "\2#01010101;\2#011;", 3) and
        chkPutBitsLsb(   "\2#1011;", 4,               2#0110101,  7, "\2#01011011;\2#011;", 3) and
        chkPutBitsLsb(  "\2#01011;", 5,               2#0110101,  7, "\2#10101011;\2#0110;", 4) and
        chkPutBitsLsb(  "\2#10011;", 5,               2#0110101,  7, "\2#10110011;\2#0110;", 4) and
        chkPutBitsLsb( "\2#010011;", 6,               2#0110101,  7, "\2#01010011;\2#01101;", 5) and
        chkPutBitsLsb( "\2#110101;", 6,               2#0110101,  7, "\2#01110101;\2#01101;", 5) and
        chkPutBitsLsb("\2#0110101;", 7,               2#0110101,  7, "\2#10110101;\2#011010;", 6) and
        chkPutBitsLsb("\2#1011001;", 7,               2#0110101,  7, "\2#11011001;\2#011010;", 6) and
        chkPutBitsLsb(           "", 0,               2#1011001,  7, "\2#1011001;", 7) and
        chkPutBitsLsb(      "\2#0;", 1,               2#1011001,  7, "\2#10110010;", 0) and
        chkPutBitsLsb(      "\2#1;", 1,               2#1011001,  7, "\2#10110011;", 0) and
        chkPutBitsLsb(     "\2#01;", 2,               2#1011001,  7, "\2#01100101;\2#1;", 1) and
        chkPutBitsLsb(     "\2#10;", 2,               2#1011001,  7, "\2#01100110;\2#1;", 1) and
        chkPutBitsLsb(    "\2#010;", 3,               2#1011001,  7, "\2#11001010;\2#10;", 2) and
        chkPutBitsLsb(    "\2#101;", 3,               2#1011001,  7, "\2#11001101;\2#10;", 2) and
        chkPutBitsLsb(   "\2#0101;", 4,               2#1011001,  7, "\2#10010101;\2#101;", 3) and
        chkPutBitsLsb(   "\2#1011;", 4,               2#1011001,  7, "\2#10011011;\2#101;", 3) and
        chkPutBitsLsb(  "\2#01011;", 5,               2#1011001,  7, "\2#00101011;\2#1011;", 4) and
        chkPutBitsLsb(  "\2#10011;", 5,               2#1011001,  7, "\2#00110011;\2#1011;", 4) and
        chkPutBitsLsb( "\2#010011;", 6,               2#1011001,  7, "\2#01010011;\2#10110;", 5) and
        chkPutBitsLsb( "\2#110101;", 6,               2#1011001,  7, "\2#01110101;\2#10110;", 5) and
        chkPutBitsLsb("\2#0110101;", 7,               2#1011001,  7, "\2#10110101;\2#101100;", 6) and
        chkPutBitsLsb("\2#1011001;", 7,               2#1011001,  7, "\2#11011001;\2#101100;", 6) and
        chkPutBitsLsb(           "", 0,              2#01011001,  8, "\2#01011001;", 0) and
        chkPutBitsLsb(      "\2#0;", 1,              2#01011001,  8, "\2#10110010;\2#0;", 1) and
        chkPutBitsLsb(      "\2#1;", 1,              2#01011001,  8, "\2#10110011;\2#0;", 1) and
        chkPutBitsLsb(     "\2#01;", 2,              2#01011001,  8, "\2#01100101;\2#01;", 2) and
        chkPutBitsLsb(     "\2#10;", 2,              2#01011001,  8, "\2#01100110;\2#01;", 2) and
        chkPutBitsLsb(    "\2#010;", 3,              2#01011001,  8, "\2#11001010;\2#010;", 3) and
        chkPutBitsLsb(    "\2#101;", 3,              2#01011001,  8, "\2#11001101;\2#010;", 3) and
        chkPutBitsLsb(   "\2#0101;", 4,              2#01011001,  8, "\2#10010101;\2#0101;", 4) and
        chkPutBitsLsb(   "\2#1011;", 4,              2#01011001,  8, "\2#10011011;\2#0101;", 4) and
        chkPutBitsLsb(  "\2#01011;", 5,              2#01011001,  8, "\2#00101011;\2#01011;", 5) and
        chkPutBitsLsb(  "\2#10011;", 5,              2#01011001,  8, "\2#00110011;\2#01011;", 5) and
        chkPutBitsLsb( "\2#010011;", 6,              2#01011001,  8, "\2#01010011;\2#010110;", 6) and
        chkPutBitsLsb( "\2#110101;", 6,              2#01011001,  8, "\2#01110101;\2#010110;", 6) and
        chkPutBitsLsb("\2#0110101;", 7,              2#01011001,  8, "\2#10110101;\2#0101100;", 7) and
        chkPutBitsLsb("\2#1011001;", 7,              2#01011001,  8, "\2#11011001;\2#0101100;", 7) and
        chkPutBitsLsb(           "", 0,              2#10100011,  8, "\2#10100011;", 0) and
        chkPutBitsLsb(      "\2#0;", 1,              2#10100011,  8, "\2#01000110;\2#1;", 1) and
        chkPutBitsLsb(      "\2#1;", 1,              2#10100011,  8, "\2#01000111;\2#1;", 1) and
        chkPutBitsLsb(     "\2#01;", 2,              2#10100011,  8, "\2#10001101;\2#10;", 2) and
        chkPutBitsLsb(     "\2#10;", 2,              2#10100011,  8, "\2#10001110;\2#10;", 2) and
        chkPutBitsLsb(    "\2#010;", 3,              2#10100011,  8, "\2#00011010;\2#101;", 3) and
        chkPutBitsLsb(    "\2#101;", 3,              2#10100011,  8, "\2#00011101;\2#101;", 3) and
        chkPutBitsLsb(   "\2#0101;", 4,              2#10100011,  8, "\2#00110101;\2#1010;", 4) and
        chkPutBitsLsb(   "\2#1011;", 4,              2#10100011,  8, "\2#00111011;\2#1010;", 4) and
        chkPutBitsLsb(  "\2#01011;", 5,              2#10100011,  8, "\2#01101011;\2#10100;", 5) and
        chkPutBitsLsb(  "\2#10011;", 5,              2#10100011,  8, "\2#01110011;\2#10100;", 5) and
        chkPutBitsLsb( "\2#010011;", 6,              2#10100011,  8, "\2#11010011;\2#101000;", 6) and
        chkPutBitsLsb( "\2#110101;", 6,              2#10100011,  8, "\2#11110101;\2#101000;", 6) and
        chkPutBitsLsb("\2#0110101;", 7,              2#10100011,  8, "\2#10110101;\2#1010001;", 7) and
        chkPutBitsLsb("\2#1011001;", 7,              2#10100011,  8, "\2#11011001;\2#1010001;", 7) and
        chkPutBitsLsb(           "", 0,             2#010100011,  9, "\2#10100011;\2#0;", 1) and
        chkPutBitsLsb(      "\2#0;", 1,             2#010100011,  9, "\2#01000110;\2#01;", 2) and
        chkPutBitsLsb(      "\2#1;", 1,             2#010100011,  9, "\2#01000111;\2#01;", 2) and
        chkPutBitsLsb(     "\2#01;", 2,             2#010100011,  9, "\2#10001101;\2#010;", 3) and
        chkPutBitsLsb(     "\2#10;", 2,             2#010100011,  9, "\2#10001110;\2#010;", 3) and
        chkPutBitsLsb(    "\2#010;", 3,             2#010100011,  9, "\2#00011010;\2#0101;", 4) and
        chkPutBitsLsb(    "\2#101;", 3,             2#010100011,  9, "\2#00011101;\2#0101;", 4) and
        chkPutBitsLsb(   "\2#0101;", 4,             2#010100011,  9, "\2#00110101;\2#01010;", 5) and
        chkPutBitsLsb(   "\2#1011;", 4,             2#010100011,  9, "\2#00111011;\2#01010;", 5) and
        chkPutBitsLsb(  "\2#01011;", 5,             2#010100011,  9, "\2#01101011;\2#010100;", 6) and
        chkPutBitsLsb(  "\2#10011;", 5,             2#010100011,  9, "\2#01110011;\2#010100;", 6) and
        chkPutBitsLsb( "\2#010011;", 6,             2#010100011,  9, "\2#11010011;\2#0101000;", 7) and
        chkPutBitsLsb( "\2#110101;", 6,             2#010100011,  9, "\2#11110101;\2#0101000;", 7) and
        chkPutBitsLsb("\2#0110101;", 7,             2#010100011,  9, "\2#10110101;\2#01010001;", 0) and
        chkPutBitsLsb("\2#1011001;", 7,             2#010100011,  9, "\2#11011001;\2#01010001;", 0) and
        chkPutBitsLsb(           "", 0,             2#110110111,  9, "\2#10110111;\2#1;", 1) and
        chkPutBitsLsb(      "\2#0;", 1,             2#110110111,  9, "\2#01101110;\2#11;", 2) and
        chkPutBitsLsb(      "\2#1;", 1,             2#110110111,  9, "\2#01101111;\2#11;", 2) and
        chkPutBitsLsb(     "\2#01;", 2,             2#110110111,  9, "\2#11011101;\2#110;", 3) and
        chkPutBitsLsb(     "\2#10;", 2,             2#110110111,  9, "\2#11011110;\2#110;", 3) and
        chkPutBitsLsb(    "\2#010;", 3,             2#110110111,  9, "\2#10111010;\2#1101;", 4) and
        chkPutBitsLsb(    "\2#101;", 3,             2#110110111,  9, "\2#10111101;\2#1101;", 4) and
        chkPutBitsLsb(   "\2#0101;", 4,             2#110110111,  9, "\2#01110101;\2#11011;", 5) and
        chkPutBitsLsb(   "\2#1011;", 4,             2#110110111,  9, "\2#01111011;\2#11011;", 5) and
        chkPutBitsLsb(  "\2#01011;", 5,             2#110110111,  9, "\2#11101011;\2#110110;", 6) and
        chkPutBitsLsb(  "\2#10011;", 5,             2#110110111,  9, "\2#11110011;\2#110110;", 6) and
        chkPutBitsLsb( "\2#010011;", 6,             2#110110111,  9, "\2#11010011;\2#1101101;", 7) and
        chkPutBitsLsb( "\2#110101;", 6,             2#110110111,  9, "\2#11110101;\2#1101101;", 7) and
        chkPutBitsLsb("\2#0110101;", 7,             2#110110111,  9, "\2#10110101;\2#11011011;", 0) and
        chkPutBitsLsb("\2#1011001;", 7,             2#110110111,  9, "\2#11011001;\2#11011011;", 0) and
        chkPutBitsLsb(           "", 0,            2#0110110111, 10, "\2#10110111;\2#01;", 2) and
        chkPutBitsLsb(      "\2#0;", 1,            2#0110110111, 10, "\2#01101110;\2#011;", 3) and
        chkPutBitsLsb(      "\2#1;", 1,            2#0110110111, 10, "\2#01101111;\2#011;", 3) and
        chkPutBitsLsb(     "\2#01;", 2,            2#0110110111, 10, "\2#11011101;\2#0110;", 4) and
        chkPutBitsLsb(     "\2#10;", 2,            2#0110110111, 10, "\2#11011110;\2#0110;", 4) and
        chkPutBitsLsb(    "\2#010;", 3,            2#0110110111, 10, "\2#10111010;\2#01101;", 5) and
        chkPutBitsLsb(    "\2#101;", 3,            2#0110110111, 10, "\2#10111101;\2#01101;", 5) and
        chkPutBitsLsb(   "\2#0101;", 4,            2#0110110111, 10, "\2#01110101;\2#011011;", 6) and
        chkPutBitsLsb(   "\2#1011;", 4,            2#0110110111, 10, "\2#01111011;\2#011011;", 6) and
        chkPutBitsLsb(  "\2#01011;", 5,            2#0110110111, 10, "\2#11101011;\2#0110110;", 7) and
        chkPutBitsLsb(  "\2#10011;", 5,            2#0110110111, 10, "\2#11110011;\2#0110110;", 7) and
        chkPutBitsLsb( "\2#010011;", 6,            2#0110110111, 10, "\2#11010011;\2#01101101;", 0) and
        chkPutBitsLsb( "\2#110101;", 6,            2#0110110111, 10, "\2#11110101;\2#01101101;", 0) and
        chkPutBitsLsb("\2#0110101;", 7,            2#0110110111, 10, "\2#10110101;\2#11011011;\2#0;", 1) and
        chkPutBitsLsb("\2#1011001;", 7,            2#0110110111, 10, "\2#11011001;\2#11011011;\2#0;", 1) and
        chkPutBitsLsb(           "", 0,            2#1100010011, 10, "\2#00010011;\2#11;", 2) and
        chkPutBitsLsb(      "\2#0;", 1,            2#1100010011, 10, "\2#00100110;\2#110;", 3) and
        chkPutBitsLsb(      "\2#1;", 1,            2#1100010011, 10, "\2#00100111;\2#110;", 3) and
        chkPutBitsLsb(     "\2#01;", 2,            2#1100010011, 10, "\2#01001101;\2#1100;", 4) and
        chkPutBitsLsb(     "\2#10;", 2,            2#1100010011, 10, "\2#01001110;\2#1100;", 4) and
        chkPutBitsLsb(    "\2#010;", 3,            2#1100010011, 10, "\2#10011010;\2#11000;", 5) and
        chkPutBitsLsb(    "\2#101;", 3,            2#1100010011, 10, "\2#10011101;\2#11000;", 5) and
        chkPutBitsLsb(   "\2#0101;", 4,            2#1100010011, 10, "\2#00110101;\2#110001;", 6) and
        chkPutBitsLsb(   "\2#1011;", 4,            2#1100010011, 10, "\2#00111011;\2#110001;", 6) and
        chkPutBitsLsb(  "\2#01011;", 5,            2#1100010011, 10, "\2#01101011;\2#1100010;", 7) and
        chkPutBitsLsb(  "\2#10011;", 5,            2#1100010011, 10, "\2#01110011;\2#1100010;", 7) and
        chkPutBitsLsb( "\2#010011;", 6,            2#1100010011, 10, "\2#11010011;\2#11000100;", 0) and
        chkPutBitsLsb( "\2#110101;", 6,            2#1100010011, 10, "\2#11110101;\2#11000100;", 0) and
        chkPutBitsLsb("\2#0110101;", 7,            2#1100010011, 10, "\2#10110101;\2#10001001;\2#1;", 1) and
        chkPutBitsLsb("\2#1011001;", 7,            2#1100010011, 10, "\2#11011001;\2#10001001;\2#1;", 1) and
        chkPutBitsLsb(           "", 0,           2#01100010011, 11, "\2#00010011;\2#011;", 3) and
        chkPutBitsLsb(      "\2#0;", 1,           2#01100010011, 11, "\2#00100110;\2#0110;", 4) and
        chkPutBitsLsb(      "\2#1;", 1,           2#01100010011, 11, "\2#00100111;\2#0110;", 4) and
        chkPutBitsLsb(     "\2#01;", 2,           2#01100010011, 11, "\2#01001101;\2#01100;", 5) and
        chkPutBitsLsb(     "\2#10;", 2,           2#01100010011, 11, "\2#01001110;\2#01100;", 5) and
        chkPutBitsLsb(    "\2#010;", 3,           2#01100010011, 11, "\2#10011010;\2#011000;", 6) and
        chkPutBitsLsb(    "\2#101;", 3,           2#01100010011, 11, "\2#10011101;\2#011000;", 6) and
        chkPutBitsLsb(   "\2#0101;", 4,           2#01100010011, 11, "\2#00110101;\2#0110001;", 7) and
        chkPutBitsLsb(   "\2#1011;", 4,           2#01100010011, 11, "\2#00111011;\2#0110001;", 7) and
        chkPutBitsLsb(  "\2#01011;", 5,           2#01100010011, 11, "\2#01101011;\2#01100010;", 0) and
        chkPutBitsLsb(  "\2#10011;", 5,           2#01100010011, 11, "\2#01110011;\2#01100010;", 0) and
        chkPutBitsLsb( "\2#010011;", 6,           2#01100010011, 11, "\2#11010011;\2#11000100;\2#0;", 1) and
        chkPutBitsLsb( "\2#110101;", 6,           2#01100010011, 11, "\2#11110101;\2#11000100;\2#0;", 1) and
        chkPutBitsLsb("\2#0110101;", 7,           2#01100010011, 11, "\2#10110101;\2#10001001;\2#01;", 2) and
        chkPutBitsLsb("\2#1011001;", 7,           2#01100010011, 11, "\2#11011001;\2#10001001;\2#01;", 2) and
        chkPutBitsLsb(           "", 0,           2#10110100111, 11, "\2#10100111;\2#101;", 3) and
        chkPutBitsLsb(      "\2#0;", 1,           2#10110100111, 11, "\2#01001110;\2#1011;", 4) and
        chkPutBitsLsb(      "\2#1;", 1,           2#10110100111, 11, "\2#01001111;\2#1011;", 4) and
        chkPutBitsLsb(     "\2#01;", 2,           2#10110100111, 11, "\2#10011101;\2#10110;", 5) and
        chkPutBitsLsb(     "\2#10;", 2,           2#10110100111, 11, "\2#10011110;\2#10110;", 5) and
        chkPutBitsLsb(    "\2#010;", 3,           2#10110100111, 11, "\2#00111010;\2#101101;", 6) and
        chkPutBitsLsb(    "\2#101;", 3,           2#10110100111, 11, "\2#00111101;\2#101101;", 6) and
        chkPutBitsLsb(   "\2#0101;", 4,           2#10110100111, 11, "\2#01110101;\2#1011010;", 7) and
        chkPutBitsLsb(   "\2#1011;", 4,           2#10110100111, 11, "\2#01111011;\2#1011010;", 7) and
        chkPutBitsLsb(  "\2#01011;", 5,           2#10110100111, 11, "\2#11101011;\2#10110100;", 0) and
        chkPutBitsLsb(  "\2#10011;", 5,           2#10110100111, 11, "\2#11110011;\2#10110100;", 0) and
        chkPutBitsLsb( "\2#010011;", 6,           2#10110100111, 11, "\2#11010011;\2#01101001;\2#1;", 1) and
        chkPutBitsLsb( "\2#110101;", 6,           2#10110100111, 11, "\2#11110101;\2#01101001;\2#1;", 1) and
        chkPutBitsLsb("\2#0110101;", 7,           2#10110100111, 11, "\2#10110101;\2#11010011;\2#10;", 2) and
        chkPutBitsLsb("\2#1011001;", 7,           2#10110100111, 11, "\2#11011001;\2#11010011;\2#10;", 2) and
        chkPutBitsLsb(           "", 0,          2#010110100111, 12, "\2#10100111;\2#0101;", 4) and
        chkPutBitsLsb(      "\2#0;", 1,          2#010110100111, 12, "\2#01001110;\2#01011;", 5) and
        chkPutBitsLsb(      "\2#1;", 1,          2#010110100111, 12, "\2#01001111;\2#01011;", 5) and
        chkPutBitsLsb(     "\2#01;", 2,          2#010110100111, 12, "\2#10011101;\2#010110;", 6) and
        chkPutBitsLsb(     "\2#10;", 2,          2#010110100111, 12, "\2#10011110;\2#010110;", 6) and
        chkPutBitsLsb(    "\2#010;", 3,          2#010110100111, 12, "\2#00111010;\2#0101101;", 7) and
        chkPutBitsLsb(    "\2#101;", 3,          2#010110100111, 12, "\2#00111101;\2#0101101;", 7) and
        chkPutBitsLsb(   "\2#0101;", 4,          2#010110100111, 12, "\2#01110101;\2#01011010;", 0) and
        chkPutBitsLsb(   "\2#1011;", 4,          2#010110100111, 12, "\2#01111011;\2#01011010;", 0) and
        chkPutBitsLsb(  "\2#01011;", 5,          2#010110100111, 12, "\2#11101011;\2#10110100;\2#0;", 1) and
        chkPutBitsLsb(  "\2#10011;", 5,          2#010110100111, 12, "\2#11110011;\2#10110100;\2#0;", 1) and
        chkPutBitsLsb( "\2#010011;", 6,          2#010110100111, 12, "\2#11010011;\2#01101001;\2#01;", 2) and
        chkPutBitsLsb( "\2#110101;", 6,          2#010110100111, 12, "\2#11110101;\2#01101001;\2#01;", 2) and
        chkPutBitsLsb("\2#0110101;", 7,          2#010110100111, 12, "\2#10110101;\2#11010011;\2#010;", 3) and
        chkPutBitsLsb("\2#1011001;", 7,          2#010110100111, 12, "\2#11011001;\2#11010011;\2#010;", 3) and
        chkPutBitsLsb(           "", 0,          2#101110001101, 12, "\2#10001101;\2#1011;", 4) and
        chkPutBitsLsb(      "\2#0;", 1,          2#101110001101, 12, "\2#00011010;\2#10111;", 5) and
        chkPutBitsLsb(      "\2#1;", 1,          2#101110001101, 12, "\2#00011011;\2#10111;", 5) and
        chkPutBitsLsb(     "\2#01;", 2,          2#101110001101, 12, "\2#00110101;\2#101110;", 6) and
        chkPutBitsLsb(     "\2#10;", 2,          2#101110001101, 12, "\2#00110110;\2#101110;", 6) and
        chkPutBitsLsb(    "\2#010;", 3,          2#101110001101, 12, "\2#01101010;\2#1011100;", 7) and
        chkPutBitsLsb(    "\2#101;", 3,          2#101110001101, 12, "\2#01101101;\2#1011100;", 7) and
        chkPutBitsLsb(   "\2#0101;", 4,          2#101110001101, 12, "\2#11010101;\2#10111000;", 0) and
        chkPutBitsLsb(   "\2#1011;", 4,          2#101110001101, 12, "\2#11011011;\2#10111000;", 0) and
        chkPutBitsLsb(  "\2#01011;", 5,          2#101110001101, 12, "\2#10101011;\2#01110001;\2#1;", 1) and
        chkPutBitsLsb(  "\2#10011;", 5,          2#101110001101, 12, "\2#10110011;\2#01110001;\2#1;", 1) and
        chkPutBitsLsb( "\2#010011;", 6,          2#101110001101, 12, "\2#01010011;\2#11100011;\2#10;", 2) and
        chkPutBitsLsb( "\2#110101;", 6,          2#101110001101, 12, "\2#01110101;\2#11100011;\2#10;", 2) and
        chkPutBitsLsb("\2#0110101;", 7,          2#101110001101, 12, "\2#10110101;\2#11000110;\2#101;", 3) and
        chkPutBitsLsb("\2#1011001;", 7,          2#101110001101, 12, "\2#11011001;\2#11000110;\2#101;", 3) and
        chkPutBitsLsb(           "", 0,         2#0101110001101, 13, "\2#10001101;\2#01011;", 5) and
        chkPutBitsLsb(      "\2#0;", 1,         2#0101110001101, 13, "\2#00011010;\2#010111;", 6) and
        chkPutBitsLsb(      "\2#1;", 1,         2#0101110001101, 13, "\2#00011011;\2#010111;", 6) and
        chkPutBitsLsb(     "\2#01;", 2,         2#0101110001101, 13, "\2#00110101;\2#0101110;", 7) and
        chkPutBitsLsb(     "\2#10;", 2,         2#0101110001101, 13, "\2#00110110;\2#0101110;", 7) and
        chkPutBitsLsb(    "\2#010;", 3,         2#0101110001101, 13, "\2#01101010;\2#01011100;", 0) and
        chkPutBitsLsb(    "\2#101;", 3,         2#0101110001101, 13, "\2#01101101;\2#01011100;", 0) and
        chkPutBitsLsb(   "\2#0101;", 4,         2#0101110001101, 13, "\2#11010101;\2#10111000;\2#0;", 1) and
        chkPutBitsLsb(   "\2#1011;", 4,         2#0101110001101, 13, "\2#11011011;\2#10111000;\2#0;", 1) and
        chkPutBitsLsb(  "\2#01011;", 5,         2#0101110001101, 13, "\2#10101011;\2#01110001;\2#01;", 2) and
        chkPutBitsLsb(  "\2#10011;", 5,         2#0101110001101, 13, "\2#10110011;\2#01110001;\2#01;", 2) and
        chkPutBitsLsb( "\2#010011;", 6,         2#0101110001101, 13, "\2#01010011;\2#11100011;\2#010;", 3) and
        chkPutBitsLsb( "\2#110101;", 6,         2#0101110001101, 13, "\2#01110101;\2#11100011;\2#010;", 3) and
        chkPutBitsLsb("\2#0110101;", 7,         2#0101110001101, 13, "\2#10110101;\2#11000110;\2#0101;", 4) and
        chkPutBitsLsb("\2#1011001;", 7,         2#0101110001101, 13, "\2#11011001;\2#11000110;\2#0101;", 4) and
        chkPutBitsLsb(           "", 0,         2#1101100110111, 13, "\2#00110111;\2#11011;", 5) and
        chkPutBitsLsb(      "\2#0;", 1,         2#1101100110111, 13, "\2#01101110;\2#110110;", 6) and
        chkPutBitsLsb(      "\2#1;", 1,         2#1101100110111, 13, "\2#01101111;\2#110110;", 6) and
        chkPutBitsLsb(     "\2#01;", 2,         2#1101100110111, 13, "\2#11011101;\2#1101100;", 7) and
        chkPutBitsLsb(     "\2#10;", 2,         2#1101100110111, 13, "\2#11011110;\2#1101100;", 7) and
        chkPutBitsLsb(    "\2#010;", 3,         2#1101100110111, 13, "\2#10111010;\2#11011001;", 0) and
        chkPutBitsLsb(    "\2#101;", 3,         2#1101100110111, 13, "\2#10111101;\2#11011001;", 0) and
        chkPutBitsLsb(   "\2#0101;", 4,         2#1101100110111, 13, "\2#01110101;\2#10110011;\2#1;", 1) and
        chkPutBitsLsb(   "\2#1011;", 4,         2#1101100110111, 13, "\2#01111011;\2#10110011;\2#1;", 1) and
        chkPutBitsLsb(  "\2#01011;", 5,         2#1101100110111, 13, "\2#11101011;\2#01100110;\2#11;", 2) and
        chkPutBitsLsb(  "\2#10011;", 5,         2#1101100110111, 13, "\2#11110011;\2#01100110;\2#11;", 2) and
        chkPutBitsLsb( "\2#010011;", 6,         2#1101100110111, 13, "\2#11010011;\2#11001101;\2#110;", 3) and
        chkPutBitsLsb( "\2#110101;", 6,         2#1101100110111, 13, "\2#11110101;\2#11001101;\2#110;", 3) and
        chkPutBitsLsb("\2#0110101;", 7,         2#1101100110111, 13, "\2#10110101;\2#10011011;\2#1101;", 4) and
        chkPutBitsLsb("\2#1011001;", 7,         2#1101100110111, 13, "\2#11011001;\2#10011011;\2#1101;", 4) and
        chkPutBitsLsb(           "", 0,        2#01101100110111, 14, "\2#00110111;\2#011011;", 6) and
        chkPutBitsLsb(      "\2#0;", 1,        2#01101100110111, 14, "\2#01101110;\2#0110110;", 7) and
        chkPutBitsLsb(      "\2#1;", 1,        2#01101100110111, 14, "\2#01101111;\2#0110110;", 7) and
        chkPutBitsLsb(     "\2#01;", 2,        2#01101100110111, 14, "\2#11011101;\2#01101100;", 0) and
        chkPutBitsLsb(     "\2#10;", 2,        2#01101100110111, 14, "\2#11011110;\2#01101100;", 0) and
        chkPutBitsLsb(    "\2#010;", 3,        2#01101100110111, 14, "\2#10111010;\2#11011001;\2#0;", 1) and
        chkPutBitsLsb(    "\2#101;", 3,        2#01101100110111, 14, "\2#10111101;\2#11011001;\2#0;", 1) and
        chkPutBitsLsb(   "\2#0101;", 4,        2#01101100110111, 14, "\2#01110101;\2#10110011;\2#01;", 2) and
        chkPutBitsLsb(   "\2#1011;", 4,        2#01101100110111, 14, "\2#01111011;\2#10110011;\2#01;", 2) and
        chkPutBitsLsb(  "\2#01011;", 5,        2#01101100110111, 14, "\2#11101011;\2#01100110;\2#011;", 3) and
        chkPutBitsLsb(  "\2#10011;", 5,        2#01101100110111, 14, "\2#11110011;\2#01100110;\2#011;", 3) and
        chkPutBitsLsb( "\2#010011;", 6,        2#01101100110111, 14, "\2#11010011;\2#11001101;\2#0110;", 4) and
        chkPutBitsLsb( "\2#110101;", 6,        2#01101100110111, 14, "\2#11110101;\2#11001101;\2#0110;", 4) and
        chkPutBitsLsb("\2#0110101;", 7,        2#01101100110111, 14, "\2#10110101;\2#10011011;\2#01101;", 5) and
        chkPutBitsLsb("\2#1011001;", 7,        2#01101100110111, 14, "\2#11011001;\2#10011011;\2#01101;", 5) and
        chkPutBitsLsb(           "", 0,        2#10011011010101, 14, "\2#11010101;\2#100110;", 6) and
        chkPutBitsLsb(      "\2#0;", 1,        2#10011011010101, 14, "\2#10101010;\2#1001101;", 7) and
        chkPutBitsLsb(      "\2#1;", 1,        2#10011011010101, 14, "\2#10101011;\2#1001101;", 7) and
        chkPutBitsLsb(     "\2#01;", 2,        2#10011011010101, 14, "\2#01010101;\2#10011011;", 0) and
        chkPutBitsLsb(     "\2#10;", 2,        2#10011011010101, 14, "\2#01010110;\2#10011011;", 0) and
        chkPutBitsLsb(    "\2#010;", 3,        2#10011011010101, 14, "\2#10101010;\2#00110110;\2#1;", 1) and
        chkPutBitsLsb(    "\2#101;", 3,        2#10011011010101, 14, "\2#10101101;\2#00110110;\2#1;", 1) and
        chkPutBitsLsb(   "\2#0101;", 4,        2#10011011010101, 14, "\2#01010101;\2#01101101;\2#10;", 2) and
        chkPutBitsLsb(   "\2#1011;", 4,        2#10011011010101, 14, "\2#01011011;\2#01101101;\2#10;", 2) and
        chkPutBitsLsb(  "\2#01011;", 5,        2#10011011010101, 14, "\2#10101011;\2#11011010;\2#100;", 3) and
        chkPutBitsLsb(  "\2#10011;", 5,        2#10011011010101, 14, "\2#10110011;\2#11011010;\2#100;", 3) and
        chkPutBitsLsb( "\2#010011;", 6,        2#10011011010101, 14, "\2#01010011;\2#10110101;\2#1001;", 4) and
        chkPutBitsLsb( "\2#110101;", 6,        2#10011011010101, 14, "\2#01110101;\2#10110101;\2#1001;", 4) and
        chkPutBitsLsb("\2#0110101;", 7,        2#10011011010101, 14, "\2#10110101;\2#01101010;\2#10011;", 5) and
        chkPutBitsLsb("\2#1011001;", 7,        2#10011011010101, 14, "\2#11011001;\2#01101010;\2#10011;", 5) and
        chkPutBitsLsb(           "", 0,       2#010011011010101, 15, "\2#11010101;\2#0100110;", 7) and
        chkPutBitsLsb(      "\2#0;", 1,       2#010011011010101, 15, "\2#10101010;\2#01001101;", 0) and
        chkPutBitsLsb(      "\2#1;", 1,       2#010011011010101, 15, "\2#10101011;\2#01001101;", 0) and
        chkPutBitsLsb(     "\2#01;", 2,       2#010011011010101, 15, "\2#01010101;\2#10011011;\2#0;", 1) and
        chkPutBitsLsb(     "\2#10;", 2,       2#010011011010101, 15, "\2#01010110;\2#10011011;\2#0;", 1) and
        chkPutBitsLsb(    "\2#010;", 3,       2#010011011010101, 15, "\2#10101010;\2#00110110;\2#01;", 2) and
        chkPutBitsLsb(    "\2#101;", 3,       2#010011011010101, 15, "\2#10101101;\2#00110110;\2#01;", 2) and
        chkPutBitsLsb(   "\2#0101;", 4,       2#010011011010101, 15, "\2#01010101;\2#01101101;\2#010;", 3) and
        chkPutBitsLsb(   "\2#1011;", 4,       2#010011011010101, 15, "\2#01011011;\2#01101101;\2#010;", 3) and
        chkPutBitsLsb(  "\2#01011;", 5,       2#010011011010101, 15, "\2#10101011;\2#11011010;\2#0100;", 4) and
        chkPutBitsLsb(  "\2#10011;", 5,       2#010011011010101, 15, "\2#10110011;\2#11011010;\2#0100;", 4) and
        chkPutBitsLsb( "\2#010011;", 6,       2#010011011010101, 15, "\2#01010011;\2#10110101;\2#01001;", 5) and
        chkPutBitsLsb( "\2#110101;", 6,       2#010011011010101, 15, "\2#01110101;\2#10110101;\2#01001;", 5) and
        chkPutBitsLsb("\2#0110101;", 7,       2#010011011010101, 15, "\2#10110101;\2#01101010;\2#010011;", 6) and
        chkPutBitsLsb("\2#1011001;", 7,       2#010011011010101, 15, "\2#11011001;\2#01101010;\2#010011;", 6) and
        chkPutBitsLsb(           "", 0,       2#100101111011001, 15, "\2#11011001;\2#1001011;", 7) and
        chkPutBitsLsb(      "\2#0;", 1,       2#100101111011001, 15, "\2#10110010;\2#10010111;", 0) and
        chkPutBitsLsb(      "\2#1;", 1,       2#100101111011001, 15, "\2#10110011;\2#10010111;", 0) and
        chkPutBitsLsb(     "\2#01;", 2,       2#100101111011001, 15, "\2#01100101;\2#00101111;\2#1;", 1) and
        chkPutBitsLsb(     "\2#10;", 2,       2#100101111011001, 15, "\2#01100110;\2#00101111;\2#1;", 1) and
        chkPutBitsLsb(    "\2#010;", 3,       2#100101111011001, 15, "\2#11001010;\2#01011110;\2#10;", 2) and
        chkPutBitsLsb(    "\2#101;", 3,       2#100101111011001, 15, "\2#11001101;\2#01011110;\2#10;", 2) and
        chkPutBitsLsb(   "\2#0101;", 4,       2#100101111011001, 15, "\2#10010101;\2#10111101;\2#100;", 3) and
        chkPutBitsLsb(   "\2#1011;", 4,       2#100101111011001, 15, "\2#10011011;\2#10111101;\2#100;", 3) and
        chkPutBitsLsb(  "\2#01011;", 5,       2#100101111011001, 15, "\2#00101011;\2#01111011;\2#1001;", 4) and
        chkPutBitsLsb(  "\2#10011;", 5,       2#100101111011001, 15, "\2#00110011;\2#01111011;\2#1001;", 4) and
        chkPutBitsLsb( "\2#010011;", 6,       2#100101111011001, 15, "\2#01010011;\2#11110110;\2#10010;", 5) and
        chkPutBitsLsb( "\2#110101;", 6,       2#100101111011001, 15, "\2#01110101;\2#11110110;\2#10010;", 5) and
        chkPutBitsLsb("\2#0110101;", 7,       2#100101111011001, 15, "\2#10110101;\2#11101100;\2#100101;", 6) and
        chkPutBitsLsb("\2#1011001;", 7,       2#100101111011001, 15, "\2#11011001;\2#11101100;\2#100101;", 6) and
        chkPutBitsLsb(           "", 0,      2#0100101111011001, 16, "\2#11011001;\2#01001011;", 0) and
        chkPutBitsLsb(      "\2#0;", 1,      2#0100101111011001, 16, "\2#10110010;\2#10010111;\2#0;", 1) and
        chkPutBitsLsb(      "\2#1;", 1,      2#0100101111011001, 16, "\2#10110011;\2#10010111;\2#0;", 1) and
        chkPutBitsLsb(     "\2#01;", 2,      2#0100101111011001, 16, "\2#01100101;\2#00101111;\2#01;", 2) and
        chkPutBitsLsb(     "\2#10;", 2,      2#0100101111011001, 16, "\2#01100110;\2#00101111;\2#01;", 2) and
        chkPutBitsLsb(    "\2#010;", 3,      2#0100101111011001, 16, "\2#11001010;\2#01011110;\2#010;", 3) and
        chkPutBitsLsb(    "\2#101;", 3,      2#0100101111011001, 16, "\2#11001101;\2#01011110;\2#010;", 3) and
        chkPutBitsLsb(   "\2#0101;", 4,      2#0100101111011001, 16, "\2#10010101;\2#10111101;\2#0100;", 4) and
        chkPutBitsLsb(   "\2#1011;", 4,      2#0100101111011001, 16, "\2#10011011;\2#10111101;\2#0100;", 4) and
        chkPutBitsLsb(  "\2#01011;", 5,      2#0100101111011001, 16, "\2#00101011;\2#01111011;\2#01001;", 5) and
        chkPutBitsLsb(  "\2#10011;", 5,      2#0100101111011001, 16, "\2#00110011;\2#01111011;\2#01001;", 5) and
        chkPutBitsLsb( "\2#010011;", 6,      2#0100101111011001, 16, "\2#01010011;\2#11110110;\2#010010;", 6) and
        chkPutBitsLsb( "\2#110101;", 6,      2#0100101111011001, 16, "\2#01110101;\2#11110110;\2#010010;", 6) and
        chkPutBitsLsb("\2#0110101;", 7,      2#0100101111011001, 16, "\2#10110101;\2#11101100;\2#0100101;", 7) and
        chkPutBitsLsb("\2#1011001;", 7,      2#0100101111011001, 16, "\2#11011001;\2#11101100;\2#0100101;", 7) and
        chkPutBitsLsb(           "", 0,      2#1101100001100111, 16, "\2#01100111;\2#11011000;", 0) and
        chkPutBitsLsb(      "\2#0;", 1,      2#1101100001100111, 16, "\2#11001110;\2#10110000;\2#1;", 1) and
        chkPutBitsLsb(      "\2#1;", 1,      2#1101100001100111, 16, "\2#11001111;\2#10110000;\2#1;", 1) and
        chkPutBitsLsb(     "\2#01;", 2,      2#1101100001100111, 16, "\2#10011101;\2#01100001;\2#11;", 2) and
        chkPutBitsLsb(     "\2#10;", 2,      2#1101100001100111, 16, "\2#10011110;\2#01100001;\2#11;", 2) and
        chkPutBitsLsb(    "\2#010;", 3,      2#1101100001100111, 16, "\2#00111010;\2#11000011;\2#110;", 3) and
        chkPutBitsLsb(    "\2#101;", 3,      2#1101100001100111, 16, "\2#00111101;\2#11000011;\2#110;", 3) and
        chkPutBitsLsb(   "\2#0101;", 4,      2#1101100001100111, 16, "\2#01110101;\2#10000110;\2#1101;", 4) and
        chkPutBitsLsb(   "\2#1011;", 4,      2#1101100001100111, 16, "\2#01111011;\2#10000110;\2#1101;", 4) and
        chkPutBitsLsb(  "\2#01011;", 5,      2#1101100001100111, 16, "\2#11101011;\2#00001100;\2#11011;", 5) and
        chkPutBitsLsb(  "\2#10011;", 5,      2#1101100001100111, 16, "\2#11110011;\2#00001100;\2#11011;", 5) and
        chkPutBitsLsb( "\2#010011;", 6,      2#1101100001100111, 16, "\2#11010011;\2#00011001;\2#110110;", 6) and
        chkPutBitsLsb( "\2#110101;", 6,      2#1101100001100111, 16, "\2#11110101;\2#00011001;\2#110110;", 6) and
        chkPutBitsLsb("\2#0110101;", 7,      2#1101100001100111, 16, "\2#10110101;\2#00110011;\2#1101100;", 7) and
        chkPutBitsLsb("\2#1011001;", 7,      2#1101100001100111, 16, "\2#11011001;\2#00110011;\2#1101100;", 7) and
        chkPutBitsLsb(           "", 0,     2#01101100001100111, 17, "\2#01100111;\2#11011000;\2#0;", 1) and
        chkPutBitsLsb(      "\2#0;", 1,     2#01101100001100111, 17, "\2#11001110;\2#10110000;\2#01;", 2) and
        chkPutBitsLsb(      "\2#1;", 1,     2#01101100001100111, 17, "\2#11001111;\2#10110000;\2#01;", 2) and
        chkPutBitsLsb(     "\2#01;", 2,     2#01101100001100111, 17, "\2#10011101;\2#01100001;\2#011;", 3) and
        chkPutBitsLsb(     "\2#10;", 2,     2#01101100001100111, 17, "\2#10011110;\2#01100001;\2#011;", 3) and
        chkPutBitsLsb(    "\2#010;", 3,     2#01101100001100111, 17, "\2#00111010;\2#11000011;\2#0110;", 4) and
        chkPutBitsLsb(    "\2#101;", 3,     2#01101100001100111, 17, "\2#00111101;\2#11000011;\2#0110;", 4) and
        chkPutBitsLsb(   "\2#0101;", 4,     2#01101100001100111, 17, "\2#01110101;\2#10000110;\2#01101;", 5) and
        chkPutBitsLsb(   "\2#1011;", 4,     2#01101100001100111, 17, "\2#01111011;\2#10000110;\2#01101;", 5) and
        chkPutBitsLsb(  "\2#01011;", 5,     2#01101100001100111, 17, "\2#11101011;\2#00001100;\2#011011;", 6) and
        chkPutBitsLsb(  "\2#10011;", 5,     2#01101100001100111, 17, "\2#11110011;\2#00001100;\2#011011;", 6) and
        chkPutBitsLsb( "\2#010011;", 6,     2#01101100001100111, 17, "\2#11010011;\2#00011001;\2#0110110;", 7) and
        chkPutBitsLsb( "\2#110101;", 6,     2#01101100001100111, 17, "\2#11110101;\2#00011001;\2#0110110;", 7) and
        chkPutBitsLsb("\2#0110101;", 7,     2#01101100001100111, 17, "\2#10110101;\2#00110011;\2#01101100;", 0) and
        chkPutBitsLsb("\2#1011001;", 7,     2#01101100001100111, 17, "\2#11011001;\2#00110011;\2#01101100;", 0) and
        chkPutBitsLsb(           "", 0,     2#10100010110011101, 17, "\2#10011101;\2#01000101;\2#1;", 1) and
        chkPutBitsLsb(      "\2#0;", 1,     2#10100010110011101, 17, "\2#00111010;\2#10001011;\2#10;", 2) and
        chkPutBitsLsb(      "\2#1;", 1,     2#10100010110011101, 17, "\2#00111011;\2#10001011;\2#10;", 2) and
        chkPutBitsLsb(     "\2#01;", 2,     2#10100010110011101, 17, "\2#01110101;\2#00010110;\2#101;", 3) and
        chkPutBitsLsb(     "\2#10;", 2,     2#10100010110011101, 17, "\2#01110110;\2#00010110;\2#101;", 3) and
        chkPutBitsLsb(    "\2#010;", 3,     2#10100010110011101, 17, "\2#11101010;\2#00101100;\2#1010;", 4) and
        chkPutBitsLsb(    "\2#101;", 3,     2#10100010110011101, 17, "\2#11101101;\2#00101100;\2#1010;", 4) and
        chkPutBitsLsb(   "\2#0101;", 4,     2#10100010110011101, 17, "\2#11010101;\2#01011001;\2#10100;", 5) and
        chkPutBitsLsb(   "\2#1011;", 4,     2#10100010110011101, 17, "\2#11011011;\2#01011001;\2#10100;", 5) and
        chkPutBitsLsb(  "\2#01011;", 5,     2#10100010110011101, 17, "\2#10101011;\2#10110011;\2#101000;", 6) and
        chkPutBitsLsb(  "\2#10011;", 5,     2#10100010110011101, 17, "\2#10110011;\2#10110011;\2#101000;", 6) and
        chkPutBitsLsb( "\2#010011;", 6,     2#10100010110011101, 17, "\2#01010011;\2#01100111;\2#1010001;", 7) and
        chkPutBitsLsb( "\2#110101;", 6,     2#10100010110011101, 17, "\2#01110101;\2#01100111;\2#1010001;", 7) and
        chkPutBitsLsb("\2#0110101;", 7,     2#10100010110011101, 17, "\2#10110101;\2#11001110;\2#10100010;", 0) and
        chkPutBitsLsb("\2#1011001;", 7,     2#10100010110011101, 17, "\2#11011001;\2#11001110;\2#10100010;", 0) and
        chkPutBitsLsb(           "", 0,    2#010100010110011101, 18, "\2#10011101;\2#01000101;\2#01;", 2) and
        chkPutBitsLsb(      "\2#0;", 1,    2#010100010110011101, 18, "\2#00111010;\2#10001011;\2#010;", 3) and
        chkPutBitsLsb(      "\2#1;", 1,    2#010100010110011101, 18, "\2#00111011;\2#10001011;\2#010;", 3) and
        chkPutBitsLsb(     "\2#01;", 2,    2#010100010110011101, 18, "\2#01110101;\2#00010110;\2#0101;", 4) and
        chkPutBitsLsb(     "\2#10;", 2,    2#010100010110011101, 18, "\2#01110110;\2#00010110;\2#0101;", 4) and
        chkPutBitsLsb(    "\2#010;", 3,    2#010100010110011101, 18, "\2#11101010;\2#00101100;\2#01010;", 5) and
        chkPutBitsLsb(    "\2#101;", 3,    2#010100010110011101, 18, "\2#11101101;\2#00101100;\2#01010;", 5) and
        chkPutBitsLsb(   "\2#0101;", 4,    2#010100010110011101, 18, "\2#11010101;\2#01011001;\2#010100;", 6) and
        chkPutBitsLsb(   "\2#1011;", 4,    2#010100010110011101, 18, "\2#11011011;\2#01011001;\2#010100;", 6) and
        chkPutBitsLsb(  "\2#01011;", 5,    2#010100010110011101, 18, "\2#10101011;\2#10110011;\2#0101000;", 7) and
        chkPutBitsLsb(  "\2#10011;", 5,    2#010100010110011101, 18, "\2#10110011;\2#10110011;\2#0101000;", 7) and
        chkPutBitsLsb( "\2#010011;", 6,    2#010100010110011101, 18, "\2#01010011;\2#01100111;\2#01010001;", 0) and
        chkPutBitsLsb( "\2#110101;", 6,    2#010100010110011101, 18, "\2#01110101;\2#01100111;\2#01010001;", 0) and
        chkPutBitsLsb("\2#0110101;", 7,    2#010100010110011101, 18, "\2#10110101;\2#11001110;\2#10100010;\2#0;", 1) and
        chkPutBitsLsb("\2#1011001;", 7,    2#010100010110011101, 18, "\2#11011001;\2#11001110;\2#10100010;\2#0;", 1) and
        chkPutBitsLsb(           "", 0,    2#101001010011011101, 18, "\2#11011101;\2#10010100;\2#10;", 2) and
        chkPutBitsLsb(      "\2#0;", 1,    2#101001010011011101, 18, "\2#10111010;\2#00101001;\2#101;", 3) and
        chkPutBitsLsb(      "\2#1;", 1,    2#101001010011011101, 18, "\2#10111011;\2#00101001;\2#101;", 3) and
        chkPutBitsLsb(     "\2#01;", 2,    2#101001010011011101, 18, "\2#01110101;\2#01010011;\2#1010;", 4) and
        chkPutBitsLsb(     "\2#10;", 2,    2#101001010011011101, 18, "\2#01110110;\2#01010011;\2#1010;", 4) and
        chkPutBitsLsb(    "\2#010;", 3,    2#101001010011011101, 18, "\2#11101010;\2#10100110;\2#10100;", 5) and
        chkPutBitsLsb(    "\2#101;", 3,    2#101001010011011101, 18, "\2#11101101;\2#10100110;\2#10100;", 5) and
        chkPutBitsLsb(   "\2#0101;", 4,    2#101001010011011101, 18, "\2#11010101;\2#01001101;\2#101001;", 6) and
        chkPutBitsLsb(   "\2#1011;", 4,    2#101001010011011101, 18, "\2#11011011;\2#01001101;\2#101001;", 6) and
        chkPutBitsLsb(  "\2#01011;", 5,    2#101001010011011101, 18, "\2#10101011;\2#10011011;\2#1010010;", 7) and
        chkPutBitsLsb(  "\2#10011;", 5,    2#101001010011011101, 18, "\2#10110011;\2#10011011;\2#1010010;", 7) and
        chkPutBitsLsb( "\2#010011;", 6,    2#101001010011011101, 18, "\2#01010011;\2#00110111;\2#10100101;", 0) and
        chkPutBitsLsb( "\2#110101;", 6,    2#101001010011011101, 18, "\2#01110101;\2#00110111;\2#10100101;", 0) and
        chkPutBitsLsb("\2#0110101;", 7,    2#101001010011011101, 18, "\2#10110101;\2#01101110;\2#01001010;\2#1;", 1) and
        chkPutBitsLsb("\2#1011001;", 7,    2#101001010011011101, 18, "\2#11011001;\2#01101110;\2#01001010;\2#1;", 1) and
        chkPutBitsLsb(           "", 0,   2#0101001010011011101, 19, "\2#11011101;\2#10010100;\2#010;", 3) and
        chkPutBitsLsb(      "\2#0;", 1,   2#0101001010011011101, 19, "\2#10111010;\2#00101001;\2#0101;", 4) and
        chkPutBitsLsb(      "\2#1;", 1,   2#0101001010011011101, 19, "\2#10111011;\2#00101001;\2#0101;", 4) and
        chkPutBitsLsb(     "\2#01;", 2,   2#0101001010011011101, 19, "\2#01110101;\2#01010011;\2#01010;", 5) and
        chkPutBitsLsb(     "\2#10;", 2,   2#0101001010011011101, 19, "\2#01110110;\2#01010011;\2#01010;", 5) and
        chkPutBitsLsb(    "\2#010;", 3,   2#0101001010011011101, 19, "\2#11101010;\2#10100110;\2#010100;", 6) and
        chkPutBitsLsb(    "\2#101;", 3,   2#0101001010011011101, 19, "\2#11101101;\2#10100110;\2#010100;", 6) and
        chkPutBitsLsb(   "\2#0101;", 4,   2#0101001010011011101, 19, "\2#11010101;\2#01001101;\2#0101001;", 7) and
        chkPutBitsLsb(   "\2#1011;", 4,   2#0101001010011011101, 19, "\2#11011011;\2#01001101;\2#0101001;", 7) and
        chkPutBitsLsb(  "\2#01011;", 5,   2#0101001010011011101, 19, "\2#10101011;\2#10011011;\2#01010010;", 0) and
        chkPutBitsLsb(  "\2#10011;", 5,   2#0101001010011011101, 19, "\2#10110011;\2#10011011;\2#01010010;", 0) and
        chkPutBitsLsb( "\2#010011;", 6,   2#0101001010011011101, 19, "\2#01010011;\2#00110111;\2#10100101;\2#0;", 1) and
        chkPutBitsLsb( "\2#110101;", 6,   2#0101001010011011101, 19, "\2#01110101;\2#00110111;\2#10100101;\2#0;", 1) and
        chkPutBitsLsb("\2#0110101;", 7,   2#0101001010011011101, 19, "\2#10110101;\2#01101110;\2#01001010;\2#01;", 2) and
        chkPutBitsLsb("\2#1011001;", 7,   2#0101001010011011101, 19, "\2#11011001;\2#01101110;\2#01001010;\2#01;", 2) and
        chkPutBitsLsb(           "", 0,   2#1101101100111001001, 19, "\2#11001001;\2#11011001;\2#110;", 3) and
        chkPutBitsLsb(      "\2#0;", 1,   2#1101101100111001001, 19, "\2#10010010;\2#10110011;\2#1101;", 4) and
        chkPutBitsLsb(      "\2#1;", 1,   2#1101101100111001001, 19, "\2#10010011;\2#10110011;\2#1101;", 4) and
        chkPutBitsLsb(     "\2#01;", 2,   2#1101101100111001001, 19, "\2#00100101;\2#01100111;\2#11011;", 5) and
        chkPutBitsLsb(     "\2#10;", 2,   2#1101101100111001001, 19, "\2#00100110;\2#01100111;\2#11011;", 5) and
        chkPutBitsLsb(    "\2#010;", 3,   2#1101101100111001001, 19, "\2#01001010;\2#11001110;\2#110110;", 6) and
        chkPutBitsLsb(    "\2#101;", 3,   2#1101101100111001001, 19, "\2#01001101;\2#11001110;\2#110110;", 6) and
        chkPutBitsLsb(   "\2#0101;", 4,   2#1101101100111001001, 19, "\2#10010101;\2#10011100;\2#1101101;", 7) and
        chkPutBitsLsb(   "\2#1011;", 4,   2#1101101100111001001, 19, "\2#10011011;\2#10011100;\2#1101101;", 7) and
        chkPutBitsLsb(  "\2#01011;", 5,   2#1101101100111001001, 19, "\2#00101011;\2#00111001;\2#11011011;", 0) and
        chkPutBitsLsb(  "\2#10011;", 5,   2#1101101100111001001, 19, "\2#00110011;\2#00111001;\2#11011011;", 0) and
        chkPutBitsLsb( "\2#010011;", 6,   2#1101101100111001001, 19, "\2#01010011;\2#01110010;\2#10110110;\2#1;", 1) and
        chkPutBitsLsb( "\2#110101;", 6,   2#1101101100111001001, 19, "\2#01110101;\2#01110010;\2#10110110;\2#1;", 1) and
        chkPutBitsLsb("\2#0110101;", 7,   2#1101101100111001001, 19, "\2#10110101;\2#11100100;\2#01101100;\2#11;", 2) and
        chkPutBitsLsb("\2#1011001;", 7,   2#1101101100111001001, 19, "\2#11011001;\2#11100100;\2#01101100;\2#11;", 2) and
        chkPutBitsLsb(           "", 0,  2#01101101100111001001, 20, "\2#11001001;\2#11011001;\2#0110;", 4) and
        chkPutBitsLsb(      "\2#0;", 1,  2#01101101100111001001, 20, "\2#10010010;\2#10110011;\2#01101;", 5) and
        chkPutBitsLsb(      "\2#1;", 1,  2#01101101100111001001, 20, "\2#10010011;\2#10110011;\2#01101;", 5) and
        chkPutBitsLsb(     "\2#01;", 2,  2#01101101100111001001, 20, "\2#00100101;\2#01100111;\2#011011;", 6) and
        chkPutBitsLsb(     "\2#10;", 2,  2#01101101100111001001, 20, "\2#00100110;\2#01100111;\2#011011;", 6) and
        chkPutBitsLsb(    "\2#010;", 3,  2#01101101100111001001, 20, "\2#01001010;\2#11001110;\2#0110110;", 7) and
        chkPutBitsLsb(    "\2#101;", 3,  2#01101101100111001001, 20, "\2#01001101;\2#11001110;\2#0110110;", 7) and
        chkPutBitsLsb(   "\2#0101;", 4,  2#01101101100111001001, 20, "\2#10010101;\2#10011100;\2#01101101;", 0) and
        chkPutBitsLsb(   "\2#1011;", 4,  2#01101101100111001001, 20, "\2#10011011;\2#10011100;\2#01101101;", 0) and
        chkPutBitsLsb(  "\2#01011;", 5,  2#01101101100111001001, 20, "\2#00101011;\2#00111001;\2#11011011;\2#0;", 1) and
        chkPutBitsLsb(  "\2#10011;", 5,  2#01101101100111001001, 20, "\2#00110011;\2#00111001;\2#11011011;\2#0;", 1) and
        chkPutBitsLsb( "\2#010011;", 6,  2#01101101100111001001, 20, "\2#01010011;\2#01110010;\2#10110110;\2#01;", 2) and
        chkPutBitsLsb( "\2#110101;", 6,  2#01101101100111001001, 20, "\2#01110101;\2#01110010;\2#10110110;\2#01;", 2) and
        chkPutBitsLsb("\2#0110101;", 7,  2#01101101100111001001, 20, "\2#10110101;\2#11100100;\2#01101100;\2#011;", 3) and
        chkPutBitsLsb("\2#1011001;", 7,  2#01101101100111001001, 20, "\2#11011001;\2#11100100;\2#01101100;\2#011;", 3) and
        chkPutBitsLsb(           "", 0,  2#11100111111011001001, 20, "\2#11001001;\2#01111110;\2#1110;", 4) and
        chkPutBitsLsb(      "\2#0;", 1,  2#11100111111011001001, 20, "\2#10010010;\2#11111101;\2#11100;", 5) and
        chkPutBitsLsb(      "\2#1;", 1,  2#11100111111011001001, 20, "\2#10010011;\2#11111101;\2#11100;", 5) and
        chkPutBitsLsb(     "\2#01;", 2,  2#11100111111011001001, 20, "\2#00100101;\2#11111011;\2#111001;", 6) and
        chkPutBitsLsb(     "\2#10;", 2,  2#11100111111011001001, 20, "\2#00100110;\2#11111011;\2#111001;", 6) and
        chkPutBitsLsb(    "\2#010;", 3,  2#11100111111011001001, 20, "\2#01001010;\2#11110110;\2#1110011;", 7) and
        chkPutBitsLsb(    "\2#101;", 3,  2#11100111111011001001, 20, "\2#01001101;\2#11110110;\2#1110011;", 7) and
        chkPutBitsLsb(   "\2#0101;", 4,  2#11100111111011001001, 20, "\2#10010101;\2#11101100;\2#11100111;", 0) and
        chkPutBitsLsb(   "\2#1011;", 4,  2#11100111111011001001, 20, "\2#10011011;\2#11101100;\2#11100111;", 0) and
        chkPutBitsLsb(  "\2#01011;", 5,  2#11100111111011001001, 20, "\2#00101011;\2#11011001;\2#11001111;\2#1;", 1) and
        chkPutBitsLsb(  "\2#10011;", 5,  2#11100111111011001001, 20, "\2#00110011;\2#11011001;\2#11001111;\2#1;", 1) and
        chkPutBitsLsb( "\2#010011;", 6,  2#11100111111011001001, 20, "\2#01010011;\2#10110010;\2#10011111;\2#11;", 2) and
        chkPutBitsLsb( "\2#110101;", 6,  2#11100111111011001001, 20, "\2#01110101;\2#10110010;\2#10011111;\2#11;", 2) and
        chkPutBitsLsb("\2#0110101;", 7,  2#11100111111011001001, 20, "\2#10110101;\2#01100100;\2#00111111;\2#111;", 3) and
        chkPutBitsLsb("\2#1011001;", 7,  2#11100111111011001001, 20, "\2#11011001;\2#01100100;\2#00111111;\2#111;", 3) and
        chkPutBitsLsb(           "", 0, 2#011100111111011001001, 21, "\2#11001001;\2#01111110;\2#01110;", 5) and
        chkPutBitsLsb(      "\2#0;", 1, 2#011100111111011001001, 21, "\2#10010010;\2#11111101;\2#011100;", 6) and
        chkPutBitsLsb(      "\2#1;", 1, 2#011100111111011001001, 21, "\2#10010011;\2#11111101;\2#011100;", 6) and
        chkPutBitsLsb(     "\2#01;", 2, 2#011100111111011001001, 21, "\2#00100101;\2#11111011;\2#0111001;", 7) and
        chkPutBitsLsb(     "\2#10;", 2, 2#011100111111011001001, 21, "\2#00100110;\2#11111011;\2#0111001;", 7) and
        chkPutBitsLsb(    "\2#010;", 3, 2#011100111111011001001, 21, "\2#01001010;\2#11110110;\2#01110011;", 0) and
        chkPutBitsLsb(    "\2#101;", 3, 2#011100111111011001001, 21, "\2#01001101;\2#11110110;\2#01110011;", 0) and
        chkPutBitsLsb(   "\2#0101;", 4, 2#011100111111011001001, 21, "\2#10010101;\2#11101100;\2#11100111;\2#0;", 1) and
        chkPutBitsLsb(   "\2#1011;", 4, 2#011100111111011001001, 21, "\2#10011011;\2#11101100;\2#11100111;\2#0;", 1) and
        chkPutBitsLsb(  "\2#01011;", 5, 2#011100111111011001001, 21, "\2#00101011;\2#11011001;\2#11001111;\2#01;", 2) and
        chkPutBitsLsb(  "\2#10011;", 5, 2#011100111111011001001, 21, "\2#00110011;\2#11011001;\2#11001111;\2#01;", 2) and
        chkPutBitsLsb( "\2#010011;", 6, 2#011100111111011001001, 21, "\2#01010011;\2#10110010;\2#10011111;\2#011;", 3) and
        chkPutBitsLsb( "\2#110101;", 6, 2#011100111111011001001, 21, "\2#01110101;\2#10110010;\2#10011111;\2#011;", 3) and
        chkPutBitsLsb("\2#0110101;", 7, 2#011100111111011001001, 21, "\2#10110101;\2#01100100;\2#00111111;\2#0111;", 4) and
        chkPutBitsLsb("\2#1011001;", 7, 2#011100111111011001001, 21, "\2#11011001;\2#01100100;\2#00111111;\2#0111;", 4) and
        chkPutBitsLsb(           "", 0, 2#101000010010111000111, 21, "\2#11000111;\2#00100101;\2#10100;", 5) and
        chkPutBitsLsb(      "\2#0;", 1, 2#101000010010111000111, 21, "\2#10001110;\2#01001011;\2#101000;", 6) and
        chkPutBitsLsb(      "\2#1;", 1, 2#101000010010111000111, 21, "\2#10001111;\2#01001011;\2#101000;", 6) and
        chkPutBitsLsb(     "\2#01;", 2, 2#101000010010111000111, 21, "\2#00011101;\2#10010111;\2#1010000;", 7) and
        chkPutBitsLsb(     "\2#10;", 2, 2#101000010010111000111, 21, "\2#00011110;\2#10010111;\2#1010000;", 7) and
        chkPutBitsLsb(    "\2#010;", 3, 2#101000010010111000111, 21, "\2#00111010;\2#00101110;\2#10100001;", 0) and
        chkPutBitsLsb(    "\2#101;", 3, 2#101000010010111000111, 21, "\2#00111101;\2#00101110;\2#10100001;", 0) and
        chkPutBitsLsb(   "\2#0101;", 4, 2#101000010010111000111, 21, "\2#01110101;\2#01011100;\2#01000010;\2#1;", 1) and
        chkPutBitsLsb(   "\2#1011;", 4, 2#101000010010111000111, 21, "\2#01111011;\2#01011100;\2#01000010;\2#1;", 1) and
        chkPutBitsLsb(  "\2#01011;", 5, 2#101000010010111000111, 21, "\2#11101011;\2#10111000;\2#10000100;\2#10;", 2) and
        chkPutBitsLsb(  "\2#10011;", 5, 2#101000010010111000111, 21, "\2#11110011;\2#10111000;\2#10000100;\2#10;", 2) and
        chkPutBitsLsb( "\2#010011;", 6, 2#101000010010111000111, 21, "\2#11010011;\2#01110001;\2#00001001;\2#101;", 3) and
        chkPutBitsLsb( "\2#110101;", 6, 2#101000010010111000111, 21, "\2#11110101;\2#01110001;\2#00001001;\2#101;", 3) and
        chkPutBitsLsb("\2#0110101;", 7, 2#101000010010111000111, 21, "\2#10110101;\2#11100011;\2#00010010;\2#1010;", 4) and
        chkPutBitsLsb("\2#1011001;", 7, 2#101000010010111000111, 21, "\2#11011001;\2#11100011;\2#00010010;\2#1010;", 4) then
      writeln("putBitsLsb works correct.");
    end if;
  end func;


const func boolean: chkGetBitMsb (in string: stri, in integer: bytePos,
    in integer: bitPos, in integer: bitsExpected,
    in integer: bytePosExpected, in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var integer: bytePosVar is 0;
    var integer: bitPosVar is 0;
    var integer: bits is 0;
    var char: ch is ' ';
    var file: testFile is STD_NULL;
  begin
    bytePosVar := bytePos;
    bitPosVar := bitPos;
    bits := getBitMsb(stri, bytePosVar, bitPosVar);
    if bits <> bitsExpected or bytePosVar <> bytePosExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("getBitMsb(\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 lpad0 8 <& ";");
      end for;
      writeln("\", " <& bytePos <& ", " <& bitPos <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if bytePosVar <> bytePosExpected then
        writeln(" ***** Expected bytePos " <& bytePosExpected <& " found " <& bytePosVar);
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    testFile := openStrifile(stri);
    ignore(gets(testFile, pred(bytePos)));
    if bitPos = 0 then
      bitPosVar := 8;
    else
      bitPosVar := bitPos;
      testFile.bufferChar := getc(testFile);
    end if;
    bits := getBitMsb(testFile, bitPosVar);
    if bits <> bitsExpected or (bitPosExpected = 0 and bitPosVar <> 8) or
        (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
      okay := FALSE;
      write("\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 <& ";");
      end for;
      writeln("\": getBitMsb(testFile, " <& bitPos <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if (bitPosExpected = 0 and bitPosVar <> 8) or
          (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
  end func;


const proc: chkGetBitMsb is func
  begin
    if  chkGetBitMsb("\2#00000000;",             1, 0, 2#0, 1, 1) and
        chkGetBitMsb("\2#00000000;",             1, 1, 2#0, 1, 2) and
        chkGetBitMsb("\2#10100000;",             1, 1, 2#0, 1, 2) and
        chkGetBitMsb("\2#01001000;",             1, 2, 2#0, 1, 3) and
        chkGetBitMsb("\2#10010000;",             1, 2, 2#0, 1, 3) and
        chkGetBitMsb("\2#01000100;",             1, 3, 2#0, 1, 4) and
        chkGetBitMsb("\2#10101010;",             1, 3, 2#0, 1, 4) and
        chkGetBitMsb("\2#01010010;\2#10000000;", 1, 4, 2#0, 1, 5) and
        chkGetBitMsb("\2#10110101;\2#10000000;", 1, 4, 2#0, 1, 5) and
        chkGetBitMsb("\2#01011001;\2#01100000;", 1, 5, 2#0, 1, 6) and
        chkGetBitMsb("\2#10011010;\2#01100000;", 1, 5, 2#0, 1, 6) and
        chkGetBitMsb("\2#01001100;\2#10011000;", 1, 6, 2#0, 1, 7) and
        chkGetBitMsb("\2#11010101;\2#10101000;", 1, 6, 2#0, 1, 7) and
        chkGetBitMsb("\2#01101010;\2#01101010;", 1, 7, 2#0, 2, 0) and
        chkGetBitMsb("\2#10110010;\2#10110010;", 1, 7, 2#0, 2, 0) and
        chkGetBitMsb("\2#10000000;",             1, 0, 2#1, 1, 1) and
        chkGetBitMsb("\2#01000000;",             1, 1, 2#1, 1, 2) and
        chkGetBitMsb("\2#11100000;",             1, 1, 2#1, 1, 2) and
        chkGetBitMsb("\2#01101000;",             1, 2, 2#1, 1, 3) and
        chkGetBitMsb("\2#10110000;",             1, 2, 2#1, 1, 3) and
        chkGetBitMsb("\2#01010100;",             1, 3, 2#1, 1, 4) and
        chkGetBitMsb("\2#10111010;",             1, 3, 2#1, 1, 4) and
        chkGetBitMsb("\2#01011010;\2#10000000;", 1, 4, 2#1, 1, 5) and
        chkGetBitMsb("\2#10111101;\2#10000000;", 1, 4, 2#1, 1, 5) and
        chkGetBitMsb("\2#01011101;\2#01100000;", 1, 5, 2#1, 1, 6) and
        chkGetBitMsb("\2#10011110;\2#01100000;", 1, 5, 2#1, 1, 6) and
        chkGetBitMsb("\2#01001110;\2#10011000;", 1, 6, 2#1, 1, 7) and
        chkGetBitMsb("\2#11010111;\2#10101000;", 1, 6, 2#1, 1, 7) and
        chkGetBitMsb("\2#01101011;\2#01101010;", 1, 7, 2#1, 2, 0) and
        chkGetBitMsb("\2#10110011;\2#10110010;", 1, 7, 2#1, 2, 0) then
      writeln("getBitMsb works correct.");
    end if;
  end func;


const func boolean: chkGetBitsMsb (in string: stri, in integer: bytePos,
    in integer: bitPos, in integer: bitsNeeded, in integer: bitsExpected,
    in integer: bytePosExpected, in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var integer: bytePosVar is 0;
    var integer: bitPosVar is 0;
    var integer: bits is 0;
    var char: ch is ' ';
    var file: testFile is STD_NULL;
  begin
    bytePosVar := bytePos;
    bitPosVar := bitPos;
    bits := getBitsMsb(stri, bytePosVar, bitPosVar, bitsNeeded);
    if bits <> bitsExpected or bytePosVar <> bytePosExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("getBitsMsb(\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 lpad0 8 <& ";");
      end for;
      writeln("\", " <& bytePos <& ", " <& bitPos <& ", " <& bitsNeeded <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if bytePosVar <> bytePosExpected then
        writeln(" ***** Expected bytePos " <& bytePosExpected <& " found " <& bytePosVar);
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    testFile := openStrifile(stri);
    ignore(gets(testFile, pred(bytePos)));
    if bitPos = 0 then
      bitPosVar := 8;
    else
      bitPosVar := bitPos;
      testFile.bufferChar := getc(testFile);
    end if;
    bits := getBitsMsb(testFile, bitPosVar, bitsNeeded);
    if bits <> bitsExpected or (bitPosExpected = 0 and bitPosVar <> 8) or
        (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
      okay := FALSE;
      write("\"");
      for ch range stri do
        write("\\2#" <& ord(ch) radix 2 <& ";");
      end for;
      writeln("\": getBitsMsb(testFile, " <& bitPos <& ", " <& bitsNeeded <& ")");
      if bits <> bitsExpected then
        writeln(" ***** Expected " <& bitsExpected <& " found " <& bits);
      end if;
      if (bitPosExpected = 0 and bitPosVar <> 8) or
          (bitPosExpected <> 0 and bitPosVar <> bitPosExpected) then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
  end func;


const proc: chkGetBitsMsb is func
  begin
    if  chkGetBitsMsb("\2#00000000;",                                                 1, 0,  1,                     2#0, 1, 1) and
        chkGetBitsMsb("\2#00000000;",                                                 1, 1,  1,                     2#0, 1, 2) and
        chkGetBitsMsb("\2#10100000;",                                                 1, 1,  1,                     2#0, 1, 2) and
        chkGetBitsMsb("\2#01001000;",                                                 1, 2,  1,                     2#0, 1, 3) and
        chkGetBitsMsb("\2#10010000;",                                                 1, 2,  1,                     2#0, 1, 3) and
        chkGetBitsMsb("\2#01000100;",                                                 1, 3,  1,                     2#0, 1, 4) and
        chkGetBitsMsb("\2#10101010;",                                                 1, 3,  1,                     2#0, 1, 4) and
        chkGetBitsMsb("\2#01010010;\2#10000000;",                                     1, 4,  1,                     2#0, 1, 5) and
        chkGetBitsMsb("\2#10110101;\2#10000000;",                                     1, 4,  1,                     2#0, 1, 5) and
        chkGetBitsMsb("\2#01011001;\2#01100000;",                                     1, 5,  1,                     2#0, 1, 6) and
        chkGetBitsMsb("\2#10011010;\2#01100000;",                                     1, 5,  1,                     2#0, 1, 6) and
        chkGetBitsMsb("\2#01001100;\2#10011000;",                                     1, 6,  1,                     2#0, 1, 7) and
        chkGetBitsMsb("\2#11010101;\2#10101000;",                                     1, 6,  1,                     2#0, 1, 7) and
        chkGetBitsMsb("\2#01101010;\2#01101010;",                                     1, 7,  1,                     2#0, 2, 0) and
        chkGetBitsMsb("\2#10110010;\2#10110010;",                                     1, 7,  1,                     2#0, 2, 0) and
        chkGetBitsMsb("\2#10000000;",                                                 1, 0,  1,                     2#1, 1, 1) and
        chkGetBitsMsb("\2#01000000;",                                                 1, 1,  1,                     2#1, 1, 2) and
        chkGetBitsMsb("\2#11100000;",                                                 1, 1,  1,                     2#1, 1, 2) and
        chkGetBitsMsb("\2#01101000;",                                                 1, 2,  1,                     2#1, 1, 3) and
        chkGetBitsMsb("\2#10110000;",                                                 1, 2,  1,                     2#1, 1, 3) and
        chkGetBitsMsb("\2#01010100;",                                                 1, 3,  1,                     2#1, 1, 4) and
        chkGetBitsMsb("\2#10111010;",                                                 1, 3,  1,                     2#1, 1, 4) and
        chkGetBitsMsb("\2#01011010;\2#10000000;",                                     1, 4,  1,                     2#1, 1, 5) and
        chkGetBitsMsb("\2#10111101;\2#10000000;",                                     1, 4,  1,                     2#1, 1, 5) and
        chkGetBitsMsb("\2#01011101;\2#01100000;",                                     1, 5,  1,                     2#1, 1, 6) and
        chkGetBitsMsb("\2#10011110;\2#01100000;",                                     1, 5,  1,                     2#1, 1, 6) and
        chkGetBitsMsb("\2#01001110;\2#10011000;",                                     1, 6,  1,                     2#1, 1, 7) and
        chkGetBitsMsb("\2#11010111;\2#10101000;",                                     1, 6,  1,                     2#1, 1, 7) and
        chkGetBitsMsb("\2#01101011;\2#01101010;",                                     1, 7,  1,                     2#1, 2, 0) and
        chkGetBitsMsb("\2#10110011;\2#10110010;",                                     1, 7,  1,                     2#1, 2, 0) and
        chkGetBitsMsb("\2#01000000;",                                                 1, 0,  2,                    2#01, 1, 2) and
        chkGetBitsMsb("\2#00100000;",                                                 1, 1,  2,                    2#01, 1, 3) and
        chkGetBitsMsb("\2#10110000;",                                                 1, 1,  2,                    2#01, 1, 3) and
        chkGetBitsMsb("\2#01010100;",                                                 1, 2,  2,                    2#01, 1, 4) and
        chkGetBitsMsb("\2#10011000;",                                                 1, 2,  2,                    2#01, 1, 4) and
        chkGetBitsMsb("\2#01001010;",                                                 1, 3,  2,                    2#01, 1, 5) and
        chkGetBitsMsb("\2#10101101;",                                                 1, 3,  2,                    2#01, 1, 5) and
        chkGetBitsMsb("\2#01010101;\2#01000000;",                                     1, 4,  2,                    2#01, 1, 6) and
        chkGetBitsMsb("\2#10110110;\2#11000000;",                                     1, 4,  2,                    2#01, 1, 6) and
        chkGetBitsMsb("\2#01011010;\2#10110000;",                                     1, 5,  2,                    2#01, 1, 7) and
        chkGetBitsMsb("\2#10011011;\2#00110000;",                                     1, 5,  2,                    2#01, 1, 7) and
        chkGetBitsMsb("\2#01001101;\2#01001100;",                                     1, 6,  2,                    2#01, 2, 0) and
        chkGetBitsMsb("\2#11010101;\2#11010100;",                                     1, 6,  2,                    2#01, 2, 0) and
        chkGetBitsMsb("\2#01101010;\2#10110101;",                                     1, 7,  2,                    2#01, 2, 1) and
        chkGetBitsMsb("\2#10110010;\2#11011001;",                                     1, 7,  2,                    2#01, 2, 1) and
        chkGetBitsMsb("\2#10000000;",                                                 1, 0,  2,                    2#10, 1, 2) and
        chkGetBitsMsb("\2#01000000;",                                                 1, 1,  2,                    2#10, 1, 3) and
        chkGetBitsMsb("\2#11010000;",                                                 1, 1,  2,                    2#10, 1, 3) and
        chkGetBitsMsb("\2#01100100;",                                                 1, 2,  2,                    2#10, 1, 4) and
        chkGetBitsMsb("\2#10101000;",                                                 1, 2,  2,                    2#10, 1, 4) and
        chkGetBitsMsb("\2#01010010;",                                                 1, 3,  2,                    2#10, 1, 5) and
        chkGetBitsMsb("\2#10110101;",                                                 1, 3,  2,                    2#10, 1, 5) and
        chkGetBitsMsb("\2#01011001;\2#01000000;",                                     1, 4,  2,                    2#10, 1, 6) and
        chkGetBitsMsb("\2#10111010;\2#11000000;",                                     1, 4,  2,                    2#10, 1, 6) and
        chkGetBitsMsb("\2#01011100;\2#10110000;",                                     1, 5,  2,                    2#10, 1, 7) and
        chkGetBitsMsb("\2#10011101;\2#00110000;",                                     1, 5,  2,                    2#10, 1, 7) and
        chkGetBitsMsb("\2#01001110;\2#01001100;",                                     1, 6,  2,                    2#10, 2, 0) and
        chkGetBitsMsb("\2#11010110;\2#11010100;",                                     1, 6,  2,                    2#10, 2, 0) and
        chkGetBitsMsb("\2#01101011;\2#00110101;",                                     1, 7,  2,                    2#10, 2, 1) and
        chkGetBitsMsb("\2#10110011;\2#01011001;",                                     1, 7,  2,                    2#10, 2, 1) and
        chkGetBitsMsb("\2#01000000;",                                                 1, 0,  3,                   2#010, 1, 3) and
        chkGetBitsMsb("\2#00100000;",                                                 1, 1,  3,                   2#010, 1, 4) and
        chkGetBitsMsb("\2#10101000;",                                                 1, 1,  3,                   2#010, 1, 4) and
        chkGetBitsMsb("\2#01010010;",                                                 1, 2,  3,                   2#010, 1, 5) and
        chkGetBitsMsb("\2#10010100;",                                                 1, 2,  3,                   2#010, 1, 5) and
        chkGetBitsMsb("\2#01001001;\2#00000000;",                                     1, 3,  3,                   2#010, 1, 6) and
        chkGetBitsMsb("\2#10101010;\2#10000000;",                                     1, 3,  3,                   2#010, 1, 6) and
        chkGetBitsMsb("\2#01010100;\2#10100000;",                                     1, 4,  3,                   2#010, 1, 7) and
        chkGetBitsMsb("\2#10110101;\2#01100000;",                                     1, 4,  3,                   2#010, 1, 7) and
        chkGetBitsMsb("\2#01011010;\2#01011000;",                                     1, 5,  3,                   2#010, 2, 0) and
        chkGetBitsMsb("\2#10011010;\2#10011000;",                                     1, 5,  3,                   2#010, 2, 0) and
        chkGetBitsMsb("\2#01001101;\2#00100110;",                                     1, 6,  3,                   2#010, 2, 1) and
        chkGetBitsMsb("\2#11010101;\2#01101010;",                                     1, 6,  3,                   2#010, 2, 1) and
        chkGetBitsMsb("\2#01101010;\2#10011010;\2#10000000;",                         1, 7,  3,                   2#010, 2, 2) and
        chkGetBitsMsb("\2#10110010;\2#10101100;\2#10000000;",                         1, 7,  3,                   2#010, 2, 2) and
        chkGetBitsMsb("\2#10100000;",                                                 1, 0,  3,                   2#101, 1, 3) and
        chkGetBitsMsb("\2#01010000;",                                                 1, 1,  3,                   2#101, 1, 4) and
        chkGetBitsMsb("\2#11011000;",                                                 1, 1,  3,                   2#101, 1, 4) and
        chkGetBitsMsb("\2#01101010;",                                                 1, 2,  3,                   2#101, 1, 5) and
        chkGetBitsMsb("\2#10101100;",                                                 1, 2,  3,                   2#101, 1, 5) and
        chkGetBitsMsb("\2#01010101;\2#00000000;",                                     1, 3,  3,                   2#101, 1, 6) and
        chkGetBitsMsb("\2#10110110;\2#10000000;",                                     1, 3,  3,                   2#101, 1, 6) and
        chkGetBitsMsb("\2#01011010;\2#10100000;",                                     1, 4,  3,                   2#101, 1, 7) and
        chkGetBitsMsb("\2#10111011;\2#01100000;",                                     1, 4,  3,                   2#101, 1, 7) and
        chkGetBitsMsb("\2#01011101;\2#01011000;",                                     1, 5,  3,                   2#101, 2, 0) and
        chkGetBitsMsb("\2#10011101;\2#10011000;",                                     1, 5,  3,                   2#101, 2, 0) and
        chkGetBitsMsb("\2#01001110;\2#10100110;",                                     1, 6,  3,                   2#101, 2, 1) and
        chkGetBitsMsb("\2#11010110;\2#11101010;",                                     1, 6,  3,                   2#101, 2, 1) and
        chkGetBitsMsb("\2#01101011;\2#01011010;\2#10000000;",                         1, 7,  3,                   2#101, 2, 2) and
        chkGetBitsMsb("\2#10110011;\2#01101100;\2#10000000;",                         1, 7,  3,                   2#101, 2, 2) and
        chkGetBitsMsb("\2#01010000;",                                                 1, 0,  4,                  2#0101, 1, 4) and
        chkGetBitsMsb("\2#00101000;",                                                 1, 1,  4,                  2#0101, 1, 5) and
        chkGetBitsMsb("\2#10101100;",                                                 1, 1,  4,                  2#0101, 1, 5) and
        chkGetBitsMsb("\2#01010101;",                                                 1, 2,  4,                  2#0101, 1, 6) and
        chkGetBitsMsb("\2#10010110;",                                                 1, 2,  4,                  2#0101, 1, 6) and
        chkGetBitsMsb("\2#01001010;\2#10000000;",                                     1, 3,  4,                  2#0101, 1, 7) and
        chkGetBitsMsb("\2#10101011;\2#01000000;",                                     1, 3,  4,                  2#0101, 1, 7) and
        chkGetBitsMsb("\2#01010101;\2#01010000;",                                     1, 4,  4,                  2#0101, 2, 0) and
        chkGetBitsMsb("\2#10110101;\2#10110000;",                                     1, 4,  4,                  2#0101, 2, 0) and
        chkGetBitsMsb("\2#01011010;\2#10101100;",                                     1, 5,  4,                  2#0101, 2, 1) and
        chkGetBitsMsb("\2#10011010;\2#11001100;",                                     1, 5,  4,                  2#0101, 2, 1) and
        chkGetBitsMsb("\2#01001101;\2#01010011;",                                     1, 6,  4,                  2#0101, 2, 2) and
        chkGetBitsMsb("\2#11010101;\2#01110101;",                                     1, 6,  4,                  2#0101, 2, 2) and
        chkGetBitsMsb("\2#01101010;\2#10101101;\2#01000000;",                         1, 7,  4,                  2#0101, 2, 3) and
        chkGetBitsMsb("\2#10110010;\2#10110110;\2#01000000;",                         1, 7,  4,                  2#0101, 2, 3) and
        chkGetBitsMsb("\2#10110000;",                                                 1, 0,  4,                  2#1011, 1, 4) and
        chkGetBitsMsb("\2#01011000;",                                                 1, 1,  4,                  2#1011, 1, 5) and
        chkGetBitsMsb("\2#11011100;",                                                 1, 1,  4,                  2#1011, 1, 5) and
        chkGetBitsMsb("\2#01101101;",                                                 1, 2,  4,                  2#1011, 1, 6) and
        chkGetBitsMsb("\2#10101110;",                                                 1, 2,  4,                  2#1011, 1, 6) and
        chkGetBitsMsb("\2#01010110;\2#10000000;",                                     1, 3,  4,                  2#1011, 1, 7) and
        chkGetBitsMsb("\2#10110111;\2#01000000;",                                     1, 3,  4,                  2#1011, 1, 7) and
        chkGetBitsMsb("\2#01011011;\2#01010000;",                                     1, 4,  4,                  2#1011, 2, 0) and
        chkGetBitsMsb("\2#10111011;\2#10110000;",                                     1, 4,  4,                  2#1011, 2, 0) and
        chkGetBitsMsb("\2#01011101;\2#10101100;",                                     1, 5,  4,                  2#1011, 2, 1) and
        chkGetBitsMsb("\2#10011101;\2#11001100;",                                     1, 5,  4,                  2#1011, 2, 1) and
        chkGetBitsMsb("\2#01001110;\2#11010011;",                                     1, 6,  4,                  2#1011, 2, 2) and
        chkGetBitsMsb("\2#11010110;\2#11110101;",                                     1, 6,  4,                  2#1011, 2, 2) and
        chkGetBitsMsb("\2#01101011;\2#01101101;\2#01000000;",                         1, 7,  4,                  2#1011, 2, 3) and
        chkGetBitsMsb("\2#10110011;\2#01110110;\2#01000000;",                         1, 7,  4,                  2#1011, 2, 3) and
        chkGetBitsMsb("\2#01011000;",                                                 1, 0,  5,                 2#01011, 1, 5) and
        chkGetBitsMsb("\2#00101100;",                                                 1, 1,  5,                 2#01011, 1, 6) and
        chkGetBitsMsb("\2#10101110;",                                                 1, 1,  5,                 2#01011, 1, 6) and
        chkGetBitsMsb("\2#01010110;\2#10000000;",                                     1, 2,  5,                 2#01011, 1, 7) and
        chkGetBitsMsb("\2#10010111;\2#00000000;",                                     1, 2,  5,                 2#01011, 1, 7) and
        chkGetBitsMsb("\2#01001011;\2#01000000;",                                     1, 3,  5,                 2#01011, 2, 0) and
        chkGetBitsMsb("\2#10101011;\2#10100000;",                                     1, 3,  5,                 2#01011, 2, 0) and
        chkGetBitsMsb("\2#01010101;\2#10101000;",                                     1, 4,  5,                 2#01011, 2, 1) and
        chkGetBitsMsb("\2#10110101;\2#11011000;",                                     1, 4,  5,                 2#01011, 2, 1) and
        chkGetBitsMsb("\2#01011010;\2#11010110;",                                     1, 5,  5,                 2#01011, 2, 2) and
        chkGetBitsMsb("\2#10011010;\2#11100110;",                                     1, 5,  5,                 2#01011, 2, 2) and
        chkGetBitsMsb("\2#01001101;\2#01101001;\2#10000000;",                         1, 6,  5,                 2#01011, 2, 3) and
        chkGetBitsMsb("\2#11010101;\2#01111010;\2#10000000;",                         1, 6,  5,                 2#01011, 2, 3) and
        chkGetBitsMsb("\2#01101010;\2#10110110;\2#10100000;",                         1, 7,  5,                 2#01011, 2, 4) and
        chkGetBitsMsb("\2#10110010;\2#10111011;\2#00100000;",                         1, 7,  5,                 2#01011, 2, 4) and
        chkGetBitsMsb("\2#10011000;",                                                 1, 0,  5,                 2#10011, 1, 5) and
        chkGetBitsMsb("\2#01001100;",                                                 1, 1,  5,                 2#10011, 1, 6) and
        chkGetBitsMsb("\2#11001110;",                                                 1, 1,  5,                 2#10011, 1, 6) and
        chkGetBitsMsb("\2#01100110;\2#10000000;",                                     1, 2,  5,                 2#10011, 1, 7) and
        chkGetBitsMsb("\2#10100111;\2#00000000;",                                     1, 2,  5,                 2#10011, 1, 7) and
        chkGetBitsMsb("\2#01010011;\2#01000000;",                                     1, 3,  5,                 2#10011, 2, 0) and
        chkGetBitsMsb("\2#10110011;\2#10100000;",                                     1, 3,  5,                 2#10011, 2, 0) and
        chkGetBitsMsb("\2#01011001;\2#10101000;",                                     1, 4,  5,                 2#10011, 2, 1) and
        chkGetBitsMsb("\2#10111001;\2#11011000;",                                     1, 4,  5,                 2#10011, 2, 1) and
        chkGetBitsMsb("\2#01011100;\2#11010110;",                                     1, 5,  5,                 2#10011, 2, 2) and
        chkGetBitsMsb("\2#10011100;\2#11100110;",                                     1, 5,  5,                 2#10011, 2, 2) and
        chkGetBitsMsb("\2#01001110;\2#01101001;\2#10000000;",                         1, 6,  5,                 2#10011, 2, 3) and
        chkGetBitsMsb("\2#11010110;\2#01111010;\2#10000000;",                         1, 6,  5,                 2#10011, 2, 3) and
        chkGetBitsMsb("\2#01101011;\2#00110110;\2#10100000;",                         1, 7,  5,                 2#10011, 2, 4) and
        chkGetBitsMsb("\2#10110011;\2#00111011;\2#00100000;",                         1, 7,  5,                 2#10011, 2, 4) and
        chkGetBitsMsb("\2#01001100;",                                                 1, 0,  6,                2#010011, 1, 6) and
        chkGetBitsMsb("\2#00100110;",                                                 1, 1,  6,                2#010011, 1, 7) and
        chkGetBitsMsb("\2#10100111;",                                                 1, 1,  6,                2#010011, 1, 7) and
        chkGetBitsMsb("\2#01010011;\2#01000000;",                                     1, 2,  6,                2#010011, 2, 0) and
        chkGetBitsMsb("\2#10010011;\2#10000000;",                                     1, 2,  6,                2#010011, 2, 0) and
        chkGetBitsMsb("\2#01001001;\2#10100000;",                                     1, 3,  6,                2#010011, 2, 1) and
        chkGetBitsMsb("\2#10101001;\2#11010000;",                                     1, 3,  6,                2#010011, 2, 1) and
        chkGetBitsMsb("\2#01010100;\2#11010100;",                                     1, 4,  6,                2#010011, 2, 2) and
        chkGetBitsMsb("\2#10110100;\2#11101100;",                                     1, 4,  6,                2#010011, 2, 2) and
        chkGetBitsMsb("\2#01011010;\2#01101011;",                                     1, 5,  6,                2#010011, 2, 3) and
        chkGetBitsMsb("\2#10011010;\2#01110011;",                                     1, 5,  6,                2#010011, 2, 3) and
        chkGetBitsMsb("\2#01001101;\2#00110100;\2#11000000;",                         1, 6,  6,                2#010011, 2, 4) and
        chkGetBitsMsb("\2#11010101;\2#00111101;\2#01000000;",                         1, 6,  6,                2#010011, 2, 4) and
        chkGetBitsMsb("\2#01101010;\2#10011011;\2#01010000;",                         1, 7,  6,                2#010011, 2, 5) and
        chkGetBitsMsb("\2#10110010;\2#10011101;\2#10010000;",                         1, 7,  6,                2#010011, 2, 5) and
        chkGetBitsMsb("\2#11010100;",                                                 1, 0,  6,                2#110101, 1, 6) and
        chkGetBitsMsb("\2#01101010;",                                                 1, 1,  6,                2#110101, 1, 7) and
        chkGetBitsMsb("\2#11101011;",                                                 1, 1,  6,                2#110101, 1, 7) and
        chkGetBitsMsb("\2#01110101;\2#01000000;",                                     1, 2,  6,                2#110101, 2, 0) and
        chkGetBitsMsb("\2#10110101;\2#10000000;",                                     1, 2,  6,                2#110101, 2, 0) and
        chkGetBitsMsb("\2#01011010;\2#10100000;",                                     1, 3,  6,                2#110101, 2, 1) and
        chkGetBitsMsb("\2#10111010;\2#11010000;",                                     1, 3,  6,                2#110101, 2, 1) and
        chkGetBitsMsb("\2#01011101;\2#01010100;",                                     1, 4,  6,                2#110101, 2, 2) and
        chkGetBitsMsb("\2#10111101;\2#01101100;",                                     1, 4,  6,                2#110101, 2, 2) and
        chkGetBitsMsb("\2#01011110;\2#10101011;",                                     1, 5,  6,                2#110101, 2, 3) and
        chkGetBitsMsb("\2#10011110;\2#10110011;",                                     1, 5,  6,                2#110101, 2, 3) and
        chkGetBitsMsb("\2#01001111;\2#01010100;\2#11000000;",                         1, 6,  6,                2#110101, 2, 4) and
        chkGetBitsMsb("\2#11010111;\2#01011101;\2#01000000;",                         1, 6,  6,                2#110101, 2, 4) and
        chkGetBitsMsb("\2#01101011;\2#10101011;\2#01010000;",                         1, 7,  6,                2#110101, 2, 5) and
        chkGetBitsMsb("\2#10110011;\2#10101101;\2#10010000;",                         1, 7,  6,                2#110101, 2, 5) and
        chkGetBitsMsb("\2#01101010;",                                                 1, 0,  7,               2#0110101, 1, 7) and
        chkGetBitsMsb("\2#00110101;\2#00000000;",                                     1, 1,  7,               2#0110101, 2, 0) and
        chkGetBitsMsb("\2#10110101;\2#10000000;",                                     1, 1,  7,               2#0110101, 2, 0) and
        chkGetBitsMsb("\2#01011010;\2#10100000;",                                     1, 2,  7,               2#0110101, 2, 1) and
        chkGetBitsMsb("\2#10011010;\2#11000000;",                                     1, 2,  7,               2#0110101, 2, 1) and
        chkGetBitsMsb("\2#01001101;\2#01010000;",                                     1, 3,  7,               2#0110101, 2, 2) and
        chkGetBitsMsb("\2#10101101;\2#01101000;",                                     1, 3,  7,               2#0110101, 2, 2) and
        chkGetBitsMsb("\2#01010110;\2#10101010;",                                     1, 4,  7,               2#0110101, 2, 3) and
        chkGetBitsMsb("\2#10110110;\2#10110110;",                                     1, 4,  7,               2#0110101, 2, 3) and
        chkGetBitsMsb("\2#01011011;\2#01010101;\2#10000000;",                         1, 5,  7,               2#0110101, 2, 4) and
        chkGetBitsMsb("\2#10011011;\2#01011001;\2#10000000;",                         1, 5,  7,               2#0110101, 2, 4) and
        chkGetBitsMsb("\2#01001101;\2#10101010;\2#01100000;",                         1, 6,  7,               2#0110101, 2, 5) and
        chkGetBitsMsb("\2#11010101;\2#10101110;\2#10100000;",                         1, 6,  7,               2#0110101, 2, 5) and
        chkGetBitsMsb("\2#01101010;\2#11010101;\2#10101000;",                         1, 7,  7,               2#0110101, 2, 6) and
        chkGetBitsMsb("\2#10110010;\2#11010110;\2#11001000;",                         1, 7,  7,               2#0110101, 2, 6) and
        chkGetBitsMsb("\2#10110010;",                                                 1, 0,  7,               2#1011001, 1, 7) and
        chkGetBitsMsb("\2#01011001;\2#00000000;",                                     1, 1,  7,               2#1011001, 2, 0) and
        chkGetBitsMsb("\2#11011001;\2#10000000;",                                     1, 1,  7,               2#1011001, 2, 0) and
        chkGetBitsMsb("\2#01101100;\2#10100000;",                                     1, 2,  7,               2#1011001, 2, 1) and
        chkGetBitsMsb("\2#10101100;\2#11000000;",                                     1, 2,  7,               2#1011001, 2, 1) and
        chkGetBitsMsb("\2#01010110;\2#01010000;",                                     1, 3,  7,               2#1011001, 2, 2) and
        chkGetBitsMsb("\2#10110110;\2#01101000;",                                     1, 3,  7,               2#1011001, 2, 2) and
        chkGetBitsMsb("\2#01011011;\2#00101010;",                                     1, 4,  7,               2#1011001, 2, 3) and
        chkGetBitsMsb("\2#10111011;\2#00110110;",                                     1, 4,  7,               2#1011001, 2, 3) and
        chkGetBitsMsb("\2#01011101;\2#10010101;\2#10000000;",                         1, 5,  7,               2#1011001, 2, 4) and
        chkGetBitsMsb("\2#10011101;\2#10011001;\2#10000000;",                         1, 5,  7,               2#1011001, 2, 4) and
        chkGetBitsMsb("\2#01001110;\2#11001010;\2#01100000;",                         1, 6,  7,               2#1011001, 2, 5) and
        chkGetBitsMsb("\2#11010110;\2#11001110;\2#10100000;",                         1, 6,  7,               2#1011001, 2, 5) and
        chkGetBitsMsb("\2#01101011;\2#01100101;\2#10101000;",                         1, 7,  7,               2#1011001, 2, 6) and
        chkGetBitsMsb("\2#10110011;\2#01100110;\2#11001000;",                         1, 7,  7,               2#1011001, 2, 6) and
        chkGetBitsMsb("\2#01011001;",                                                 1, 0,  8,              2#01011001, 2, 0) and
        chkGetBitsMsb("\2#00101100;\2#10000000;",                                     1, 1,  8,              2#01011001, 2, 1) and
        chkGetBitsMsb("\2#10101100;\2#11000000;",                                     1, 1,  8,              2#01011001, 2, 1) and
        chkGetBitsMsb("\2#01010110;\2#01010000;",                                     1, 2,  8,              2#01011001, 2, 2) and
        chkGetBitsMsb("\2#10010110;\2#01100000;",                                     1, 2,  8,              2#01011001, 2, 2) and
        chkGetBitsMsb("\2#01001011;\2#00101000;",                                     1, 3,  8,              2#01011001, 2, 3) and
        chkGetBitsMsb("\2#10101011;\2#00110100;",                                     1, 3,  8,              2#01011001, 2, 3) and
        chkGetBitsMsb("\2#01010101;\2#10010101;",                                     1, 4,  8,              2#01011001, 2, 4) and
        chkGetBitsMsb("\2#10110101;\2#10011011;",                                     1, 4,  8,              2#01011001, 2, 4) and
        chkGetBitsMsb("\2#01011010;\2#11001010;\2#11000000;",                         1, 5,  8,              2#01011001, 2, 5) and
        chkGetBitsMsb("\2#10011010;\2#11001100;\2#11000000;",                         1, 5,  8,              2#01011001, 2, 5) and
        chkGetBitsMsb("\2#01001101;\2#01100101;\2#00110000;",                         1, 6,  8,              2#01011001, 2, 6) and
        chkGetBitsMsb("\2#11010101;\2#01100111;\2#01010000;",                         1, 6,  8,              2#01011001, 2, 6) and
        chkGetBitsMsb("\2#01101010;\2#10110010;\2#11010100;",                         1, 7,  8,              2#01011001, 2, 7) and
        chkGetBitsMsb("\2#10110010;\2#10110011;\2#01100100;",                         1, 7,  8,              2#01011001, 2, 7) and
        chkGetBitsMsb("\2#10100011;",                                                 1, 0,  8,              2#10100011, 2, 0) and
        chkGetBitsMsb("\2#01010001;\2#10000000;",                                     1, 1,  8,              2#10100011, 2, 1) and
        chkGetBitsMsb("\2#11010001;\2#11000000;",                                     1, 1,  8,              2#10100011, 2, 1) and
        chkGetBitsMsb("\2#01101000;\2#11010000;",                                     1, 2,  8,              2#10100011, 2, 2) and
        chkGetBitsMsb("\2#10101000;\2#11100000;",                                     1, 2,  8,              2#10100011, 2, 2) and
        chkGetBitsMsb("\2#01010100;\2#01101000;",                                     1, 3,  8,              2#10100011, 2, 3) and
        chkGetBitsMsb("\2#10110100;\2#01110100;",                                     1, 3,  8,              2#10100011, 2, 3) and
        chkGetBitsMsb("\2#01011010;\2#00110101;",                                     1, 4,  8,              2#10100011, 2, 4) and
        chkGetBitsMsb("\2#10111010;\2#00111011;",                                     1, 4,  8,              2#10100011, 2, 4) and
        chkGetBitsMsb("\2#01011101;\2#00011010;\2#11000000;",                         1, 5,  8,              2#10100011, 2, 5) and
        chkGetBitsMsb("\2#10011101;\2#00011100;\2#11000000;",                         1, 5,  8,              2#10100011, 2, 5) and
        chkGetBitsMsb("\2#01001110;\2#10001101;\2#00110000;",                         1, 6,  8,              2#10100011, 2, 6) and
        chkGetBitsMsb("\2#11010110;\2#10001111;\2#01010000;",                         1, 6,  8,              2#10100011, 2, 6) and
        chkGetBitsMsb("\2#01101011;\2#01000110;\2#11010100;",                         1, 7,  8,              2#10100011, 2, 7) and
        chkGetBitsMsb("\2#10110011;\2#01000111;\2#01100100;",                         1, 7,  8,              2#10100011, 2, 7) and
        chkGetBitsMsb("\2#01010001;\2#10000000;",                                     1, 0,  9,             2#010100011, 2, 1) and
        chkGetBitsMsb("\2#00101000;\2#11000000;",                                     1, 1,  9,             2#010100011, 2, 2) and
        chkGetBitsMsb("\2#10101000;\2#11100000;",                                     1, 1,  9,             2#010100011, 2, 2) and
        chkGetBitsMsb("\2#01010100;\2#01101000;",                                     1, 2,  9,             2#010100011, 2, 3) and
        chkGetBitsMsb("\2#10010100;\2#01110000;",                                     1, 2,  9,             2#010100011, 2, 3) and
        chkGetBitsMsb("\2#01001010;\2#00110100;",                                     1, 3,  9,             2#010100011, 2, 4) and
        chkGetBitsMsb("\2#10101010;\2#00111010;",                                     1, 3,  9,             2#010100011, 2, 4) and
        chkGetBitsMsb("\2#01010101;\2#00011010;\2#10000000;",                         1, 4,  9,             2#010100011, 2, 5) and
        chkGetBitsMsb("\2#10110101;\2#00011101;\2#10000000;",                         1, 4,  9,             2#010100011, 2, 5) and
        chkGetBitsMsb("\2#01011010;\2#10001101;\2#01100000;",                         1, 5,  9,             2#010100011, 2, 6) and
        chkGetBitsMsb("\2#10011010;\2#10001110;\2#01100000;",                         1, 5,  9,             2#010100011, 2, 6) and
        chkGetBitsMsb("\2#01001101;\2#01000110;\2#10011000;",                         1, 6,  9,             2#010100011, 2, 7) and
        chkGetBitsMsb("\2#11010101;\2#01000111;\2#10101000;",                         1, 6,  9,             2#010100011, 2, 7) and
        chkGetBitsMsb("\2#01101010;\2#10100011;\2#01101010;",                         1, 7,  9,             2#010100011, 3, 0) and
        chkGetBitsMsb("\2#10110010;\2#10100011;\2#10110010;",                         1, 7,  9,             2#010100011, 3, 0) and
        chkGetBitsMsb("\2#11011011;\2#10000000;",                                     1, 0,  9,             2#110110111, 2, 1) and
        chkGetBitsMsb("\2#01101101;\2#11000000;",                                     1, 1,  9,             2#110110111, 2, 2) and
        chkGetBitsMsb("\2#11101101;\2#11100000;",                                     1, 1,  9,             2#110110111, 2, 2) and
        chkGetBitsMsb("\2#01110110;\2#11101000;",                                     1, 2,  9,             2#110110111, 2, 3) and
        chkGetBitsMsb("\2#10110110;\2#11110000;",                                     1, 2,  9,             2#110110111, 2, 3) and
        chkGetBitsMsb("\2#01011011;\2#01110100;",                                     1, 3,  9,             2#110110111, 2, 4) and
        chkGetBitsMsb("\2#10111011;\2#01111010;",                                     1, 3,  9,             2#110110111, 2, 4) and
        chkGetBitsMsb("\2#01011101;\2#10111010;\2#10000000;",                         1, 4,  9,             2#110110111, 2, 5) and
        chkGetBitsMsb("\2#10111101;\2#10111101;\2#10000000;",                         1, 4,  9,             2#110110111, 2, 5) and
        chkGetBitsMsb("\2#01011110;\2#11011101;\2#01100000;",                         1, 5,  9,             2#110110111, 2, 6) and
        chkGetBitsMsb("\2#10011110;\2#11011110;\2#01100000;",                         1, 5,  9,             2#110110111, 2, 6) and
        chkGetBitsMsb("\2#01001111;\2#01101110;\2#10011000;",                         1, 6,  9,             2#110110111, 2, 7) and
        chkGetBitsMsb("\2#11010111;\2#01101111;\2#10101000;",                         1, 6,  9,             2#110110111, 2, 7) and
        chkGetBitsMsb("\2#01101011;\2#10110111;\2#01101010;",                         1, 7,  9,             2#110110111, 3, 0) and
        chkGetBitsMsb("\2#10110011;\2#10110111;\2#10110010;",                         1, 7,  9,             2#110110111, 3, 0) and
        chkGetBitsMsb("\2#01101101;\2#11000000;",                                     1, 0, 10,            2#0110110111, 2, 2) and
        chkGetBitsMsb("\2#00110110;\2#11100000;",                                     1, 1, 10,            2#0110110111, 2, 3) and
        chkGetBitsMsb("\2#10110110;\2#11110000;",                                     1, 1, 10,            2#0110110111, 2, 3) and
        chkGetBitsMsb("\2#01011011;\2#01110100;",                                     1, 2, 10,            2#0110110111, 2, 4) and
        chkGetBitsMsb("\2#10011011;\2#01111000;",                                     1, 2, 10,            2#0110110111, 2, 4) and
        chkGetBitsMsb("\2#01001101;\2#10111010;",                                     1, 3, 10,            2#0110110111, 2, 5) and
        chkGetBitsMsb("\2#10101101;\2#10111101;",                                     1, 3, 10,            2#0110110111, 2, 5) and
        chkGetBitsMsb("\2#01010110;\2#11011101;\2#01000000;",                         1, 4, 10,            2#0110110111, 2, 6) and
        chkGetBitsMsb("\2#10110110;\2#11011110;\2#11000000;",                         1, 4, 10,            2#0110110111, 2, 6) and
        chkGetBitsMsb("\2#01011011;\2#01101110;\2#10110000;",                         1, 5, 10,            2#0110110111, 2, 7) and
        chkGetBitsMsb("\2#10011011;\2#01101111;\2#00110000;",                         1, 5, 10,            2#0110110111, 2, 7) and
        chkGetBitsMsb("\2#01001101;\2#10110111;\2#01001100;",                         1, 6, 10,            2#0110110111, 3, 0) and
        chkGetBitsMsb("\2#11010101;\2#10110111;\2#11010100;",                         1, 6, 10,            2#0110110111, 3, 0) and
        chkGetBitsMsb("\2#01101010;\2#11011011;\2#10110101;",                         1, 7, 10,            2#0110110111, 3, 1) and
        chkGetBitsMsb("\2#10110010;\2#11011011;\2#11011001;",                         1, 7, 10,            2#0110110111, 3, 1) and
        chkGetBitsMsb("\2#11000100;\2#11000000;",                                     1, 0, 10,            2#1100010011, 2, 2) and
        chkGetBitsMsb("\2#01100010;\2#01100000;",                                     1, 1, 10,            2#1100010011, 2, 3) and
        chkGetBitsMsb("\2#11100010;\2#01110000;",                                     1, 1, 10,            2#1100010011, 2, 3) and
        chkGetBitsMsb("\2#01110001;\2#00110100;",                                     1, 2, 10,            2#1100010011, 2, 4) and
        chkGetBitsMsb("\2#10110001;\2#00111000;",                                     1, 2, 10,            2#1100010011, 2, 4) and
        chkGetBitsMsb("\2#01011000;\2#10011010;",                                     1, 3, 10,            2#1100010011, 2, 5) and
        chkGetBitsMsb("\2#10111000;\2#10011101;",                                     1, 3, 10,            2#1100010011, 2, 5) and
        chkGetBitsMsb("\2#01011100;\2#01001101;\2#01000000;",                         1, 4, 10,            2#1100010011, 2, 6) and
        chkGetBitsMsb("\2#10111100;\2#01001110;\2#11000000;",                         1, 4, 10,            2#1100010011, 2, 6) and
        chkGetBitsMsb("\2#01011110;\2#00100110;\2#10110000;",                         1, 5, 10,            2#1100010011, 2, 7) and
        chkGetBitsMsb("\2#10011110;\2#00100111;\2#00110000;",                         1, 5, 10,            2#1100010011, 2, 7) and
        chkGetBitsMsb("\2#01001111;\2#00010011;\2#01001100;",                         1, 6, 10,            2#1100010011, 3, 0) and
        chkGetBitsMsb("\2#11010111;\2#00010011;\2#11010100;",                         1, 6, 10,            2#1100010011, 3, 0) and
        chkGetBitsMsb("\2#01101011;\2#10001001;\2#10110101;",                         1, 7, 10,            2#1100010011, 3, 1) and
        chkGetBitsMsb("\2#10110011;\2#10001001;\2#11011001;",                         1, 7, 10,            2#1100010011, 3, 1) and
        chkGetBitsMsb("\2#01100010;\2#01100000;",                                     1, 0, 11,           2#01100010011, 2, 3) and
        chkGetBitsMsb("\2#00110001;\2#00110000;",                                     1, 1, 11,           2#01100010011, 2, 4) and
        chkGetBitsMsb("\2#10110001;\2#00111000;",                                     1, 1, 11,           2#01100010011, 2, 4) and
        chkGetBitsMsb("\2#01011000;\2#10011010;",                                     1, 2, 11,           2#01100010011, 2, 5) and
        chkGetBitsMsb("\2#10011000;\2#10011100;",                                     1, 2, 11,           2#01100010011, 2, 5) and
        chkGetBitsMsb("\2#01001100;\2#01001101;\2#00000000;",                         1, 3, 11,           2#01100010011, 2, 6) and
        chkGetBitsMsb("\2#10101100;\2#01001110;\2#10000000;",                         1, 3, 11,           2#01100010011, 2, 6) and
        chkGetBitsMsb("\2#01010110;\2#00100110;\2#10100000;",                         1, 4, 11,           2#01100010011, 2, 7) and
        chkGetBitsMsb("\2#10110110;\2#00100111;\2#01100000;",                         1, 4, 11,           2#01100010011, 2, 7) and
        chkGetBitsMsb("\2#01011011;\2#00010011;\2#01011000;",                         1, 5, 11,           2#01100010011, 3, 0) and
        chkGetBitsMsb("\2#10011011;\2#00010011;\2#10011000;",                         1, 5, 11,           2#01100010011, 3, 0) and
        chkGetBitsMsb("\2#01001101;\2#10001001;\2#10100110;",                         1, 6, 11,           2#01100010011, 3, 1) and
        chkGetBitsMsb("\2#11010101;\2#10001001;\2#11101010;",                         1, 6, 11,           2#01100010011, 3, 1) and
        chkGetBitsMsb("\2#01101010;\2#11000100;\2#11011010;\2#10000000;",             1, 7, 11,           2#01100010011, 3, 2) and
        chkGetBitsMsb("\2#10110010;\2#11000100;\2#11101100;\2#10000000;",             1, 7, 11,           2#01100010011, 3, 2) and
        chkGetBitsMsb("\2#10110100;\2#11100000;",                                     1, 0, 11,           2#10110100111, 2, 3) and
        chkGetBitsMsb("\2#01011010;\2#01110000;",                                     1, 1, 11,           2#10110100111, 2, 4) and
        chkGetBitsMsb("\2#11011010;\2#01111000;",                                     1, 1, 11,           2#10110100111, 2, 4) and
        chkGetBitsMsb("\2#01101101;\2#00111010;",                                     1, 2, 11,           2#10110100111, 2, 5) and
        chkGetBitsMsb("\2#10101101;\2#00111100;",                                     1, 2, 11,           2#10110100111, 2, 5) and
        chkGetBitsMsb("\2#01010110;\2#10011101;\2#00000000;",                         1, 3, 11,           2#10110100111, 2, 6) and
        chkGetBitsMsb("\2#10110110;\2#10011110;\2#10000000;",                         1, 3, 11,           2#10110100111, 2, 6) and
        chkGetBitsMsb("\2#01011011;\2#01001110;\2#10100000;",                         1, 4, 11,           2#10110100111, 2, 7) and
        chkGetBitsMsb("\2#10111011;\2#01001111;\2#01100000;",                         1, 4, 11,           2#10110100111, 2, 7) and
        chkGetBitsMsb("\2#01011101;\2#10100111;\2#01011000;",                         1, 5, 11,           2#10110100111, 3, 0) and
        chkGetBitsMsb("\2#10011101;\2#10100111;\2#10011000;",                         1, 5, 11,           2#10110100111, 3, 0) and
        chkGetBitsMsb("\2#01001110;\2#11010011;\2#10100110;",                         1, 6, 11,           2#10110100111, 3, 1) and
        chkGetBitsMsb("\2#11010110;\2#11010011;\2#11101010;",                         1, 6, 11,           2#10110100111, 3, 1) and
        chkGetBitsMsb("\2#01101011;\2#01101001;\2#11011010;\2#10000000;",             1, 7, 11,           2#10110100111, 3, 2) and
        chkGetBitsMsb("\2#10110011;\2#01101001;\2#11101100;\2#10000000;",             1, 7, 11,           2#10110100111, 3, 2) and
        chkGetBitsMsb("\2#01011010;\2#01110000;",                                     1, 0, 12,          2#010110100111, 2, 4) and
        chkGetBitsMsb("\2#00101101;\2#00111000;",                                     1, 1, 12,          2#010110100111, 2, 5) and
        chkGetBitsMsb("\2#10101101;\2#00111100;",                                     1, 1, 12,          2#010110100111, 2, 5) and
        chkGetBitsMsb("\2#01010110;\2#10011101;",                                     1, 2, 12,          2#010110100111, 2, 6) and
        chkGetBitsMsb("\2#10010110;\2#10011110;",                                     1, 2, 12,          2#010110100111, 2, 6) and
        chkGetBitsMsb("\2#01001011;\2#01001110;\2#10000000;",                         1, 3, 12,          2#010110100111, 2, 7) and
        chkGetBitsMsb("\2#10101011;\2#01001111;\2#01000000;",                         1, 3, 12,          2#010110100111, 2, 7) and
        chkGetBitsMsb("\2#01010101;\2#10100111;\2#01010000;",                         1, 4, 12,          2#010110100111, 3, 0) and
        chkGetBitsMsb("\2#10110101;\2#10100111;\2#10110000;",                         1, 4, 12,          2#010110100111, 3, 0) and
        chkGetBitsMsb("\2#01011010;\2#11010011;\2#10101100;",                         1, 5, 12,          2#010110100111, 3, 1) and
        chkGetBitsMsb("\2#10011010;\2#11010011;\2#11001100;",                         1, 5, 12,          2#010110100111, 3, 1) and
        chkGetBitsMsb("\2#01001101;\2#01101001;\2#11010011;",                         1, 6, 12,          2#010110100111, 3, 2) and
        chkGetBitsMsb("\2#11010101;\2#01101001;\2#11110101;",                         1, 6, 12,          2#010110100111, 3, 2) and
        chkGetBitsMsb("\2#01101010;\2#10110100;\2#11101101;\2#01000000;",             1, 7, 12,          2#010110100111, 3, 3) and
        chkGetBitsMsb("\2#10110010;\2#10110100;\2#11110110;\2#01000000;",             1, 7, 12,          2#010110100111, 3, 3) and
        chkGetBitsMsb("\2#10111000;\2#11010000;",                                     1, 0, 12,          2#101110001101, 2, 4) and
        chkGetBitsMsb("\2#01011100;\2#01101000;",                                     1, 1, 12,          2#101110001101, 2, 5) and
        chkGetBitsMsb("\2#11011100;\2#01101100;",                                     1, 1, 12,          2#101110001101, 2, 5) and
        chkGetBitsMsb("\2#01101110;\2#00110101;",                                     1, 2, 12,          2#101110001101, 2, 6) and
        chkGetBitsMsb("\2#10101110;\2#00110110;",                                     1, 2, 12,          2#101110001101, 2, 6) and
        chkGetBitsMsb("\2#01010111;\2#00011010;\2#10000000;",                         1, 3, 12,          2#101110001101, 2, 7) and
        chkGetBitsMsb("\2#10110111;\2#00011011;\2#01000000;",                         1, 3, 12,          2#101110001101, 2, 7) and
        chkGetBitsMsb("\2#01011011;\2#10001101;\2#01010000;",                         1, 4, 12,          2#101110001101, 3, 0) and
        chkGetBitsMsb("\2#10111011;\2#10001101;\2#10110000;",                         1, 4, 12,          2#101110001101, 3, 0) and
        chkGetBitsMsb("\2#01011101;\2#11000110;\2#10101100;",                         1, 5, 12,          2#101110001101, 3, 1) and
        chkGetBitsMsb("\2#10011101;\2#11000110;\2#11001100;",                         1, 5, 12,          2#101110001101, 3, 1) and
        chkGetBitsMsb("\2#01001110;\2#11100011;\2#01010011;",                         1, 6, 12,          2#101110001101, 3, 2) and
        chkGetBitsMsb("\2#11010110;\2#11100011;\2#01110101;",                         1, 6, 12,          2#101110001101, 3, 2) and
        chkGetBitsMsb("\2#01101011;\2#01110001;\2#10101101;\2#01000000;",             1, 7, 12,          2#101110001101, 3, 3) and
        chkGetBitsMsb("\2#10110011;\2#01110001;\2#10110110;\2#01000000;",             1, 7, 12,          2#101110001101, 3, 3) and
        chkGetBitsMsb("\2#01011100;\2#01101000;",                                     1, 0, 13,         2#0101110001101, 2, 5) and
        chkGetBitsMsb("\2#00101110;\2#00110100;",                                     1, 1, 13,         2#0101110001101, 2, 6) and
        chkGetBitsMsb("\2#10101110;\2#00110110;",                                     1, 1, 13,         2#0101110001101, 2, 6) and
        chkGetBitsMsb("\2#01010111;\2#00011010;\2#10000000;",                         1, 2, 13,         2#0101110001101, 2, 7) and
        chkGetBitsMsb("\2#10010111;\2#00011011;\2#00000000;",                         1, 2, 13,         2#0101110001101, 2, 7) and
        chkGetBitsMsb("\2#01001011;\2#10001101;\2#01000000;",                         1, 3, 13,         2#0101110001101, 3, 0) and
        chkGetBitsMsb("\2#10101011;\2#10001101;\2#10100000;",                         1, 3, 13,         2#0101110001101, 3, 0) and
        chkGetBitsMsb("\2#01010101;\2#11000110;\2#10101000;",                         1, 4, 13,         2#0101110001101, 3, 1) and
        chkGetBitsMsb("\2#10110101;\2#11000110;\2#11011000;",                         1, 4, 13,         2#0101110001101, 3, 1) and
        chkGetBitsMsb("\2#01011010;\2#11100011;\2#01010110;",                         1, 5, 13,         2#0101110001101, 3, 2) and
        chkGetBitsMsb("\2#10011010;\2#11100011;\2#01100110;",                         1, 5, 13,         2#0101110001101, 3, 2) and
        chkGetBitsMsb("\2#01001101;\2#01110001;\2#10101001;\2#10000000;",             1, 6, 13,         2#0101110001101, 3, 3) and
        chkGetBitsMsb("\2#11010101;\2#01110001;\2#10111010;\2#10000000;",             1, 6, 13,         2#0101110001101, 3, 3) and
        chkGetBitsMsb("\2#01101010;\2#10111000;\2#11010110;\2#10100000;",             1, 7, 13,         2#0101110001101, 3, 4) and
        chkGetBitsMsb("\2#10110010;\2#10111000;\2#11011011;\2#00100000;",             1, 7, 13,         2#0101110001101, 3, 4) and
        chkGetBitsMsb("\2#11011001;\2#10111000;",                                     1, 0, 13,         2#1101100110111, 2, 5) and
        chkGetBitsMsb("\2#01101100;\2#11011100;",                                     1, 1, 13,         2#1101100110111, 2, 6) and
        chkGetBitsMsb("\2#11101100;\2#11011110;",                                     1, 1, 13,         2#1101100110111, 2, 6) and
        chkGetBitsMsb("\2#01110110;\2#01101110;\2#10000000;",                         1, 2, 13,         2#1101100110111, 2, 7) and
        chkGetBitsMsb("\2#10110110;\2#01101111;\2#00000000;",                         1, 2, 13,         2#1101100110111, 2, 7) and
        chkGetBitsMsb("\2#01011011;\2#00110111;\2#01000000;",                         1, 3, 13,         2#1101100110111, 3, 0) and
        chkGetBitsMsb("\2#10111011;\2#00110111;\2#10100000;",                         1, 3, 13,         2#1101100110111, 3, 0) and
        chkGetBitsMsb("\2#01011101;\2#10011011;\2#10101000;",                         1, 4, 13,         2#1101100110111, 3, 1) and
        chkGetBitsMsb("\2#10111101;\2#10011011;\2#11011000;",                         1, 4, 13,         2#1101100110111, 3, 1) and
        chkGetBitsMsb("\2#01011110;\2#11001101;\2#11010110;",                         1, 5, 13,         2#1101100110111, 3, 2) and
        chkGetBitsMsb("\2#10011110;\2#11001101;\2#11100110;",                         1, 5, 13,         2#1101100110111, 3, 2) and
        chkGetBitsMsb("\2#01001111;\2#01100110;\2#11101001;\2#10000000;",             1, 6, 13,         2#1101100110111, 3, 3) and
        chkGetBitsMsb("\2#11010111;\2#01100110;\2#11111010;\2#10000000;",             1, 6, 13,         2#1101100110111, 3, 3) and
        chkGetBitsMsb("\2#01101011;\2#10110011;\2#01110110;\2#10100000;",             1, 7, 13,         2#1101100110111, 3, 4) and
        chkGetBitsMsb("\2#10110011;\2#10110011;\2#01111011;\2#00100000;",             1, 7, 13,         2#1101100110111, 3, 4) and
        chkGetBitsMsb("\2#01101100;\2#11011100;",                                     1, 0, 14,        2#01101100110111, 2, 6) and
        chkGetBitsMsb("\2#00110110;\2#01101110;",                                     1, 1, 14,        2#01101100110111, 2, 7) and
        chkGetBitsMsb("\2#10110110;\2#01101111;",                                     1, 1, 14,        2#01101100110111, 2, 7) and
        chkGetBitsMsb("\2#01011011;\2#00110111;\2#01000000;",                         1, 2, 14,        2#01101100110111, 3, 0) and
        chkGetBitsMsb("\2#10011011;\2#00110111;\2#10000000;",                         1, 2, 14,        2#01101100110111, 3, 0) and
        chkGetBitsMsb("\2#01001101;\2#10011011;\2#10100000;",                         1, 3, 14,        2#01101100110111, 3, 1) and
        chkGetBitsMsb("\2#10101101;\2#10011011;\2#11010000;",                         1, 3, 14,        2#01101100110111, 3, 1) and
        chkGetBitsMsb("\2#01010110;\2#11001101;\2#11010100;",                         1, 4, 14,        2#01101100110111, 3, 2) and
        chkGetBitsMsb("\2#10110110;\2#11001101;\2#11101100;",                         1, 4, 14,        2#01101100110111, 3, 2) and
        chkGetBitsMsb("\2#01011011;\2#01100110;\2#11101011;",                         1, 5, 14,        2#01101100110111, 3, 3) and
        chkGetBitsMsb("\2#10011011;\2#01100110;\2#11110011;",                         1, 5, 14,        2#01101100110111, 3, 3) and
        chkGetBitsMsb("\2#01001101;\2#10110011;\2#01110100;\2#11000000;",             1, 6, 14,        2#01101100110111, 3, 4) and
        chkGetBitsMsb("\2#11010101;\2#10110011;\2#01111101;\2#01000000;",             1, 6, 14,        2#01101100110111, 3, 4) and
        chkGetBitsMsb("\2#01101010;\2#11011001;\2#10111011;\2#01010000;",             1, 7, 14,        2#01101100110111, 3, 5) and
        chkGetBitsMsb("\2#10110010;\2#11011001;\2#10111101;\2#10010000;",             1, 7, 14,        2#01101100110111, 3, 5) and
        chkGetBitsMsb("\2#10011011;\2#01010100;",                                     1, 0, 14,        2#10011011010101, 2, 6) and
        chkGetBitsMsb("\2#01001101;\2#10101010;",                                     1, 1, 14,        2#10011011010101, 2, 7) and
        chkGetBitsMsb("\2#11001101;\2#10101011;",                                     1, 1, 14,        2#10011011010101, 2, 7) and
        chkGetBitsMsb("\2#01100110;\2#11010101;\2#01000000;",                         1, 2, 14,        2#10011011010101, 3, 0) and
        chkGetBitsMsb("\2#10100110;\2#11010101;\2#10000000;",                         1, 2, 14,        2#10011011010101, 3, 0) and
        chkGetBitsMsb("\2#01010011;\2#01101010;\2#10100000;",                         1, 3, 14,        2#10011011010101, 3, 1) and
        chkGetBitsMsb("\2#10110011;\2#01101010;\2#11010000;",                         1, 3, 14,        2#10011011010101, 3, 1) and
        chkGetBitsMsb("\2#01011001;\2#10110101;\2#01010100;",                         1, 4, 14,        2#10011011010101, 3, 2) and
        chkGetBitsMsb("\2#10111001;\2#10110101;\2#01101100;",                         1, 4, 14,        2#10011011010101, 3, 2) and
        chkGetBitsMsb("\2#01011100;\2#11011010;\2#10101011;",                         1, 5, 14,        2#10011011010101, 3, 3) and
        chkGetBitsMsb("\2#10011100;\2#11011010;\2#10110011;",                         1, 5, 14,        2#10011011010101, 3, 3) and
        chkGetBitsMsb("\2#01001110;\2#01101101;\2#01010100;\2#11000000;",             1, 6, 14,        2#10011011010101, 3, 4) and
        chkGetBitsMsb("\2#11010110;\2#01101101;\2#01011101;\2#01000000;",             1, 6, 14,        2#10011011010101, 3, 4) and
        chkGetBitsMsb("\2#01101011;\2#00110110;\2#10101011;\2#01010000;",             1, 7, 14,        2#10011011010101, 3, 5) and
        chkGetBitsMsb("\2#10110011;\2#00110110;\2#10101101;\2#10010000;",             1, 7, 14,        2#10011011010101, 3, 5) and
        chkGetBitsMsb("\2#01001101;\2#10101010;",                                     1, 0, 15,       2#010011011010101, 2, 7) and
        chkGetBitsMsb("\2#00100110;\2#11010101;\2#00000000;",                         1, 1, 15,       2#010011011010101, 3, 0) and
        chkGetBitsMsb("\2#10100110;\2#11010101;\2#10000000;",                         1, 1, 15,       2#010011011010101, 3, 0) and
        chkGetBitsMsb("\2#01010011;\2#01101010;\2#10100000;",                         1, 2, 15,       2#010011011010101, 3, 1) and
        chkGetBitsMsb("\2#10010011;\2#01101010;\2#11000000;",                         1, 2, 15,       2#010011011010101, 3, 1) and
        chkGetBitsMsb("\2#01001001;\2#10110101;\2#01010000;",                         1, 3, 15,       2#010011011010101, 3, 2) and
        chkGetBitsMsb("\2#10101001;\2#10110101;\2#01101000;",                         1, 3, 15,       2#010011011010101, 3, 2) and
        chkGetBitsMsb("\2#01010100;\2#11011010;\2#10101010;",                         1, 4, 15,       2#010011011010101, 3, 3) and
        chkGetBitsMsb("\2#10110100;\2#11011010;\2#10110110;",                         1, 4, 15,       2#010011011010101, 3, 3) and
        chkGetBitsMsb("\2#01011010;\2#01101101;\2#01010101;\2#10000000;",             1, 5, 15,       2#010011011010101, 3, 4) and
        chkGetBitsMsb("\2#10011010;\2#01101101;\2#01011001;\2#10000000;",             1, 5, 15,       2#010011011010101, 3, 4) and
        chkGetBitsMsb("\2#01001101;\2#00110110;\2#10101010;\2#01100000;",             1, 6, 15,       2#010011011010101, 3, 5) and
        chkGetBitsMsb("\2#11010101;\2#00110110;\2#10101110;\2#10100000;",             1, 6, 15,       2#010011011010101, 3, 5) and
        chkGetBitsMsb("\2#01101010;\2#10011011;\2#01010101;\2#10101000;",             1, 7, 15,       2#010011011010101, 3, 6) and
        chkGetBitsMsb("\2#10110010;\2#10011011;\2#01010110;\2#11001000;",             1, 7, 15,       2#010011011010101, 3, 6) and
        chkGetBitsMsb("\2#10010111;\2#10110010;",                                     1, 0, 15,       2#100101111011001, 2, 7) and
        chkGetBitsMsb("\2#01001011;\2#11011001;\2#00000000;",                         1, 1, 15,       2#100101111011001, 3, 0) and
        chkGetBitsMsb("\2#11001011;\2#11011001;\2#10000000;",                         1, 1, 15,       2#100101111011001, 3, 0) and
        chkGetBitsMsb("\2#01100101;\2#11101100;\2#10100000;",                         1, 2, 15,       2#100101111011001, 3, 1) and
        chkGetBitsMsb("\2#10100101;\2#11101100;\2#11000000;",                         1, 2, 15,       2#100101111011001, 3, 1) and
        chkGetBitsMsb("\2#01010010;\2#11110110;\2#01010000;",                         1, 3, 15,       2#100101111011001, 3, 2) and
        chkGetBitsMsb("\2#10110010;\2#11110110;\2#01101000;",                         1, 3, 15,       2#100101111011001, 3, 2) and
        chkGetBitsMsb("\2#01011001;\2#01111011;\2#00101010;",                         1, 4, 15,       2#100101111011001, 3, 3) and
        chkGetBitsMsb("\2#10111001;\2#01111011;\2#00110110;",                         1, 4, 15,       2#100101111011001, 3, 3) and
        chkGetBitsMsb("\2#01011100;\2#10111101;\2#10010101;\2#10000000;",             1, 5, 15,       2#100101111011001, 3, 4) and
        chkGetBitsMsb("\2#10011100;\2#10111101;\2#10011001;\2#10000000;",             1, 5, 15,       2#100101111011001, 3, 4) and
        chkGetBitsMsb("\2#01001110;\2#01011110;\2#11001010;\2#01100000;",             1, 6, 15,       2#100101111011001, 3, 5) and
        chkGetBitsMsb("\2#11010110;\2#01011110;\2#11001110;\2#10100000;",             1, 6, 15,       2#100101111011001, 3, 5) and
        chkGetBitsMsb("\2#01101011;\2#00101111;\2#01100101;\2#10101000;",             1, 7, 15,       2#100101111011001, 3, 6) and
        chkGetBitsMsb("\2#10110011;\2#00101111;\2#01100110;\2#11001000;",             1, 7, 15,       2#100101111011001, 3, 6) and
        chkGetBitsMsb("\2#01001011;\2#11011001;",                                     1, 0, 16,      2#0100101111011001, 3, 0) and
        chkGetBitsMsb("\2#00100101;\2#11101100;\2#10000000;",                         1, 1, 16,      2#0100101111011001, 3, 1) and
        chkGetBitsMsb("\2#10100101;\2#11101100;\2#11000000;",                         1, 1, 16,      2#0100101111011001, 3, 1) and
        chkGetBitsMsb("\2#01010010;\2#11110110;\2#01010000;",                         1, 2, 16,      2#0100101111011001, 3, 2) and
        chkGetBitsMsb("\2#10010010;\2#11110110;\2#01100000;",                         1, 2, 16,      2#0100101111011001, 3, 2) and
        chkGetBitsMsb("\2#01001001;\2#01111011;\2#00101000;",                         1, 3, 16,      2#0100101111011001, 3, 3) and
        chkGetBitsMsb("\2#10101001;\2#01111011;\2#00110100;",                         1, 3, 16,      2#0100101111011001, 3, 3) and
        chkGetBitsMsb("\2#01010100;\2#10111101;\2#10010101;",                         1, 4, 16,      2#0100101111011001, 3, 4) and
        chkGetBitsMsb("\2#10110100;\2#10111101;\2#10011011;",                         1, 4, 16,      2#0100101111011001, 3, 4) and
        chkGetBitsMsb("\2#01011010;\2#01011110;\2#11001010;\2#11000000;",             1, 5, 16,      2#0100101111011001, 3, 5) and
        chkGetBitsMsb("\2#10011010;\2#01011110;\2#11001100;\2#11000000;",             1, 5, 16,      2#0100101111011001, 3, 5) and
        chkGetBitsMsb("\2#01001101;\2#00101111;\2#01100101;\2#00110000;",             1, 6, 16,      2#0100101111011001, 3, 6) and
        chkGetBitsMsb("\2#11010101;\2#00101111;\2#01100111;\2#01010000;",             1, 6, 16,      2#0100101111011001, 3, 6) and
        chkGetBitsMsb("\2#01101010;\2#10010111;\2#10110010;\2#11010100;",             1, 7, 16,      2#0100101111011001, 3, 7) and
        chkGetBitsMsb("\2#10110010;\2#10010111;\2#10110011;\2#01100100;",             1, 7, 16,      2#0100101111011001, 3, 7) and
        chkGetBitsMsb("\2#11011000;\2#01100111;",                                     1, 0, 16,      2#1101100001100111, 3, 0) and
        chkGetBitsMsb("\2#01101100;\2#00110011;\2#10000000;",                         1, 1, 16,      2#1101100001100111, 3, 1) and
        chkGetBitsMsb("\2#11101100;\2#00110011;\2#11000000;",                         1, 1, 16,      2#1101100001100111, 3, 1) and
        chkGetBitsMsb("\2#01110110;\2#00011001;\2#11010000;",                         1, 2, 16,      2#1101100001100111, 3, 2) and
        chkGetBitsMsb("\2#10110110;\2#00011001;\2#11100000;",                         1, 2, 16,      2#1101100001100111, 3, 2) and
        chkGetBitsMsb("\2#01011011;\2#00001100;\2#11101000;",                         1, 3, 16,      2#1101100001100111, 3, 3) and
        chkGetBitsMsb("\2#10111011;\2#00001100;\2#11110100;",                         1, 3, 16,      2#1101100001100111, 3, 3) and
        chkGetBitsMsb("\2#01011101;\2#10000110;\2#01110101;",                         1, 4, 16,      2#1101100001100111, 3, 4) and
        chkGetBitsMsb("\2#10111101;\2#10000110;\2#01111011;",                         1, 4, 16,      2#1101100001100111, 3, 4) and
        chkGetBitsMsb("\2#01011110;\2#11000011;\2#00111010;\2#11000000;",             1, 5, 16,      2#1101100001100111, 3, 5) and
        chkGetBitsMsb("\2#10011110;\2#11000011;\2#00111100;\2#11000000;",             1, 5, 16,      2#1101100001100111, 3, 5) and
        chkGetBitsMsb("\2#01001111;\2#01100001;\2#10011101;\2#00110000;",             1, 6, 16,      2#1101100001100111, 3, 6) and
        chkGetBitsMsb("\2#11010111;\2#01100001;\2#10011111;\2#01010000;",             1, 6, 16,      2#1101100001100111, 3, 6) and
        chkGetBitsMsb("\2#01101011;\2#10110000;\2#11001110;\2#11010100;",             1, 7, 16,      2#1101100001100111, 3, 7) and
        chkGetBitsMsb("\2#10110011;\2#10110000;\2#11001111;\2#01100100;",             1, 7, 16,      2#1101100001100111, 3, 7) and
        chkGetBitsMsb("\2#01101100;\2#00110011;\2#10000000;",                         1, 0, 17,     2#01101100001100111, 3, 1) and
        chkGetBitsMsb("\2#00110110;\2#00011001;\2#11000000;",                         1, 1, 17,     2#01101100001100111, 3, 2) and
        chkGetBitsMsb("\2#10110110;\2#00011001;\2#11100000;",                         1, 1, 17,     2#01101100001100111, 3, 2) and
        chkGetBitsMsb("\2#01011011;\2#00001100;\2#11101000;",                         1, 2, 17,     2#01101100001100111, 3, 3) and
        chkGetBitsMsb("\2#10011011;\2#00001100;\2#11110000;",                         1, 2, 17,     2#01101100001100111, 3, 3) and
        chkGetBitsMsb("\2#01001101;\2#10000110;\2#01110100;",                         1, 3, 17,     2#01101100001100111, 3, 4) and
        chkGetBitsMsb("\2#10101101;\2#10000110;\2#01111010;",                         1, 3, 17,     2#01101100001100111, 3, 4) and
        chkGetBitsMsb("\2#01010110;\2#11000011;\2#00111010;\2#10000000;",             1, 4, 17,     2#01101100001100111, 3, 5) and
        chkGetBitsMsb("\2#10110110;\2#11000011;\2#00111101;\2#10000000;",             1, 4, 17,     2#01101100001100111, 3, 5) and
        chkGetBitsMsb("\2#01011011;\2#01100001;\2#10011101;\2#01100000;",             1, 5, 17,     2#01101100001100111, 3, 6) and
        chkGetBitsMsb("\2#10011011;\2#01100001;\2#10011110;\2#01100000;",             1, 5, 17,     2#01101100001100111, 3, 6) and
        chkGetBitsMsb("\2#01001101;\2#10110000;\2#11001110;\2#10011000;",             1, 6, 17,     2#01101100001100111, 3, 7) and
        chkGetBitsMsb("\2#11010101;\2#10110000;\2#11001111;\2#10101000;",             1, 6, 17,     2#01101100001100111, 3, 7) and
        chkGetBitsMsb("\2#01101010;\2#11011000;\2#01100111;\2#01101010;",             1, 7, 17,     2#01101100001100111, 4, 0) and
        chkGetBitsMsb("\2#10110010;\2#11011000;\2#01100111;\2#10110010;",             1, 7, 17,     2#01101100001100111, 4, 0) and
        chkGetBitsMsb("\2#10100010;\2#11001110;\2#10000000;",                         1, 0, 17,     2#10100010110011101, 3, 1) and
        chkGetBitsMsb("\2#01010001;\2#01100111;\2#01000000;",                         1, 1, 17,     2#10100010110011101, 3, 2) and
        chkGetBitsMsb("\2#11010001;\2#01100111;\2#01100000;",                         1, 1, 17,     2#10100010110011101, 3, 2) and
        chkGetBitsMsb("\2#01101000;\2#10110011;\2#10101000;",                         1, 2, 17,     2#10100010110011101, 3, 3) and
        chkGetBitsMsb("\2#10101000;\2#10110011;\2#10110000;",                         1, 2, 17,     2#10100010110011101, 3, 3) and
        chkGetBitsMsb("\2#01010100;\2#01011001;\2#11010100;",                         1, 3, 17,     2#10100010110011101, 3, 4) and
        chkGetBitsMsb("\2#10110100;\2#01011001;\2#11011010;",                         1, 3, 17,     2#10100010110011101, 3, 4) and
        chkGetBitsMsb("\2#01011010;\2#00101100;\2#11101010;\2#10000000;",             1, 4, 17,     2#10100010110011101, 3, 5) and
        chkGetBitsMsb("\2#10111010;\2#00101100;\2#11101101;\2#10000000;",             1, 4, 17,     2#10100010110011101, 3, 5) and
        chkGetBitsMsb("\2#01011101;\2#00010110;\2#01110101;\2#01100000;",             1, 5, 17,     2#10100010110011101, 3, 6) and
        chkGetBitsMsb("\2#10011101;\2#00010110;\2#01110110;\2#01100000;",             1, 5, 17,     2#10100010110011101, 3, 6) and
        chkGetBitsMsb("\2#01001110;\2#10001011;\2#00111010;\2#10011000;",             1, 6, 17,     2#10100010110011101, 3, 7) and
        chkGetBitsMsb("\2#11010110;\2#10001011;\2#00111011;\2#10101000;",             1, 6, 17,     2#10100010110011101, 3, 7) and
        chkGetBitsMsb("\2#01101011;\2#01000101;\2#10011101;\2#01101010;",             1, 7, 17,     2#10100010110011101, 4, 0) and
        chkGetBitsMsb("\2#10110011;\2#01000101;\2#10011101;\2#10110010;",             1, 7, 17,     2#10100010110011101, 4, 0) and
        chkGetBitsMsb("\2#01010001;\2#01100111;\2#01000000;",                         1, 0, 18,    2#010100010110011101, 3, 2) and
        chkGetBitsMsb("\2#00101000;\2#10110011;\2#10100000;",                         1, 1, 18,    2#010100010110011101, 3, 3) and
        chkGetBitsMsb("\2#10101000;\2#10110011;\2#10110000;",                         1, 1, 18,    2#010100010110011101, 3, 3) and
        chkGetBitsMsb("\2#01010100;\2#01011001;\2#11010100;",                         1, 2, 18,    2#010100010110011101, 3, 4) and
        chkGetBitsMsb("\2#10010100;\2#01011001;\2#11011000;",                         1, 2, 18,    2#010100010110011101, 3, 4) and
        chkGetBitsMsb("\2#01001010;\2#00101100;\2#11101010;",                         1, 3, 18,    2#010100010110011101, 3, 5) and
        chkGetBitsMsb("\2#10101010;\2#00101100;\2#11101101;",                         1, 3, 18,    2#010100010110011101, 3, 5) and
        chkGetBitsMsb("\2#01010101;\2#00010110;\2#01110101;\2#01000000;",             1, 4, 18,    2#010100010110011101, 3, 6) and
        chkGetBitsMsb("\2#10110101;\2#00010110;\2#01110110;\2#11000000;",             1, 4, 18,    2#010100010110011101, 3, 6) and
        chkGetBitsMsb("\2#01011010;\2#10001011;\2#00111010;\2#10110000;",             1, 5, 18,    2#010100010110011101, 3, 7) and
        chkGetBitsMsb("\2#10011010;\2#10001011;\2#00111011;\2#00110000;",             1, 5, 18,    2#010100010110011101, 3, 7) and
        chkGetBitsMsb("\2#01001101;\2#01000101;\2#10011101;\2#01001100;",             1, 6, 18,    2#010100010110011101, 4, 0) and
        chkGetBitsMsb("\2#11010101;\2#01000101;\2#10011101;\2#11010100;",             1, 6, 18,    2#010100010110011101, 4, 0) and
        chkGetBitsMsb("\2#01101010;\2#10100010;\2#11001110;\2#10110101;",             1, 7, 18,    2#010100010110011101, 4, 1) and
        chkGetBitsMsb("\2#10110010;\2#10100010;\2#11001110;\2#11011001;",             1, 7, 18,    2#010100010110011101, 4, 1) and
        chkGetBitsMsb("\2#10100101;\2#00110111;\2#01000000;",                         1, 0, 18,    2#101001010011011101, 3, 2) and
        chkGetBitsMsb("\2#01010010;\2#10011011;\2#10100000;",                         1, 1, 18,    2#101001010011011101, 3, 3) and
        chkGetBitsMsb("\2#11010010;\2#10011011;\2#10110000;",                         1, 1, 18,    2#101001010011011101, 3, 3) and
        chkGetBitsMsb("\2#01101001;\2#01001101;\2#11010100;",                         1, 2, 18,    2#101001010011011101, 3, 4) and
        chkGetBitsMsb("\2#10101001;\2#01001101;\2#11011000;",                         1, 2, 18,    2#101001010011011101, 3, 4) and
        chkGetBitsMsb("\2#01010100;\2#10100110;\2#11101010;",                         1, 3, 18,    2#101001010011011101, 3, 5) and
        chkGetBitsMsb("\2#10110100;\2#10100110;\2#11101101;",                         1, 3, 18,    2#101001010011011101, 3, 5) and
        chkGetBitsMsb("\2#01011010;\2#01010011;\2#01110101;\2#01000000;",             1, 4, 18,    2#101001010011011101, 3, 6) and
        chkGetBitsMsb("\2#10111010;\2#01010011;\2#01110110;\2#11000000;",             1, 4, 18,    2#101001010011011101, 3, 6) and
        chkGetBitsMsb("\2#01011101;\2#00101001;\2#10111010;\2#10110000;",             1, 5, 18,    2#101001010011011101, 3, 7) and
        chkGetBitsMsb("\2#10011101;\2#00101001;\2#10111011;\2#00110000;",             1, 5, 18,    2#101001010011011101, 3, 7) and
        chkGetBitsMsb("\2#01001110;\2#10010100;\2#11011101;\2#01001100;",             1, 6, 18,    2#101001010011011101, 4, 0) and
        chkGetBitsMsb("\2#11010110;\2#10010100;\2#11011101;\2#11010100;",             1, 6, 18,    2#101001010011011101, 4, 0) and
        chkGetBitsMsb("\2#01101011;\2#01001010;\2#01101110;\2#10110101;",             1, 7, 18,    2#101001010011011101, 4, 1) and
        chkGetBitsMsb("\2#10110011;\2#01001010;\2#01101110;\2#11011001;",             1, 7, 18,    2#101001010011011101, 4, 1) and
        chkGetBitsMsb("\2#01010010;\2#10011011;\2#10100000;",                         1, 0, 19,   2#0101001010011011101, 3, 3) and
        chkGetBitsMsb("\2#00101001;\2#01001101;\2#11010000;",                         1, 1, 19,   2#0101001010011011101, 3, 4) and
        chkGetBitsMsb("\2#10101001;\2#01001101;\2#11011000;",                         1, 1, 19,   2#0101001010011011101, 3, 4) and
        chkGetBitsMsb("\2#01010100;\2#10100110;\2#11101010;",                         1, 2, 19,   2#0101001010011011101, 3, 5) and
        chkGetBitsMsb("\2#10010100;\2#10100110;\2#11101100;",                         1, 2, 19,   2#0101001010011011101, 3, 5) and
        chkGetBitsMsb("\2#01001010;\2#01010011;\2#01110101;\2#00000000;",             1, 3, 19,   2#0101001010011011101, 3, 6) and
        chkGetBitsMsb("\2#10101010;\2#01010011;\2#01110110;\2#10000000;",             1, 3, 19,   2#0101001010011011101, 3, 6) and
        chkGetBitsMsb("\2#01010101;\2#00101001;\2#10111010;\2#10100000;",             1, 4, 19,   2#0101001010011011101, 3, 7) and
        chkGetBitsMsb("\2#10110101;\2#00101001;\2#10111011;\2#01100000;",             1, 4, 19,   2#0101001010011011101, 3, 7) and
        chkGetBitsMsb("\2#01011010;\2#10010100;\2#11011101;\2#01011000;",             1, 5, 19,   2#0101001010011011101, 4, 0) and
        chkGetBitsMsb("\2#10011010;\2#10010100;\2#11011101;\2#10011000;",             1, 5, 19,   2#0101001010011011101, 4, 0) and
        chkGetBitsMsb("\2#01001101;\2#01001010;\2#01101110;\2#10100110;",             1, 6, 19,   2#0101001010011011101, 4, 1) and
        chkGetBitsMsb("\2#11010101;\2#01001010;\2#01101110;\2#11101010;",             1, 6, 19,   2#0101001010011011101, 4, 1) and
        chkGetBitsMsb("\2#01101010;\2#10100101;\2#00110111;\2#01011010;\2#10000000;", 1, 7, 19,   2#0101001010011011101, 4, 2) and
        chkGetBitsMsb("\2#10110010;\2#10100101;\2#00110111;\2#01101100;\2#10000000;", 1, 7, 19,   2#0101001010011011101, 4, 2) and
        chkGetBitsMsb("\2#11011011;\2#00111001;\2#00100000;",                         1, 0, 19,   2#1101101100111001001, 3, 3) and
        chkGetBitsMsb("\2#01101101;\2#10011100;\2#10010000;",                         1, 1, 19,   2#1101101100111001001, 3, 4) and
        chkGetBitsMsb("\2#11101101;\2#10011100;\2#10011000;",                         1, 1, 19,   2#1101101100111001001, 3, 4) and
        chkGetBitsMsb("\2#01110110;\2#11001110;\2#01001010;",                         1, 2, 19,   2#1101101100111001001, 3, 5) and
        chkGetBitsMsb("\2#10110110;\2#11001110;\2#01001100;",                         1, 2, 19,   2#1101101100111001001, 3, 5) and
        chkGetBitsMsb("\2#01011011;\2#01100111;\2#00100101;\2#00000000;",             1, 3, 19,   2#1101101100111001001, 3, 6) and
        chkGetBitsMsb("\2#10111011;\2#01100111;\2#00100110;\2#10000000;",             1, 3, 19,   2#1101101100111001001, 3, 6) and
        chkGetBitsMsb("\2#01011101;\2#10110011;\2#10010010;\2#10100000;",             1, 4, 19,   2#1101101100111001001, 3, 7) and
        chkGetBitsMsb("\2#10111101;\2#10110011;\2#10010011;\2#01100000;",             1, 4, 19,   2#1101101100111001001, 3, 7) and
        chkGetBitsMsb("\2#01011110;\2#11011001;\2#11001001;\2#01011000;",             1, 5, 19,   2#1101101100111001001, 4, 0) and
        chkGetBitsMsb("\2#10011110;\2#11011001;\2#11001001;\2#10011000;",             1, 5, 19,   2#1101101100111001001, 4, 0) and
        chkGetBitsMsb("\2#01001111;\2#01101100;\2#11100100;\2#10100110;",             1, 6, 19,   2#1101101100111001001, 4, 1) and
        chkGetBitsMsb("\2#11010111;\2#01101100;\2#11100100;\2#11101010;",             1, 6, 19,   2#1101101100111001001, 4, 1) and
        chkGetBitsMsb("\2#01101011;\2#10110110;\2#01110010;\2#01011010;\2#10000000;", 1, 7, 19,   2#1101101100111001001, 4, 2) and
        chkGetBitsMsb("\2#10110011;\2#10110110;\2#01110010;\2#01101100;\2#10000000;", 1, 7, 19,   2#1101101100111001001, 4, 2) and
        chkGetBitsMsb("\2#01101101;\2#10011100;\2#10010000;",                         1, 0, 20,  2#01101101100111001001, 3, 4) and
        chkGetBitsMsb("\2#00110110;\2#11001110;\2#01001000;",                         1, 1, 20,  2#01101101100111001001, 3, 5) and
        chkGetBitsMsb("\2#10110110;\2#11001110;\2#01001100;",                         1, 1, 20,  2#01101101100111001001, 3, 5) and
        chkGetBitsMsb("\2#01011011;\2#01100111;\2#00100101;",                         1, 2, 20,  2#01101101100111001001, 3, 6) and
        chkGetBitsMsb("\2#10011011;\2#01100111;\2#00100110;",                         1, 2, 20,  2#01101101100111001001, 3, 6) and
        chkGetBitsMsb("\2#01001101;\2#10110011;\2#10010010;\2#10000000;",             1, 3, 20,  2#01101101100111001001, 3, 7) and
        chkGetBitsMsb("\2#10101101;\2#10110011;\2#10010011;\2#01000000;",             1, 3, 20,  2#01101101100111001001, 3, 7) and
        chkGetBitsMsb("\2#01010110;\2#11011001;\2#11001001;\2#01010000;",             1, 4, 20,  2#01101101100111001001, 4, 0) and
        chkGetBitsMsb("\2#10110110;\2#11011001;\2#11001001;\2#10110000;",             1, 4, 20,  2#01101101100111001001, 4, 0) and
        chkGetBitsMsb("\2#01011011;\2#01101100;\2#11100100;\2#10101100;",             1, 5, 20,  2#01101101100111001001, 4, 1) and
        chkGetBitsMsb("\2#10011011;\2#01101100;\2#11100100;\2#11001100;",             1, 5, 20,  2#01101101100111001001, 4, 1) and
        chkGetBitsMsb("\2#01001101;\2#10110110;\2#01110010;\2#01010011;",             1, 6, 20,  2#01101101100111001001, 4, 2) and
        chkGetBitsMsb("\2#11010101;\2#10110110;\2#01110010;\2#01110101;",             1, 6, 20,  2#01101101100111001001, 4, 2) and
        chkGetBitsMsb("\2#01101010;\2#11011011;\2#00111001;\2#00101101;\2#01000000;", 1, 7, 20,  2#01101101100111001001, 4, 3) and
        chkGetBitsMsb("\2#10110010;\2#11011011;\2#00111001;\2#00110110;\2#01000000;", 1, 7, 20,  2#01101101100111001001, 4, 3) and
        chkGetBitsMsb("\2#11100111;\2#11101100;\2#10010000;",                         1, 0, 20,  2#11100111111011001001, 3, 4) and
        chkGetBitsMsb("\2#01110011;\2#11110110;\2#01001000;",                         1, 1, 20,  2#11100111111011001001, 3, 5) and
        chkGetBitsMsb("\2#11110011;\2#11110110;\2#01001100;",                         1, 1, 20,  2#11100111111011001001, 3, 5) and
        chkGetBitsMsb("\2#01111001;\2#11111011;\2#00100101;",                         1, 2, 20,  2#11100111111011001001, 3, 6) and
        chkGetBitsMsb("\2#10111001;\2#11111011;\2#00100110;",                         1, 2, 20,  2#11100111111011001001, 3, 6) and
        chkGetBitsMsb("\2#01011100;\2#11111101;\2#10010010;\2#10000000;",             1, 3, 20,  2#11100111111011001001, 3, 7) and
        chkGetBitsMsb("\2#10111100;\2#11111101;\2#10010011;\2#01000000;",             1, 3, 20,  2#11100111111011001001, 3, 7) and
        chkGetBitsMsb("\2#01011110;\2#01111110;\2#11001001;\2#01010000;",             1, 4, 20,  2#11100111111011001001, 4, 0) and
        chkGetBitsMsb("\2#10111110;\2#01111110;\2#11001001;\2#10110000;",             1, 4, 20,  2#11100111111011001001, 4, 0) and
        chkGetBitsMsb("\2#01011111;\2#00111111;\2#01100100;\2#10101100;",             1, 5, 20,  2#11100111111011001001, 4, 1) and
        chkGetBitsMsb("\2#10011111;\2#00111111;\2#01100100;\2#11001100;",             1, 5, 20,  2#11100111111011001001, 4, 1) and
        chkGetBitsMsb("\2#01001111;\2#10011111;\2#10110010;\2#01010011;",             1, 6, 20,  2#11100111111011001001, 4, 2) and
        chkGetBitsMsb("\2#11010111;\2#10011111;\2#10110010;\2#01110101;",             1, 6, 20,  2#11100111111011001001, 4, 2) and
        chkGetBitsMsb("\2#01101011;\2#11001111;\2#11011001;\2#00101101;\2#01000000;", 1, 7, 20,  2#11100111111011001001, 4, 3) and
        chkGetBitsMsb("\2#10110011;\2#11001111;\2#11011001;\2#00110110;\2#01000000;", 1, 7, 20,  2#11100111111011001001, 4, 3) and
        chkGetBitsMsb("\2#01110011;\2#11110110;\2#01001000;",                         1, 0, 21, 2#011100111111011001001, 3, 5) and
        chkGetBitsMsb("\2#00111001;\2#11111011;\2#00100100;",                         1, 1, 21, 2#011100111111011001001, 3, 6) and
        chkGetBitsMsb("\2#10111001;\2#11111011;\2#00100110;",                         1, 1, 21, 2#011100111111011001001, 3, 6) and
        chkGetBitsMsb("\2#01011100;\2#11111101;\2#10010010;\2#10000000;",             1, 2, 21, 2#011100111111011001001, 3, 7) and
        chkGetBitsMsb("\2#10011100;\2#11111101;\2#10010011;\2#00000000;",             1, 2, 21, 2#011100111111011001001, 3, 7) and
        chkGetBitsMsb("\2#01001110;\2#01111110;\2#11001001;\2#01000000;",             1, 3, 21, 2#011100111111011001001, 4, 0) and
        chkGetBitsMsb("\2#10101110;\2#01111110;\2#11001001;\2#10100000;",             1, 3, 21, 2#011100111111011001001, 4, 0) and
        chkGetBitsMsb("\2#01010111;\2#00111111;\2#01100100;\2#10101000;",             1, 4, 21, 2#011100111111011001001, 4, 1) and
        chkGetBitsMsb("\2#10110111;\2#00111111;\2#01100100;\2#11011000;",             1, 4, 21, 2#011100111111011001001, 4, 1) and
        chkGetBitsMsb("\2#01011011;\2#10011111;\2#10110010;\2#01010110;",             1, 5, 21, 2#011100111111011001001, 4, 2) and
        chkGetBitsMsb("\2#10011011;\2#10011111;\2#10110010;\2#01100110;",             1, 5, 21, 2#011100111111011001001, 4, 2) and
        chkGetBitsMsb("\2#01001101;\2#11001111;\2#11011001;\2#00101001;\2#10000000;", 1, 6, 21, 2#011100111111011001001, 4, 3) and
        chkGetBitsMsb("\2#11010101;\2#11001111;\2#11011001;\2#00111010;\2#10000000;", 1, 6, 21, 2#011100111111011001001, 4, 3) and
        chkGetBitsMsb("\2#01101010;\2#11100111;\2#11101100;\2#10010110;\2#10100000;", 1, 7, 21, 2#011100111111011001001, 4, 4) and
        chkGetBitsMsb("\2#10110010;\2#11100111;\2#11101100;\2#10011011;\2#00100000;", 1, 7, 21, 2#011100111111011001001, 4, 4) and
        chkGetBitsMsb("\2#10100001;\2#00101110;\2#00111000;",                         1, 0, 21, 2#101000010010111000111, 3, 5) and
        chkGetBitsMsb("\2#01010000;\2#10010111;\2#00011100;",                         1, 1, 21, 2#101000010010111000111, 3, 6) and
        chkGetBitsMsb("\2#11010000;\2#10010111;\2#00011110;",                         1, 1, 21, 2#101000010010111000111, 3, 6) and
        chkGetBitsMsb("\2#01101000;\2#01001011;\2#10001110;\2#10000000;",             1, 2, 21, 2#101000010010111000111, 3, 7) and
        chkGetBitsMsb("\2#10101000;\2#01001011;\2#10001111;\2#00000000;",             1, 2, 21, 2#101000010010111000111, 3, 7) and
        chkGetBitsMsb("\2#01010100;\2#00100101;\2#11000111;\2#01000000;",             1, 3, 21, 2#101000010010111000111, 4, 0) and
        chkGetBitsMsb("\2#10110100;\2#00100101;\2#11000111;\2#10100000;",             1, 3, 21, 2#101000010010111000111, 4, 0) and
        chkGetBitsMsb("\2#01011010;\2#00010010;\2#11100011;\2#10101000;",             1, 4, 21, 2#101000010010111000111, 4, 1) and
        chkGetBitsMsb("\2#10111010;\2#00010010;\2#11100011;\2#11011000;",             1, 4, 21, 2#101000010010111000111, 4, 1) and
        chkGetBitsMsb("\2#01011101;\2#00001001;\2#01110001;\2#11010110;",             1, 5, 21, 2#101000010010111000111, 4, 2) and
        chkGetBitsMsb("\2#10011101;\2#00001001;\2#01110001;\2#11100110;",             1, 5, 21, 2#101000010010111000111, 4, 2) and
        chkGetBitsMsb("\2#01001110;\2#10000100;\2#10111000;\2#11101001;\2#10000000;", 1, 6, 21, 2#101000010010111000111, 4, 3) and
        chkGetBitsMsb("\2#11010110;\2#10000100;\2#10111000;\2#11111010;\2#10000000;", 1, 6, 21, 2#101000010010111000111, 4, 3) and
        chkGetBitsMsb("\2#01101011;\2#01000010;\2#01011100;\2#01110110;\2#10100000;", 1, 7, 21, 2#101000010010111000111, 4, 4) and
        chkGetBitsMsb("\2#10110011;\2#01000010;\2#01011100;\2#01111011;\2#00100000;", 1, 7, 21, 2#101000010010111000111, 4, 4) then
      writeln("getBitsMsb works correct.");
    end if;
  end func;


const func boolean: chkPutBitMsb (in string: stri, in integer: bitPos,
    in integer: bit, in string: striExpected, in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var string: striVar is "";
    var integer: bitPosVar is 0;
    var file: testFile is STD_NULL;
  begin
    striVar := stri;
    bitPosVar := bitPos;
    putBitMsb(striVar, bitPosVar, bit);
    if striVar <> striExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("putBitMsb(\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\", " <& bitPos <& ", " <& bit radix 2 <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    if bitPos = 0 then
      testFile := openStrifile(stri);
      testFile.bufferChar := '\0;';
    else
      testFile := openStrifile(stri[.. pred(length(stri))]);
      testFile.bufferChar := stri[length(stri)];
    end if;
    bitPosVar := bitPos;
    putBitMsb(testFile, bitPosVar, bit);
    seek(testFile, 1);
    striVar := gets(testFile, length(testFile));
    if bitPosVar <> 0 then
      striVar &:= testFile.bufferChar;
    end if;
    if striVar <> striExpected or bitPosVar <> bitPosExpected or (bitPosVar = 0 and testFile.bufferChar <> '\0;') then
      okay := FALSE;
      write("\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\": putBitMsb(testFile, " <& bitPos <& ", " <& bit radix 2 <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
      if bitPosVar = 0 and testFile.bufferChar <> '\0;' then
        writeln(" ***** Expected bufferChar to be '\\0;' if bitPos is 0. Found '\\" <& ord(testFile.bufferChar) <& ";'");
      end if;
    end if;
  end func;


const proc: chkPutBitMsb is func
  begin
    if  chkPutBitMsb(            "", 0, 2#0, "\2#00000000;", 1) and
        chkPutBitMsb("\2#00000000;", 1, 2#0, "\2#00000000;", 2) and
        chkPutBitMsb("\2#10000000;", 1, 2#0, "\2#10000000;", 2) and
        chkPutBitMsb("\2#01000000;", 2, 2#0, "\2#01000000;", 3) and
        chkPutBitMsb("\2#10000000;", 2, 2#0, "\2#10000000;", 3) and
        chkPutBitMsb("\2#01000000;", 3, 2#0, "\2#01000000;", 4) and
        chkPutBitMsb("\2#10100000;", 3, 2#0, "\2#10100000;", 4) and
        chkPutBitMsb("\2#01010000;", 4, 2#0, "\2#01010000;", 5) and
        chkPutBitMsb("\2#10110000;", 4, 2#0, "\2#10110000;", 5) and
        chkPutBitMsb("\2#01011000;", 5, 2#0, "\2#01011000;", 6) and
        chkPutBitMsb("\2#10011000;", 5, 2#0, "\2#10011000;", 6) and
        chkPutBitMsb("\2#01001100;", 6, 2#0, "\2#01001100;", 7) and
        chkPutBitMsb("\2#11010100;", 6, 2#0, "\2#11010100;", 7) and
        chkPutBitMsb("\2#01101010;", 7, 2#0, "\2#01101010;", 0) and
        chkPutBitMsb("\2#10110010;", 7, 2#0, "\2#10110010;", 0) and
        chkPutBitMsb(            "", 0, 2#1, "\2#10000000;", 1) and
        chkPutBitMsb("\2#00000000;", 1, 2#1, "\2#01000000;", 2) and
        chkPutBitMsb("\2#10000000;", 1, 2#1, "\2#11000000;", 2) and
        chkPutBitMsb("\2#01000000;", 2, 2#1, "\2#01100000;", 3) and
        chkPutBitMsb("\2#10000000;", 2, 2#1, "\2#10100000;", 3) and
        chkPutBitMsb("\2#01000000;", 3, 2#1, "\2#01010000;", 4) and
        chkPutBitMsb("\2#10100000;", 3, 2#1, "\2#10110000;", 4) and
        chkPutBitMsb("\2#01010000;", 4, 2#1, "\2#01011000;", 5) and
        chkPutBitMsb("\2#10110000;", 4, 2#1, "\2#10111000;", 5) and
        chkPutBitMsb("\2#01011000;", 5, 2#1, "\2#01011100;", 6) and
        chkPutBitMsb("\2#10011000;", 5, 2#1, "\2#10011100;", 6) and
        chkPutBitMsb("\2#01001100;", 6, 2#1, "\2#01001110;", 7) and
        chkPutBitMsb("\2#11010100;", 6, 2#1, "\2#11010110;", 7) and
        chkPutBitMsb("\2#01101010;", 7, 2#1, "\2#01101011;", 0) and
        chkPutBitMsb("\2#10110010;", 7, 2#1, "\2#10110011;", 0) then
      writeln("putBitMsb works correct.");
    end if;
  end func;


const func boolean: chkPutBitsMsb (in string: stri, in integer: bitPos,
    in integer: bits, in integer: bitsToWrite, in string: striExpected,
    in integer: bitPosExpected) is func
  result
    var boolean: okay is TRUE;
  local
    var string: striVar is "";
    var integer: bitPosVar is 0;
    var file: testFile is STD_NULL;
  begin
    striVar := stri;
    bitPosVar := bitPos;
    putBitsMsb(striVar, bitPosVar, bits, bitsToWrite);
    if striVar <> striExpected or bitPosVar <> bitPosExpected then
      okay := FALSE;
      write("putBitsMsb(\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\", " <& bitPos <& ", " <& bits radix 2 <& ", " <& bitsToWrite <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
    end if;
    if bitPos = 0 then
      testFile := openStrifile(stri);
      testFile.bufferChar := '\0;';
    else
      testFile := openStrifile(stri[.. pred(length(stri))]);
      testFile.bufferChar := stri[length(stri)];
    end if;
    bitPosVar := bitPos;
    putBitsMsb(testFile, bitPosVar, bits, bitsToWrite);
    seek(testFile, 1);
    striVar := gets(testFile, length(testFile));
    if bitPosVar <> 0 then
      striVar &:= testFile.bufferChar;
    end if;
    if striVar <> striExpected or bitPosVar <> bitPosExpected or (bitPosVar = 0 and testFile.bufferChar <> '\0;') then
      okay := FALSE;
      write("\"");
      if length(stri) >= 1 then
        write("\\2#" <& ord(stri[length(stri)]) radix 2 <& ";");
      end if;
      writeln("\": putBitsMsb(testFile, " <& bitPos <& ", " <& bits radix 2 <& ", " <& bitsToWrite <& ")");
      if striVar <> striExpected  then
        writeln(" ***** Expected " <& literal(striExpected) <& " found " <& literal(striVar));
      end if;
      if bitPosVar <> bitPosExpected then
        writeln(" ***** Expected bitPos " <& bitPosExpected <& " found " <& bitPosVar);
      end if;
      if bitPosVar = 0 and testFile.bufferChar <> '\0;' then
        writeln(" ***** Expected bufferChar to be '\\0;' if bitPos is 0. Found '\\" <& ord(testFile.bufferChar) <& ";'");
      end if;
    end if;
  end func;


const proc: chkPutBitsMsb is func
  begin
    if  chkPutBitsMsb(            "", 0,                     2#0,  1, "\2#00000000;", 1) and
        chkPutBitsMsb("\2#00000000;", 1,                     2#0,  1, "\2#00000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 1,                     2#0,  1, "\2#10000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 2,                     2#0,  1, "\2#01000000;", 3) and
        chkPutBitsMsb("\2#10000000;", 2,                     2#0,  1, "\2#10000000;", 3) and
        chkPutBitsMsb("\2#01000000;", 3,                     2#0,  1, "\2#01000000;", 4) and
        chkPutBitsMsb("\2#10100000;", 3,                     2#0,  1, "\2#10100000;", 4) and
        chkPutBitsMsb("\2#01010000;", 4,                     2#0,  1, "\2#01010000;", 5) and
        chkPutBitsMsb("\2#10110000;", 4,                     2#0,  1, "\2#10110000;", 5) and
        chkPutBitsMsb("\2#01011000;", 5,                     2#0,  1, "\2#01011000;", 6) and
        chkPutBitsMsb("\2#10011000;", 5,                     2#0,  1, "\2#10011000;", 6) and
        chkPutBitsMsb("\2#01001100;", 6,                     2#0,  1, "\2#01001100;", 7) and
        chkPutBitsMsb("\2#11010100;", 6,                     2#0,  1, "\2#11010100;", 7) and
        chkPutBitsMsb("\2#01101010;", 7,                     2#0,  1, "\2#01101010;", 0) and
        chkPutBitsMsb("\2#10110010;", 7,                     2#0,  1, "\2#10110010;", 0) and
        chkPutBitsMsb(            "", 0,                     2#1,  1, "\2#10000000;", 1) and
        chkPutBitsMsb("\2#00000000;", 1,                     2#1,  1, "\2#01000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 1,                     2#1,  1, "\2#11000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 2,                     2#1,  1, "\2#01100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 2,                     2#1,  1, "\2#10100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 3,                     2#1,  1, "\2#01010000;", 4) and
        chkPutBitsMsb("\2#10100000;", 3,                     2#1,  1, "\2#10110000;", 4) and
        chkPutBitsMsb("\2#01010000;", 4,                     2#1,  1, "\2#01011000;", 5) and
        chkPutBitsMsb("\2#10110000;", 4,                     2#1,  1, "\2#10111000;", 5) and
        chkPutBitsMsb("\2#01011000;", 5,                     2#1,  1, "\2#01011100;", 6) and
        chkPutBitsMsb("\2#10011000;", 5,                     2#1,  1, "\2#10011100;", 6) and
        chkPutBitsMsb("\2#01001100;", 6,                     2#1,  1, "\2#01001110;", 7) and
        chkPutBitsMsb("\2#11010100;", 6,                     2#1,  1, "\2#11010110;", 7) and
        chkPutBitsMsb("\2#01101010;", 7,                     2#1,  1, "\2#01101011;", 0) and
        chkPutBitsMsb("\2#10110010;", 7,                     2#1,  1, "\2#10110011;", 0) and
        chkPutBitsMsb(            "", 0,                    2#01,  2, "\2#01000000;", 2) and
        chkPutBitsMsb("\2#00000000;", 1,                    2#01,  2, "\2#00100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 1,                    2#01,  2, "\2#10100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 2,                    2#01,  2, "\2#01010000;", 4) and
        chkPutBitsMsb("\2#10000000;", 2,                    2#01,  2, "\2#10010000;", 4) and
        chkPutBitsMsb("\2#01000000;", 3,                    2#01,  2, "\2#01001000;", 5) and
        chkPutBitsMsb("\2#10100000;", 3,                    2#01,  2, "\2#10101000;", 5) and
        chkPutBitsMsb("\2#01010000;", 4,                    2#01,  2, "\2#01010100;", 6) and
        chkPutBitsMsb("\2#10110000;", 4,                    2#01,  2, "\2#10110100;", 6) and
        chkPutBitsMsb("\2#01011000;", 5,                    2#01,  2, "\2#01011010;", 7) and
        chkPutBitsMsb("\2#10011000;", 5,                    2#01,  2, "\2#10011010;", 7) and
        chkPutBitsMsb("\2#01001100;", 6,                    2#01,  2, "\2#01001101;", 0) and
        chkPutBitsMsb("\2#11010100;", 6,                    2#01,  2, "\2#11010101;", 0) and
        chkPutBitsMsb("\2#01101010;", 7,                    2#01,  2, "\2#01101010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110010;", 7,                    2#01,  2, "\2#10110010;\2#10000000;", 1) and
        chkPutBitsMsb(            "", 0,                    2#10,  2, "\2#10000000;", 2) and
        chkPutBitsMsb("\2#00000000;", 1,                    2#10,  2, "\2#01000000;", 3) and
        chkPutBitsMsb("\2#10000000;", 1,                    2#10,  2, "\2#11000000;", 3) and
        chkPutBitsMsb("\2#01000000;", 2,                    2#10,  2, "\2#01100000;", 4) and
        chkPutBitsMsb("\2#10000000;", 2,                    2#10,  2, "\2#10100000;", 4) and
        chkPutBitsMsb("\2#01000000;", 3,                    2#10,  2, "\2#01010000;", 5) and
        chkPutBitsMsb("\2#10100000;", 3,                    2#10,  2, "\2#10110000;", 5) and
        chkPutBitsMsb("\2#01010000;", 4,                    2#10,  2, "\2#01011000;", 6) and
        chkPutBitsMsb("\2#10110000;", 4,                    2#10,  2, "\2#10111000;", 6) and
        chkPutBitsMsb("\2#01011000;", 5,                    2#10,  2, "\2#01011100;", 7) and
        chkPutBitsMsb("\2#10011000;", 5,                    2#10,  2, "\2#10011100;", 7) and
        chkPutBitsMsb("\2#01001100;", 6,                    2#10,  2, "\2#01001110;", 0) and
        chkPutBitsMsb("\2#11010100;", 6,                    2#10,  2, "\2#11010110;", 0) and
        chkPutBitsMsb("\2#01101010;", 7,                    2#10,  2, "\2#01101011;\2#00000000;", 1) and
        chkPutBitsMsb("\2#10110010;", 7,                    2#10,  2, "\2#10110011;\2#00000000;", 1) and
        chkPutBitsMsb(            "", 0,                   2#010,  3, "\2#01000000;", 3) and
        chkPutBitsMsb("\2#00000000;", 1,                   2#010,  3, "\2#00100000;", 4) and
        chkPutBitsMsb("\2#10000000;", 1,                   2#010,  3, "\2#10100000;", 4) and
        chkPutBitsMsb("\2#01000000;", 2,                   2#010,  3, "\2#01010000;", 5) and
        chkPutBitsMsb("\2#10000000;", 2,                   2#010,  3, "\2#10010000;", 5) and
        chkPutBitsMsb("\2#01000000;", 3,                   2#010,  3, "\2#01001000;", 6) and
        chkPutBitsMsb("\2#10100000;", 3,                   2#010,  3, "\2#10101000;", 6) and
        chkPutBitsMsb("\2#01010000;", 4,                   2#010,  3, "\2#01010100;", 7) and
        chkPutBitsMsb("\2#10110000;", 4,                   2#010,  3, "\2#10110100;", 7) and
        chkPutBitsMsb("\2#01011000;", 5,                   2#010,  3, "\2#01011010;", 0) and
        chkPutBitsMsb("\2#10011000;", 5,                   2#010,  3, "\2#10011010;", 0) and
        chkPutBitsMsb("\2#01001100;", 6,                   2#010,  3, "\2#01001101;\2#00000000;", 1) and
        chkPutBitsMsb("\2#11010100;", 6,                   2#010,  3, "\2#11010101;\2#00000000;", 1) and
        chkPutBitsMsb("\2#01101010;", 7,                   2#010,  3, "\2#01101010;\2#10000000;", 2) and
        chkPutBitsMsb("\2#10110010;", 7,                   2#010,  3, "\2#10110010;\2#10000000;", 2) and
        chkPutBitsMsb(            "", 0,                   2#101,  3, "\2#10100000;", 3) and
        chkPutBitsMsb("\2#00000000;", 1,                   2#101,  3, "\2#01010000;", 4) and
        chkPutBitsMsb("\2#10000000;", 1,                   2#101,  3, "\2#11010000;", 4) and
        chkPutBitsMsb("\2#01000000;", 2,                   2#101,  3, "\2#01101000;", 5) and
        chkPutBitsMsb("\2#10000000;", 2,                   2#101,  3, "\2#10101000;", 5) and
        chkPutBitsMsb("\2#01000000;", 3,                   2#101,  3, "\2#01010100;", 6) and
        chkPutBitsMsb("\2#10100000;", 3,                   2#101,  3, "\2#10110100;", 6) and
        chkPutBitsMsb("\2#01010000;", 4,                   2#101,  3, "\2#01011010;", 7) and
        chkPutBitsMsb("\2#10110000;", 4,                   2#101,  3, "\2#10111010;", 7) and
        chkPutBitsMsb("\2#01011000;", 5,                   2#101,  3, "\2#01011101;", 0) and
        chkPutBitsMsb("\2#10011000;", 5,                   2#101,  3, "\2#10011101;", 0) and
        chkPutBitsMsb("\2#01001100;", 6,                   2#101,  3, "\2#01001110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#11010100;", 6,                   2#101,  3, "\2#11010110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01101010;", 7,                   2#101,  3, "\2#01101011;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10110010;", 7,                   2#101,  3, "\2#10110011;\2#01000000;", 2) and
        chkPutBitsMsb(            "", 0,                  2#0101,  4, "\2#01010000;", 4) and
        chkPutBitsMsb("\2#00000000;", 1,                  2#0101,  4, "\2#00101000;", 5) and
        chkPutBitsMsb("\2#10000000;", 1,                  2#0101,  4, "\2#10101000;", 5) and
        chkPutBitsMsb("\2#01000000;", 2,                  2#0101,  4, "\2#01010100;", 6) and
        chkPutBitsMsb("\2#10000000;", 2,                  2#0101,  4, "\2#10010100;", 6) and
        chkPutBitsMsb("\2#01000000;", 3,                  2#0101,  4, "\2#01001010;", 7) and
        chkPutBitsMsb("\2#10100000;", 3,                  2#0101,  4, "\2#10101010;", 7) and
        chkPutBitsMsb("\2#01010000;", 4,                  2#0101,  4, "\2#01010101;", 0) and
        chkPutBitsMsb("\2#10110000;", 4,                  2#0101,  4, "\2#10110101;", 0) and
        chkPutBitsMsb("\2#01011000;", 5,                  2#0101,  4, "\2#01011010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10011000;", 5,                  2#0101,  4, "\2#10011010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01001100;", 6,                  2#0101,  4, "\2#01001101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#11010100;", 6,                  2#0101,  4, "\2#11010101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01101010;", 7,                  2#0101,  4, "\2#01101010;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10110010;", 7,                  2#0101,  4, "\2#10110010;\2#10100000;", 3) and
        chkPutBitsMsb(            "", 0,                  2#1011,  4, "\2#10110000;", 4) and
        chkPutBitsMsb("\2#00000000;", 1,                  2#1011,  4, "\2#01011000;", 5) and
        chkPutBitsMsb("\2#10000000;", 1,                  2#1011,  4, "\2#11011000;", 5) and
        chkPutBitsMsb("\2#01000000;", 2,                  2#1011,  4, "\2#01101100;", 6) and
        chkPutBitsMsb("\2#10000000;", 2,                  2#1011,  4, "\2#10101100;", 6) and
        chkPutBitsMsb("\2#01000000;", 3,                  2#1011,  4, "\2#01010110;", 7) and
        chkPutBitsMsb("\2#10100000;", 3,                  2#1011,  4, "\2#10110110;", 7) and
        chkPutBitsMsb("\2#01010000;", 4,                  2#1011,  4, "\2#01011011;", 0) and
        chkPutBitsMsb("\2#10110000;", 4,                  2#1011,  4, "\2#10111011;", 0) and
        chkPutBitsMsb("\2#01011000;", 5,                  2#1011,  4, "\2#01011101;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10011000;", 5,                  2#1011,  4, "\2#10011101;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01001100;", 6,                  2#1011,  4, "\2#01001110;\2#11000000;", 2) and
        chkPutBitsMsb("\2#11010100;", 6,                  2#1011,  4, "\2#11010110;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01101010;", 7,                  2#1011,  4, "\2#01101011;\2#01100000;", 3) and
        chkPutBitsMsb("\2#10110010;", 7,                  2#1011,  4, "\2#10110011;\2#01100000;", 3) and
        chkPutBitsMsb(            "", 0,                 2#01011,  5, "\2#01011000;", 5) and
        chkPutBitsMsb("\2#00000000;", 1,                 2#01011,  5, "\2#00101100;", 6) and
        chkPutBitsMsb("\2#10000000;", 1,                 2#01011,  5, "\2#10101100;", 6) and
        chkPutBitsMsb("\2#01000000;", 2,                 2#01011,  5, "\2#01010110;", 7) and
        chkPutBitsMsb("\2#10000000;", 2,                 2#01011,  5, "\2#10010110;", 7) and
        chkPutBitsMsb("\2#01000000;", 3,                 2#01011,  5, "\2#01001011;", 0) and
        chkPutBitsMsb("\2#10100000;", 3,                 2#01011,  5, "\2#10101011;", 0) and
        chkPutBitsMsb("\2#01010000;", 4,                 2#01011,  5, "\2#01010101;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110000;", 4,                 2#01011,  5, "\2#10110101;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01011000;", 5,                 2#01011,  5, "\2#01011010;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10011000;", 5,                 2#01011,  5, "\2#10011010;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01001100;", 6,                 2#01011,  5, "\2#01001101;\2#01100000;", 3) and
        chkPutBitsMsb("\2#11010100;", 6,                 2#01011,  5, "\2#11010101;\2#01100000;", 3) and
        chkPutBitsMsb("\2#01101010;", 7,                 2#01011,  5, "\2#01101010;\2#10110000;", 4) and
        chkPutBitsMsb("\2#10110010;", 7,                 2#01011,  5, "\2#10110010;\2#10110000;", 4) and
        chkPutBitsMsb(            "", 0,                 2#10011,  5, "\2#10011000;", 5) and
        chkPutBitsMsb("\2#00000000;", 1,                 2#10011,  5, "\2#01001100;", 6) and
        chkPutBitsMsb("\2#10000000;", 1,                 2#10011,  5, "\2#11001100;", 6) and
        chkPutBitsMsb("\2#01000000;", 2,                 2#10011,  5, "\2#01100110;", 7) and
        chkPutBitsMsb("\2#10000000;", 2,                 2#10011,  5, "\2#10100110;", 7) and
        chkPutBitsMsb("\2#01000000;", 3,                 2#10011,  5, "\2#01010011;", 0) and
        chkPutBitsMsb("\2#10100000;", 3,                 2#10011,  5, "\2#10110011;", 0) and
        chkPutBitsMsb("\2#01010000;", 4,                 2#10011,  5, "\2#01011001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110000;", 4,                 2#10011,  5, "\2#10111001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01011000;", 5,                 2#10011,  5, "\2#01011100;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10011000;", 5,                 2#10011,  5, "\2#10011100;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01001100;", 6,                 2#10011,  5, "\2#01001110;\2#01100000;", 3) and
        chkPutBitsMsb("\2#11010100;", 6,                 2#10011,  5, "\2#11010110;\2#01100000;", 3) and
        chkPutBitsMsb("\2#01101010;", 7,                 2#10011,  5, "\2#01101011;\2#00110000;", 4) and
        chkPutBitsMsb("\2#10110010;", 7,                 2#10011,  5, "\2#10110011;\2#00110000;", 4) and
        chkPutBitsMsb(            "", 0,                2#010011,  6, "\2#01001100;", 6) and
        chkPutBitsMsb("\2#00000000;", 1,                2#010011,  6, "\2#00100110;", 7) and
        chkPutBitsMsb("\2#10000000;", 1,                2#010011,  6, "\2#10100110;", 7) and
        chkPutBitsMsb("\2#01000000;", 2,                2#010011,  6, "\2#01010011;", 0) and
        chkPutBitsMsb("\2#10000000;", 2,                2#010011,  6, "\2#10010011;", 0) and
        chkPutBitsMsb("\2#01000000;", 3,                2#010011,  6, "\2#01001001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10100000;", 3,                2#010011,  6, "\2#10101001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01010000;", 4,                2#010011,  6, "\2#01010100;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10110000;", 4,                2#010011,  6, "\2#10110100;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01011000;", 5,                2#010011,  6, "\2#01011010;\2#01100000;", 3) and
        chkPutBitsMsb("\2#10011000;", 5,                2#010011,  6, "\2#10011010;\2#01100000;", 3) and
        chkPutBitsMsb("\2#01001100;", 6,                2#010011,  6, "\2#01001101;\2#00110000;", 4) and
        chkPutBitsMsb("\2#11010100;", 6,                2#010011,  6, "\2#11010101;\2#00110000;", 4) and
        chkPutBitsMsb("\2#01101010;", 7,                2#010011,  6, "\2#01101010;\2#10011000;", 5) and
        chkPutBitsMsb("\2#10110010;", 7,                2#010011,  6, "\2#10110010;\2#10011000;", 5) and
        chkPutBitsMsb(            "", 0,                2#110101,  6, "\2#11010100;", 6) and
        chkPutBitsMsb("\2#00000000;", 1,                2#110101,  6, "\2#01101010;", 7) and
        chkPutBitsMsb("\2#10000000;", 1,                2#110101,  6, "\2#11101010;", 7) and
        chkPutBitsMsb("\2#01000000;", 2,                2#110101,  6, "\2#01110101;", 0) and
        chkPutBitsMsb("\2#10000000;", 2,                2#110101,  6, "\2#10110101;", 0) and
        chkPutBitsMsb("\2#01000000;", 3,                2#110101,  6, "\2#01011010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10100000;", 3,                2#110101,  6, "\2#10111010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01010000;", 4,                2#110101,  6, "\2#01011101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10110000;", 4,                2#110101,  6, "\2#10111101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01011000;", 5,                2#110101,  6, "\2#01011110;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10011000;", 5,                2#110101,  6, "\2#10011110;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01001100;", 6,                2#110101,  6, "\2#01001111;\2#01010000;", 4) and
        chkPutBitsMsb("\2#11010100;", 6,                2#110101,  6, "\2#11010111;\2#01010000;", 4) and
        chkPutBitsMsb("\2#01101010;", 7,                2#110101,  6, "\2#01101011;\2#10101000;", 5) and
        chkPutBitsMsb("\2#10110010;", 7,                2#110101,  6, "\2#10110011;\2#10101000;", 5) and
        chkPutBitsMsb(            "", 0,               2#0110101,  7, "\2#01101010;", 7) and
        chkPutBitsMsb("\2#00000000;", 1,               2#0110101,  7, "\2#00110101;", 0) and
        chkPutBitsMsb("\2#10000000;", 1,               2#0110101,  7, "\2#10110101;", 0) and
        chkPutBitsMsb("\2#01000000;", 2,               2#0110101,  7, "\2#01011010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 2,               2#0110101,  7, "\2#10011010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 3,               2#0110101,  7, "\2#01001101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10100000;", 3,               2#0110101,  7, "\2#10101101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01010000;", 4,               2#0110101,  7, "\2#01010110;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10110000;", 4,               2#0110101,  7, "\2#10110110;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01011000;", 5,               2#0110101,  7, "\2#01011011;\2#01010000;", 4) and
        chkPutBitsMsb("\2#10011000;", 5,               2#0110101,  7, "\2#10011011;\2#01010000;", 4) and
        chkPutBitsMsb("\2#01001100;", 6,               2#0110101,  7, "\2#01001101;\2#10101000;", 5) and
        chkPutBitsMsb("\2#11010100;", 6,               2#0110101,  7, "\2#11010101;\2#10101000;", 5) and
        chkPutBitsMsb("\2#01101010;", 7,               2#0110101,  7, "\2#01101010;\2#11010100;", 6) and
        chkPutBitsMsb("\2#10110010;", 7,               2#0110101,  7, "\2#10110010;\2#11010100;", 6) and
        chkPutBitsMsb(            "", 0,               2#1011001,  7, "\2#10110010;", 7) and
        chkPutBitsMsb("\2#00000000;", 1,               2#1011001,  7, "\2#01011001;", 0) and
        chkPutBitsMsb("\2#10000000;", 1,               2#1011001,  7, "\2#11011001;", 0) and
        chkPutBitsMsb("\2#01000000;", 2,               2#1011001,  7, "\2#01101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 2,               2#1011001,  7, "\2#10101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 3,               2#1011001,  7, "\2#01010110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10100000;", 3,               2#1011001,  7, "\2#10110110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01010000;", 4,               2#1011001,  7, "\2#01011011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#10110000;", 4,               2#1011001,  7, "\2#10111011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#01011000;", 5,               2#1011001,  7, "\2#01011101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#10011000;", 5,               2#1011001,  7, "\2#10011101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#01001100;", 6,               2#1011001,  7, "\2#01001110;\2#11001000;", 5) and
        chkPutBitsMsb("\2#11010100;", 6,               2#1011001,  7, "\2#11010110;\2#11001000;", 5) and
        chkPutBitsMsb("\2#01101010;", 7,               2#1011001,  7, "\2#01101011;\2#01100100;", 6) and
        chkPutBitsMsb("\2#10110010;", 7,               2#1011001,  7, "\2#10110011;\2#01100100;", 6) and
        chkPutBitsMsb(            "", 0,              2#01011001,  8, "\2#01011001;", 0) and
        chkPutBitsMsb("\2#00000000;", 1,              2#01011001,  8, "\2#00101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 1,              2#01011001,  8, "\2#10101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 2,              2#01011001,  8, "\2#01010110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 2,              2#01011001,  8, "\2#10010110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 3,              2#01011001,  8, "\2#01001011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#10100000;", 3,              2#01011001,  8, "\2#10101011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#01010000;", 4,              2#01011001,  8, "\2#01010101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#10110000;", 4,              2#01011001,  8, "\2#10110101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#01011000;", 5,              2#01011001,  8, "\2#01011010;\2#11001000;", 5) and
        chkPutBitsMsb("\2#10011000;", 5,              2#01011001,  8, "\2#10011010;\2#11001000;", 5) and
        chkPutBitsMsb("\2#01001100;", 6,              2#01011001,  8, "\2#01001101;\2#01100100;", 6) and
        chkPutBitsMsb("\2#11010100;", 6,              2#01011001,  8, "\2#11010101;\2#01100100;", 6) and
        chkPutBitsMsb("\2#01101010;", 7,              2#01011001,  8, "\2#01101010;\2#10110010;", 7) and
        chkPutBitsMsb("\2#10110010;", 7,              2#01011001,  8, "\2#10110010;\2#10110010;", 7) and
        chkPutBitsMsb(            "", 0,              2#10100011,  8, "\2#10100011;", 0) and
        chkPutBitsMsb("\2#00000000;", 1,              2#10100011,  8, "\2#01010001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 1,              2#10100011,  8, "\2#11010001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 2,              2#10100011,  8, "\2#01101000;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 2,              2#10100011,  8, "\2#10101000;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 3,              2#10100011,  8, "\2#01010100;\2#01100000;", 3) and
        chkPutBitsMsb("\2#10100000;", 3,              2#10100011,  8, "\2#10110100;\2#01100000;", 3) and
        chkPutBitsMsb("\2#01010000;", 4,              2#10100011,  8, "\2#01011010;\2#00110000;", 4) and
        chkPutBitsMsb("\2#10110000;", 4,              2#10100011,  8, "\2#10111010;\2#00110000;", 4) and
        chkPutBitsMsb("\2#01011000;", 5,              2#10100011,  8, "\2#01011101;\2#00011000;", 5) and
        chkPutBitsMsb("\2#10011000;", 5,              2#10100011,  8, "\2#10011101;\2#00011000;", 5) and
        chkPutBitsMsb("\2#01001100;", 6,              2#10100011,  8, "\2#01001110;\2#10001100;", 6) and
        chkPutBitsMsb("\2#11010100;", 6,              2#10100011,  8, "\2#11010110;\2#10001100;", 6) and
        chkPutBitsMsb("\2#01101010;", 7,              2#10100011,  8, "\2#01101011;\2#01000110;", 7) and
        chkPutBitsMsb("\2#10110010;", 7,              2#10100011,  8, "\2#10110011;\2#01000110;", 7) and
        chkPutBitsMsb(            "", 0,             2#010100011,  9, "\2#01010001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#00000000;", 1,             2#010100011,  9, "\2#00101000;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 1,             2#010100011,  9, "\2#10101000;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 2,             2#010100011,  9, "\2#01010100;\2#01100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 2,             2#010100011,  9, "\2#10010100;\2#01100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 3,             2#010100011,  9, "\2#01001010;\2#00110000;", 4) and
        chkPutBitsMsb("\2#10100000;", 3,             2#010100011,  9, "\2#10101010;\2#00110000;", 4) and
        chkPutBitsMsb("\2#01010000;", 4,             2#010100011,  9, "\2#01010101;\2#00011000;", 5) and
        chkPutBitsMsb("\2#10110000;", 4,             2#010100011,  9, "\2#10110101;\2#00011000;", 5) and
        chkPutBitsMsb("\2#01011000;", 5,             2#010100011,  9, "\2#01011010;\2#10001100;", 6) and
        chkPutBitsMsb("\2#10011000;", 5,             2#010100011,  9, "\2#10011010;\2#10001100;", 6) and
        chkPutBitsMsb("\2#01001100;", 6,             2#010100011,  9, "\2#01001101;\2#01000110;", 7) and
        chkPutBitsMsb("\2#11010100;", 6,             2#010100011,  9, "\2#11010101;\2#01000110;", 7) and
        chkPutBitsMsb("\2#01101010;", 7,             2#010100011,  9, "\2#01101010;\2#10100011;", 0) and
        chkPutBitsMsb("\2#10110010;", 7,             2#010100011,  9, "\2#10110010;\2#10100011;", 0) and
        chkPutBitsMsb(            "", 0,             2#110110111,  9, "\2#11011011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#00000000;", 1,             2#110110111,  9, "\2#01101101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 1,             2#110110111,  9, "\2#11101101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 2,             2#110110111,  9, "\2#01110110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 2,             2#110110111,  9, "\2#10110110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 3,             2#110110111,  9, "\2#01011011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10100000;", 3,             2#110110111,  9, "\2#10111011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#01010000;", 4,             2#110110111,  9, "\2#01011101;\2#10111000;", 5) and
        chkPutBitsMsb("\2#10110000;", 4,             2#110110111,  9, "\2#10111101;\2#10111000;", 5) and
        chkPutBitsMsb("\2#01011000;", 5,             2#110110111,  9, "\2#01011110;\2#11011100;", 6) and
        chkPutBitsMsb("\2#10011000;", 5,             2#110110111,  9, "\2#10011110;\2#11011100;", 6) and
        chkPutBitsMsb("\2#01001100;", 6,             2#110110111,  9, "\2#01001111;\2#01101110;", 7) and
        chkPutBitsMsb("\2#11010100;", 6,             2#110110111,  9, "\2#11010111;\2#01101110;", 7) and
        chkPutBitsMsb("\2#01101010;", 7,             2#110110111,  9, "\2#01101011;\2#10110111;", 0) and
        chkPutBitsMsb("\2#10110010;", 7,             2#110110111,  9, "\2#10110011;\2#10110111;", 0) and
        chkPutBitsMsb(            "", 0,            2#0110110111, 10, "\2#01101101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#00000000;", 1,            2#0110110111, 10, "\2#00110110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 1,            2#0110110111, 10, "\2#10110110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 2,            2#0110110111, 10, "\2#01011011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10000000;", 2,            2#0110110111, 10, "\2#10011011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#01000000;", 3,            2#0110110111, 10, "\2#01001101;\2#10111000;", 5) and
        chkPutBitsMsb("\2#10100000;", 3,            2#0110110111, 10, "\2#10101101;\2#10111000;", 5) and
        chkPutBitsMsb("\2#01010000;", 4,            2#0110110111, 10, "\2#01010110;\2#11011100;", 6) and
        chkPutBitsMsb("\2#10110000;", 4,            2#0110110111, 10, "\2#10110110;\2#11011100;", 6) and
        chkPutBitsMsb("\2#01011000;", 5,            2#0110110111, 10, "\2#01011011;\2#01101110;", 7) and
        chkPutBitsMsb("\2#10011000;", 5,            2#0110110111, 10, "\2#10011011;\2#01101110;", 7) and
        chkPutBitsMsb("\2#01001100;", 6,            2#0110110111, 10, "\2#01001101;\2#10110111;", 0) and
        chkPutBitsMsb("\2#11010100;", 6,            2#0110110111, 10, "\2#11010101;\2#10110111;", 0) and
        chkPutBitsMsb("\2#01101010;", 7,            2#0110110111, 10, "\2#01101010;\2#11011011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110010;", 7,            2#0110110111, 10, "\2#10110010;\2#11011011;\2#10000000;", 1) and
        chkPutBitsMsb(            "", 0,            2#1100010011, 10, "\2#11000100;\2#11000000;", 2) and
        chkPutBitsMsb("\2#00000000;", 1,            2#1100010011, 10, "\2#01100010;\2#01100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 1,            2#1100010011, 10, "\2#11100010;\2#01100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 2,            2#1100010011, 10, "\2#01110001;\2#00110000;", 4) and
        chkPutBitsMsb("\2#10000000;", 2,            2#1100010011, 10, "\2#10110001;\2#00110000;", 4) and
        chkPutBitsMsb("\2#01000000;", 3,            2#1100010011, 10, "\2#01011000;\2#10011000;", 5) and
        chkPutBitsMsb("\2#10100000;", 3,            2#1100010011, 10, "\2#10111000;\2#10011000;", 5) and
        chkPutBitsMsb("\2#01010000;", 4,            2#1100010011, 10, "\2#01011100;\2#01001100;", 6) and
        chkPutBitsMsb("\2#10110000;", 4,            2#1100010011, 10, "\2#10111100;\2#01001100;", 6) and
        chkPutBitsMsb("\2#01011000;", 5,            2#1100010011, 10, "\2#01011110;\2#00100110;", 7) and
        chkPutBitsMsb("\2#10011000;", 5,            2#1100010011, 10, "\2#10011110;\2#00100110;", 7) and
        chkPutBitsMsb("\2#01001100;", 6,            2#1100010011, 10, "\2#01001111;\2#00010011;", 0) and
        chkPutBitsMsb("\2#11010100;", 6,            2#1100010011, 10, "\2#11010111;\2#00010011;", 0) and
        chkPutBitsMsb("\2#01101010;", 7,            2#1100010011, 10, "\2#01101011;\2#10001001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110010;", 7,            2#1100010011, 10, "\2#10110011;\2#10001001;\2#10000000;", 1) and
        chkPutBitsMsb(            "", 0,           2#01100010011, 11, "\2#01100010;\2#01100000;", 3) and
        chkPutBitsMsb("\2#00000000;", 1,           2#01100010011, 11, "\2#00110001;\2#00110000;", 4) and
        chkPutBitsMsb("\2#10000000;", 1,           2#01100010011, 11, "\2#10110001;\2#00110000;", 4) and
        chkPutBitsMsb("\2#01000000;", 2,           2#01100010011, 11, "\2#01011000;\2#10011000;", 5) and
        chkPutBitsMsb("\2#10000000;", 2,           2#01100010011, 11, "\2#10011000;\2#10011000;", 5) and
        chkPutBitsMsb("\2#01000000;", 3,           2#01100010011, 11, "\2#01001100;\2#01001100;", 6) and
        chkPutBitsMsb("\2#10100000;", 3,           2#01100010011, 11, "\2#10101100;\2#01001100;", 6) and
        chkPutBitsMsb("\2#01010000;", 4,           2#01100010011, 11, "\2#01010110;\2#00100110;", 7) and
        chkPutBitsMsb("\2#10110000;", 4,           2#01100010011, 11, "\2#10110110;\2#00100110;", 7) and
        chkPutBitsMsb("\2#01011000;", 5,           2#01100010011, 11, "\2#01011011;\2#00010011;", 0) and
        chkPutBitsMsb("\2#10011000;", 5,           2#01100010011, 11, "\2#10011011;\2#00010011;", 0) and
        chkPutBitsMsb("\2#01001100;", 6,           2#01100010011, 11, "\2#01001101;\2#10001001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#11010100;", 6,           2#01100010011, 11, "\2#11010101;\2#10001001;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01101010;", 7,           2#01100010011, 11, "\2#01101010;\2#11000100;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10110010;", 7,           2#01100010011, 11, "\2#10110010;\2#11000100;\2#11000000;", 2) and
        chkPutBitsMsb(            "", 0,           2#10110100111, 11, "\2#10110100;\2#11100000;", 3) and
        chkPutBitsMsb("\2#00000000;", 1,           2#10110100111, 11, "\2#01011010;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10000000;", 1,           2#10110100111, 11, "\2#11011010;\2#01110000;", 4) and
        chkPutBitsMsb("\2#01000000;", 2,           2#10110100111, 11, "\2#01101101;\2#00111000;", 5) and
        chkPutBitsMsb("\2#10000000;", 2,           2#10110100111, 11, "\2#10101101;\2#00111000;", 5) and
        chkPutBitsMsb("\2#01000000;", 3,           2#10110100111, 11, "\2#01010110;\2#10011100;", 6) and
        chkPutBitsMsb("\2#10100000;", 3,           2#10110100111, 11, "\2#10110110;\2#10011100;", 6) and
        chkPutBitsMsb("\2#01010000;", 4,           2#10110100111, 11, "\2#01011011;\2#01001110;", 7) and
        chkPutBitsMsb("\2#10110000;", 4,           2#10110100111, 11, "\2#10111011;\2#01001110;", 7) and
        chkPutBitsMsb("\2#01011000;", 5,           2#10110100111, 11, "\2#01011101;\2#10100111;", 0) and
        chkPutBitsMsb("\2#10011000;", 5,           2#10110100111, 11, "\2#10011101;\2#10100111;", 0) and
        chkPutBitsMsb("\2#01001100;", 6,           2#10110100111, 11, "\2#01001110;\2#11010011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#11010100;", 6,           2#10110100111, 11, "\2#11010110;\2#11010011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01101010;", 7,           2#10110100111, 11, "\2#01101011;\2#01101001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10110010;", 7,           2#10110100111, 11, "\2#10110011;\2#01101001;\2#11000000;", 2) and
        chkPutBitsMsb(            "", 0,          2#010110100111, 12, "\2#01011010;\2#01110000;", 4) and
        chkPutBitsMsb("\2#00000000;", 1,          2#010110100111, 12, "\2#00101101;\2#00111000;", 5) and
        chkPutBitsMsb("\2#10000000;", 1,          2#010110100111, 12, "\2#10101101;\2#00111000;", 5) and
        chkPutBitsMsb("\2#01000000;", 2,          2#010110100111, 12, "\2#01010110;\2#10011100;", 6) and
        chkPutBitsMsb("\2#10000000;", 2,          2#010110100111, 12, "\2#10010110;\2#10011100;", 6) and
        chkPutBitsMsb("\2#01000000;", 3,          2#010110100111, 12, "\2#01001011;\2#01001110;", 7) and
        chkPutBitsMsb("\2#10100000;", 3,          2#010110100111, 12, "\2#10101011;\2#01001110;", 7) and
        chkPutBitsMsb("\2#01010000;", 4,          2#010110100111, 12, "\2#01010101;\2#10100111;", 0) and
        chkPutBitsMsb("\2#10110000;", 4,          2#010110100111, 12, "\2#10110101;\2#10100111;", 0) and
        chkPutBitsMsb("\2#01011000;", 5,          2#010110100111, 12, "\2#01011010;\2#11010011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10011000;", 5,          2#010110100111, 12, "\2#10011010;\2#11010011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01001100;", 6,          2#010110100111, 12, "\2#01001101;\2#01101001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#11010100;", 6,          2#010110100111, 12, "\2#11010101;\2#01101001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01101010;", 7,          2#010110100111, 12, "\2#01101010;\2#10110100;\2#11100000;", 3) and
        chkPutBitsMsb("\2#10110010;", 7,          2#010110100111, 12, "\2#10110010;\2#10110100;\2#11100000;", 3) and
        chkPutBitsMsb(            "", 0,          2#101110001101, 12, "\2#10111000;\2#11010000;", 4) and
        chkPutBitsMsb("\2#00000000;", 1,          2#101110001101, 12, "\2#01011100;\2#01101000;", 5) and
        chkPutBitsMsb("\2#10000000;", 1,          2#101110001101, 12, "\2#11011100;\2#01101000;", 5) and
        chkPutBitsMsb("\2#01000000;", 2,          2#101110001101, 12, "\2#01101110;\2#00110100;", 6) and
        chkPutBitsMsb("\2#10000000;", 2,          2#101110001101, 12, "\2#10101110;\2#00110100;", 6) and
        chkPutBitsMsb("\2#01000000;", 3,          2#101110001101, 12, "\2#01010111;\2#00011010;", 7) and
        chkPutBitsMsb("\2#10100000;", 3,          2#101110001101, 12, "\2#10110111;\2#00011010;", 7) and
        chkPutBitsMsb("\2#01010000;", 4,          2#101110001101, 12, "\2#01011011;\2#10001101;", 0) and
        chkPutBitsMsb("\2#10110000;", 4,          2#101110001101, 12, "\2#10111011;\2#10001101;", 0) and
        chkPutBitsMsb("\2#01011000;", 5,          2#101110001101, 12, "\2#01011101;\2#11000110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10011000;", 5,          2#101110001101, 12, "\2#10011101;\2#11000110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01001100;", 6,          2#101110001101, 12, "\2#01001110;\2#11100011;\2#01000000;", 2) and
        chkPutBitsMsb("\2#11010100;", 6,          2#101110001101, 12, "\2#11010110;\2#11100011;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01101010;", 7,          2#101110001101, 12, "\2#01101011;\2#01110001;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10110010;", 7,          2#101110001101, 12, "\2#10110011;\2#01110001;\2#10100000;", 3) and
        chkPutBitsMsb(            "", 0,         2#0101110001101, 13, "\2#01011100;\2#01101000;", 5) and
        chkPutBitsMsb("\2#00000000;", 1,         2#0101110001101, 13, "\2#00101110;\2#00110100;", 6) and
        chkPutBitsMsb("\2#10000000;", 1,         2#0101110001101, 13, "\2#10101110;\2#00110100;", 6) and
        chkPutBitsMsb("\2#01000000;", 2,         2#0101110001101, 13, "\2#01010111;\2#00011010;", 7) and
        chkPutBitsMsb("\2#10000000;", 2,         2#0101110001101, 13, "\2#10010111;\2#00011010;", 7) and
        chkPutBitsMsb("\2#01000000;", 3,         2#0101110001101, 13, "\2#01001011;\2#10001101;", 0) and
        chkPutBitsMsb("\2#10100000;", 3,         2#0101110001101, 13, "\2#10101011;\2#10001101;", 0) and
        chkPutBitsMsb("\2#01010000;", 4,         2#0101110001101, 13, "\2#01010101;\2#11000110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110000;", 4,         2#0101110001101, 13, "\2#10110101;\2#11000110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01011000;", 5,         2#0101110001101, 13, "\2#01011010;\2#11100011;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10011000;", 5,         2#0101110001101, 13, "\2#10011010;\2#11100011;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01001100;", 6,         2#0101110001101, 13, "\2#01001101;\2#01110001;\2#10100000;", 3) and
        chkPutBitsMsb("\2#11010100;", 6,         2#0101110001101, 13, "\2#11010101;\2#01110001;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01101010;", 7,         2#0101110001101, 13, "\2#01101010;\2#10111000;\2#11010000;", 4) and
        chkPutBitsMsb("\2#10110010;", 7,         2#0101110001101, 13, "\2#10110010;\2#10111000;\2#11010000;", 4) and
        chkPutBitsMsb(            "", 0,         2#1101100110111, 13, "\2#11011001;\2#10111000;", 5) and
        chkPutBitsMsb("\2#00000000;", 1,         2#1101100110111, 13, "\2#01101100;\2#11011100;", 6) and
        chkPutBitsMsb("\2#10000000;", 1,         2#1101100110111, 13, "\2#11101100;\2#11011100;", 6) and
        chkPutBitsMsb("\2#01000000;", 2,         2#1101100110111, 13, "\2#01110110;\2#01101110;", 7) and
        chkPutBitsMsb("\2#10000000;", 2,         2#1101100110111, 13, "\2#10110110;\2#01101110;", 7) and
        chkPutBitsMsb("\2#01000000;", 3,         2#1101100110111, 13, "\2#01011011;\2#00110111;", 0) and
        chkPutBitsMsb("\2#10100000;", 3,         2#1101100110111, 13, "\2#10111011;\2#00110111;", 0) and
        chkPutBitsMsb("\2#01010000;", 4,         2#1101100110111, 13, "\2#01011101;\2#10011011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110000;", 4,         2#1101100110111, 13, "\2#10111101;\2#10011011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01011000;", 5,         2#1101100110111, 13, "\2#01011110;\2#11001101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10011000;", 5,         2#1101100110111, 13, "\2#10011110;\2#11001101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01001100;", 6,         2#1101100110111, 13, "\2#01001111;\2#01100110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#11010100;", 6,         2#1101100110111, 13, "\2#11010111;\2#01100110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01101010;", 7,         2#1101100110111, 13, "\2#01101011;\2#10110011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10110010;", 7,         2#1101100110111, 13, "\2#10110011;\2#10110011;\2#01110000;", 4) and
        chkPutBitsMsb(            "", 0,        2#01101100110111, 14, "\2#01101100;\2#11011100;", 6) and
        chkPutBitsMsb("\2#00000000;", 1,        2#01101100110111, 14, "\2#00110110;\2#01101110;", 7) and
        chkPutBitsMsb("\2#10000000;", 1,        2#01101100110111, 14, "\2#10110110;\2#01101110;", 7) and
        chkPutBitsMsb("\2#01000000;", 2,        2#01101100110111, 14, "\2#01011011;\2#00110111;", 0) and
        chkPutBitsMsb("\2#10000000;", 2,        2#01101100110111, 14, "\2#10011011;\2#00110111;", 0) and
        chkPutBitsMsb("\2#01000000;", 3,        2#01101100110111, 14, "\2#01001101;\2#10011011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10100000;", 3,        2#01101100110111, 14, "\2#10101101;\2#10011011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01010000;", 4,        2#01101100110111, 14, "\2#01010110;\2#11001101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10110000;", 4,        2#01101100110111, 14, "\2#10110110;\2#11001101;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01011000;", 5,        2#01101100110111, 14, "\2#01011011;\2#01100110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#10011000;", 5,        2#01101100110111, 14, "\2#10011011;\2#01100110;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01001100;", 6,        2#01101100110111, 14, "\2#01001101;\2#10110011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#11010100;", 6,        2#01101100110111, 14, "\2#11010101;\2#10110011;\2#01110000;", 4) and
        chkPutBitsMsb("\2#01101010;", 7,        2#01101100110111, 14, "\2#01101010;\2#11011001;\2#10111000;", 5) and
        chkPutBitsMsb("\2#10110010;", 7,        2#01101100110111, 14, "\2#10110010;\2#11011001;\2#10111000;", 5) and
        chkPutBitsMsb(            "", 0,        2#10011011010101, 14, "\2#10011011;\2#01010100;", 6) and
        chkPutBitsMsb("\2#00000000;", 1,        2#10011011010101, 14, "\2#01001101;\2#10101010;", 7) and
        chkPutBitsMsb("\2#10000000;", 1,        2#10011011010101, 14, "\2#11001101;\2#10101010;", 7) and
        chkPutBitsMsb("\2#01000000;", 2,        2#10011011010101, 14, "\2#01100110;\2#11010101;", 0) and
        chkPutBitsMsb("\2#10000000;", 2,        2#10011011010101, 14, "\2#10100110;\2#11010101;", 0) and
        chkPutBitsMsb("\2#01000000;", 3,        2#10011011010101, 14, "\2#01010011;\2#01101010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10100000;", 3,        2#10011011010101, 14, "\2#10110011;\2#01101010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01010000;", 4,        2#10011011010101, 14, "\2#01011001;\2#10110101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10110000;", 4,        2#10011011010101, 14, "\2#10111001;\2#10110101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01011000;", 5,        2#10011011010101, 14, "\2#01011100;\2#11011010;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10011000;", 5,        2#10011011010101, 14, "\2#10011100;\2#11011010;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01001100;", 6,        2#10011011010101, 14, "\2#01001110;\2#01101101;\2#01010000;", 4) and
        chkPutBitsMsb("\2#11010100;", 6,        2#10011011010101, 14, "\2#11010110;\2#01101101;\2#01010000;", 4) and
        chkPutBitsMsb("\2#01101010;", 7,        2#10011011010101, 14, "\2#01101011;\2#00110110;\2#10101000;", 5) and
        chkPutBitsMsb("\2#10110010;", 7,        2#10011011010101, 14, "\2#10110011;\2#00110110;\2#10101000;", 5) and
        chkPutBitsMsb(            "", 0,       2#010011011010101, 15, "\2#01001101;\2#10101010;", 7) and
        chkPutBitsMsb("\2#00000000;", 1,       2#010011011010101, 15, "\2#00100110;\2#11010101;", 0) and
        chkPutBitsMsb("\2#10000000;", 1,       2#010011011010101, 15, "\2#10100110;\2#11010101;", 0) and
        chkPutBitsMsb("\2#01000000;", 2,       2#010011011010101, 15, "\2#01010011;\2#01101010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 2,       2#010011011010101, 15, "\2#10010011;\2#01101010;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 3,       2#010011011010101, 15, "\2#01001001;\2#10110101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10100000;", 3,       2#010011011010101, 15, "\2#10101001;\2#10110101;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01010000;", 4,       2#010011011010101, 15, "\2#01010100;\2#11011010;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10110000;", 4,       2#010011011010101, 15, "\2#10110100;\2#11011010;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01011000;", 5,       2#010011011010101, 15, "\2#01011010;\2#01101101;\2#01010000;", 4) and
        chkPutBitsMsb("\2#10011000;", 5,       2#010011011010101, 15, "\2#10011010;\2#01101101;\2#01010000;", 4) and
        chkPutBitsMsb("\2#01001100;", 6,       2#010011011010101, 15, "\2#01001101;\2#00110110;\2#10101000;", 5) and
        chkPutBitsMsb("\2#11010100;", 6,       2#010011011010101, 15, "\2#11010101;\2#00110110;\2#10101000;", 5) and
        chkPutBitsMsb("\2#01101010;", 7,       2#010011011010101, 15, "\2#01101010;\2#10011011;\2#01010100;", 6) and
        chkPutBitsMsb("\2#10110010;", 7,       2#010011011010101, 15, "\2#10110010;\2#10011011;\2#01010100;", 6) and
        chkPutBitsMsb(            "", 0,       2#100101111011001, 15, "\2#10010111;\2#10110010;", 7) and
        chkPutBitsMsb("\2#00000000;", 1,       2#100101111011001, 15, "\2#01001011;\2#11011001;", 0) and
        chkPutBitsMsb("\2#10000000;", 1,       2#100101111011001, 15, "\2#11001011;\2#11011001;", 0) and
        chkPutBitsMsb("\2#01000000;", 2,       2#100101111011001, 15, "\2#01100101;\2#11101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 2,       2#100101111011001, 15, "\2#10100101;\2#11101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 3,       2#100101111011001, 15, "\2#01010010;\2#11110110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10100000;", 3,       2#100101111011001, 15, "\2#10110010;\2#11110110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01010000;", 4,       2#100101111011001, 15, "\2#01011001;\2#01111011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#10110000;", 4,       2#100101111011001, 15, "\2#10111001;\2#01111011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#01011000;", 5,       2#100101111011001, 15, "\2#01011100;\2#10111101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#10011000;", 5,       2#100101111011001, 15, "\2#10011100;\2#10111101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#01001100;", 6,       2#100101111011001, 15, "\2#01001110;\2#01011110;\2#11001000;", 5) and
        chkPutBitsMsb("\2#11010100;", 6,       2#100101111011001, 15, "\2#11010110;\2#01011110;\2#11001000;", 5) and
        chkPutBitsMsb("\2#01101010;", 7,       2#100101111011001, 15, "\2#01101011;\2#00101111;\2#01100100;", 6) and
        chkPutBitsMsb("\2#10110010;", 7,       2#100101111011001, 15, "\2#10110011;\2#00101111;\2#01100100;", 6) and
        chkPutBitsMsb(            "", 0,      2#0100101111011001, 16, "\2#01001011;\2#11011001;", 0) and
        chkPutBitsMsb("\2#00000000;", 1,      2#0100101111011001, 16, "\2#00100101;\2#11101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 1,      2#0100101111011001, 16, "\2#10100101;\2#11101100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 2,      2#0100101111011001, 16, "\2#01010010;\2#11110110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 2,      2#0100101111011001, 16, "\2#10010010;\2#11110110;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 3,      2#0100101111011001, 16, "\2#01001001;\2#01111011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#10100000;", 3,      2#0100101111011001, 16, "\2#10101001;\2#01111011;\2#00100000;", 3) and
        chkPutBitsMsb("\2#01010000;", 4,      2#0100101111011001, 16, "\2#01010100;\2#10111101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#10110000;", 4,      2#0100101111011001, 16, "\2#10110100;\2#10111101;\2#10010000;", 4) and
        chkPutBitsMsb("\2#01011000;", 5,      2#0100101111011001, 16, "\2#01011010;\2#01011110;\2#11001000;", 5) and
        chkPutBitsMsb("\2#10011000;", 5,      2#0100101111011001, 16, "\2#10011010;\2#01011110;\2#11001000;", 5) and
        chkPutBitsMsb("\2#01001100;", 6,      2#0100101111011001, 16, "\2#01001101;\2#00101111;\2#01100100;", 6) and
        chkPutBitsMsb("\2#11010100;", 6,      2#0100101111011001, 16, "\2#11010101;\2#00101111;\2#01100100;", 6) and
        chkPutBitsMsb("\2#01101010;", 7,      2#0100101111011001, 16, "\2#01101010;\2#10010111;\2#10110010;", 7) and
        chkPutBitsMsb("\2#10110010;", 7,      2#0100101111011001, 16, "\2#10110010;\2#10010111;\2#10110010;", 7) and
        chkPutBitsMsb(            "", 0,      2#1101100001100111, 16, "\2#11011000;\2#01100111;", 0) and
        chkPutBitsMsb("\2#00000000;", 1,      2#1101100001100111, 16, "\2#01101100;\2#00110011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10000000;", 1,      2#1101100001100111, 16, "\2#11101100;\2#00110011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01000000;", 2,      2#1101100001100111, 16, "\2#01110110;\2#00011001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 2,      2#1101100001100111, 16, "\2#10110110;\2#00011001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 3,      2#1101100001100111, 16, "\2#01011011;\2#00001100;\2#11100000;", 3) and
        chkPutBitsMsb("\2#10100000;", 3,      2#1101100001100111, 16, "\2#10111011;\2#00001100;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01010000;", 4,      2#1101100001100111, 16, "\2#01011101;\2#10000110;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10110000;", 4,      2#1101100001100111, 16, "\2#10111101;\2#10000110;\2#01110000;", 4) and
        chkPutBitsMsb("\2#01011000;", 5,      2#1101100001100111, 16, "\2#01011110;\2#11000011;\2#00111000;", 5) and
        chkPutBitsMsb("\2#10011000;", 5,      2#1101100001100111, 16, "\2#10011110;\2#11000011;\2#00111000;", 5) and
        chkPutBitsMsb("\2#01001100;", 6,      2#1101100001100111, 16, "\2#01001111;\2#01100001;\2#10011100;", 6) and
        chkPutBitsMsb("\2#11010100;", 6,      2#1101100001100111, 16, "\2#11010111;\2#01100001;\2#10011100;", 6) and
        chkPutBitsMsb("\2#01101010;", 7,      2#1101100001100111, 16, "\2#01101011;\2#10110000;\2#11001110;", 7) and
        chkPutBitsMsb("\2#10110010;", 7,      2#1101100001100111, 16, "\2#10110011;\2#10110000;\2#11001110;", 7) and
        chkPutBitsMsb(            "", 0,     2#01101100001100111, 17, "\2#01101100;\2#00110011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#00000000;", 1,     2#01101100001100111, 17, "\2#00110110;\2#00011001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 1,     2#01101100001100111, 17, "\2#10110110;\2#00011001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 2,     2#01101100001100111, 17, "\2#01011011;\2#00001100;\2#11100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 2,     2#01101100001100111, 17, "\2#10011011;\2#00001100;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 3,     2#01101100001100111, 17, "\2#01001101;\2#10000110;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10100000;", 3,     2#01101100001100111, 17, "\2#10101101;\2#10000110;\2#01110000;", 4) and
        chkPutBitsMsb("\2#01010000;", 4,     2#01101100001100111, 17, "\2#01010110;\2#11000011;\2#00111000;", 5) and
        chkPutBitsMsb("\2#10110000;", 4,     2#01101100001100111, 17, "\2#10110110;\2#11000011;\2#00111000;", 5) and
        chkPutBitsMsb("\2#01011000;", 5,     2#01101100001100111, 17, "\2#01011011;\2#01100001;\2#10011100;", 6) and
        chkPutBitsMsb("\2#10011000;", 5,     2#01101100001100111, 17, "\2#10011011;\2#01100001;\2#10011100;", 6) and
        chkPutBitsMsb("\2#01001100;", 6,     2#01101100001100111, 17, "\2#01001101;\2#10110000;\2#11001110;", 7) and
        chkPutBitsMsb("\2#11010100;", 6,     2#01101100001100111, 17, "\2#11010101;\2#10110000;\2#11001110;", 7) and
        chkPutBitsMsb("\2#01101010;", 7,     2#01101100001100111, 17, "\2#01101010;\2#11011000;\2#01100111;", 0) and
        chkPutBitsMsb("\2#10110010;", 7,     2#01101100001100111, 17, "\2#10110010;\2#11011000;\2#01100111;", 0) and
        chkPutBitsMsb(            "", 0,     2#10100010110011101, 17, "\2#10100010;\2#11001110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#00000000;", 1,     2#10100010110011101, 17, "\2#01010001;\2#01100111;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10000000;", 1,     2#10100010110011101, 17, "\2#11010001;\2#01100111;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01000000;", 2,     2#10100010110011101, 17, "\2#01101000;\2#10110011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 2,     2#10100010110011101, 17, "\2#10101000;\2#10110011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 3,     2#10100010110011101, 17, "\2#01010100;\2#01011001;\2#11010000;", 4) and
        chkPutBitsMsb("\2#10100000;", 3,     2#10100010110011101, 17, "\2#10110100;\2#01011001;\2#11010000;", 4) and
        chkPutBitsMsb("\2#01010000;", 4,     2#10100010110011101, 17, "\2#01011010;\2#00101100;\2#11101000;", 5) and
        chkPutBitsMsb("\2#10110000;", 4,     2#10100010110011101, 17, "\2#10111010;\2#00101100;\2#11101000;", 5) and
        chkPutBitsMsb("\2#01011000;", 5,     2#10100010110011101, 17, "\2#01011101;\2#00010110;\2#01110100;", 6) and
        chkPutBitsMsb("\2#10011000;", 5,     2#10100010110011101, 17, "\2#10011101;\2#00010110;\2#01110100;", 6) and
        chkPutBitsMsb("\2#01001100;", 6,     2#10100010110011101, 17, "\2#01001110;\2#10001011;\2#00111010;", 7) and
        chkPutBitsMsb("\2#11010100;", 6,     2#10100010110011101, 17, "\2#11010110;\2#10001011;\2#00111010;", 7) and
        chkPutBitsMsb("\2#01101010;", 7,     2#10100010110011101, 17, "\2#01101011;\2#01000101;\2#10011101;", 0) and
        chkPutBitsMsb("\2#10110010;", 7,     2#10100010110011101, 17, "\2#10110011;\2#01000101;\2#10011101;", 0) and
        chkPutBitsMsb(            "", 0,    2#010100010110011101, 18, "\2#01010001;\2#01100111;\2#01000000;", 2) and
        chkPutBitsMsb("\2#00000000;", 1,    2#010100010110011101, 18, "\2#00101000;\2#10110011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 1,    2#010100010110011101, 18, "\2#10101000;\2#10110011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 2,    2#010100010110011101, 18, "\2#01010100;\2#01011001;\2#11010000;", 4) and
        chkPutBitsMsb("\2#10000000;", 2,    2#010100010110011101, 18, "\2#10010100;\2#01011001;\2#11010000;", 4) and
        chkPutBitsMsb("\2#01000000;", 3,    2#010100010110011101, 18, "\2#01001010;\2#00101100;\2#11101000;", 5) and
        chkPutBitsMsb("\2#10100000;", 3,    2#010100010110011101, 18, "\2#10101010;\2#00101100;\2#11101000;", 5) and
        chkPutBitsMsb("\2#01010000;", 4,    2#010100010110011101, 18, "\2#01010101;\2#00010110;\2#01110100;", 6) and
        chkPutBitsMsb("\2#10110000;", 4,    2#010100010110011101, 18, "\2#10110101;\2#00010110;\2#01110100;", 6) and
        chkPutBitsMsb("\2#01011000;", 5,    2#010100010110011101, 18, "\2#01011010;\2#10001011;\2#00111010;", 7) and
        chkPutBitsMsb("\2#10011000;", 5,    2#010100010110011101, 18, "\2#10011010;\2#10001011;\2#00111010;", 7) and
        chkPutBitsMsb("\2#01001100;", 6,    2#010100010110011101, 18, "\2#01001101;\2#01000101;\2#10011101;", 0) and
        chkPutBitsMsb("\2#11010100;", 6,    2#010100010110011101, 18, "\2#11010101;\2#01000101;\2#10011101;", 0) and
        chkPutBitsMsb("\2#01101010;", 7,    2#010100010110011101, 18, "\2#01101010;\2#10100010;\2#11001110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110010;", 7,    2#010100010110011101, 18, "\2#10110010;\2#10100010;\2#11001110;\2#10000000;", 1) and
        chkPutBitsMsb(            "", 0,    2#101001010011011101, 18, "\2#10100101;\2#00110111;\2#01000000;", 2) and
        chkPutBitsMsb("\2#00000000;", 1,    2#101001010011011101, 18, "\2#01010010;\2#10011011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#10000000;", 1,    2#101001010011011101, 18, "\2#11010010;\2#10011011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#01000000;", 2,    2#101001010011011101, 18, "\2#01101001;\2#01001101;\2#11010000;", 4) and
        chkPutBitsMsb("\2#10000000;", 2,    2#101001010011011101, 18, "\2#10101001;\2#01001101;\2#11010000;", 4) and
        chkPutBitsMsb("\2#01000000;", 3,    2#101001010011011101, 18, "\2#01010100;\2#10100110;\2#11101000;", 5) and
        chkPutBitsMsb("\2#10100000;", 3,    2#101001010011011101, 18, "\2#10110100;\2#10100110;\2#11101000;", 5) and
        chkPutBitsMsb("\2#01010000;", 4,    2#101001010011011101, 18, "\2#01011010;\2#01010011;\2#01110100;", 6) and
        chkPutBitsMsb("\2#10110000;", 4,    2#101001010011011101, 18, "\2#10111010;\2#01010011;\2#01110100;", 6) and
        chkPutBitsMsb("\2#01011000;", 5,    2#101001010011011101, 18, "\2#01011101;\2#00101001;\2#10111010;", 7) and
        chkPutBitsMsb("\2#10011000;", 5,    2#101001010011011101, 18, "\2#10011101;\2#00101001;\2#10111010;", 7) and
        chkPutBitsMsb("\2#01001100;", 6,    2#101001010011011101, 18, "\2#01001110;\2#10010100;\2#11011101;", 0) and
        chkPutBitsMsb("\2#11010100;", 6,    2#101001010011011101, 18, "\2#11010110;\2#10010100;\2#11011101;", 0) and
        chkPutBitsMsb("\2#01101010;", 7,    2#101001010011011101, 18, "\2#01101011;\2#01001010;\2#01101110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110010;", 7,    2#101001010011011101, 18, "\2#10110011;\2#01001010;\2#01101110;\2#10000000;", 1) and
        chkPutBitsMsb(            "", 0,   2#0101001010011011101, 19, "\2#01010010;\2#10011011;\2#10100000;", 3) and
        chkPutBitsMsb("\2#00000000;", 1,   2#0101001010011011101, 19, "\2#00101001;\2#01001101;\2#11010000;", 4) and
        chkPutBitsMsb("\2#10000000;", 1,   2#0101001010011011101, 19, "\2#10101001;\2#01001101;\2#11010000;", 4) and
        chkPutBitsMsb("\2#01000000;", 2,   2#0101001010011011101, 19, "\2#01010100;\2#10100110;\2#11101000;", 5) and
        chkPutBitsMsb("\2#10000000;", 2,   2#0101001010011011101, 19, "\2#10010100;\2#10100110;\2#11101000;", 5) and
        chkPutBitsMsb("\2#01000000;", 3,   2#0101001010011011101, 19, "\2#01001010;\2#01010011;\2#01110100;", 6) and
        chkPutBitsMsb("\2#10100000;", 3,   2#0101001010011011101, 19, "\2#10101010;\2#01010011;\2#01110100;", 6) and
        chkPutBitsMsb("\2#01010000;", 4,   2#0101001010011011101, 19, "\2#01010101;\2#00101001;\2#10111010;", 7) and
        chkPutBitsMsb("\2#10110000;", 4,   2#0101001010011011101, 19, "\2#10110101;\2#00101001;\2#10111010;", 7) and
        chkPutBitsMsb("\2#01011000;", 5,   2#0101001010011011101, 19, "\2#01011010;\2#10010100;\2#11011101;", 0) and
        chkPutBitsMsb("\2#10011000;", 5,   2#0101001010011011101, 19, "\2#10011010;\2#10010100;\2#11011101;", 0) and
        chkPutBitsMsb("\2#01001100;", 6,   2#0101001010011011101, 19, "\2#01001101;\2#01001010;\2#01101110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#11010100;", 6,   2#0101001010011011101, 19, "\2#11010101;\2#01001010;\2#01101110;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01101010;", 7,   2#0101001010011011101, 19, "\2#01101010;\2#10100101;\2#00110111;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10110010;", 7,   2#0101001010011011101, 19, "\2#10110010;\2#10100101;\2#00110111;\2#01000000;", 2) and
        chkPutBitsMsb(            "", 0,   2#1101101100111001001, 19, "\2#11011011;\2#00111001;\2#00100000;", 3) and
        chkPutBitsMsb("\2#00000000;", 1,   2#1101101100111001001, 19, "\2#01101101;\2#10011100;\2#10010000;", 4) and
        chkPutBitsMsb("\2#10000000;", 1,   2#1101101100111001001, 19, "\2#11101101;\2#10011100;\2#10010000;", 4) and
        chkPutBitsMsb("\2#01000000;", 2,   2#1101101100111001001, 19, "\2#01110110;\2#11001110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#10000000;", 2,   2#1101101100111001001, 19, "\2#10110110;\2#11001110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#01000000;", 3,   2#1101101100111001001, 19, "\2#01011011;\2#01100111;\2#00100100;", 6) and
        chkPutBitsMsb("\2#10100000;", 3,   2#1101101100111001001, 19, "\2#10111011;\2#01100111;\2#00100100;", 6) and
        chkPutBitsMsb("\2#01010000;", 4,   2#1101101100111001001, 19, "\2#01011101;\2#10110011;\2#10010010;", 7) and
        chkPutBitsMsb("\2#10110000;", 4,   2#1101101100111001001, 19, "\2#10111101;\2#10110011;\2#10010010;", 7) and
        chkPutBitsMsb("\2#01011000;", 5,   2#1101101100111001001, 19, "\2#01011110;\2#11011001;\2#11001001;", 0) and
        chkPutBitsMsb("\2#10011000;", 5,   2#1101101100111001001, 19, "\2#10011110;\2#11011001;\2#11001001;", 0) and
        chkPutBitsMsb("\2#01001100;", 6,   2#1101101100111001001, 19, "\2#01001111;\2#01101100;\2#11100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#11010100;", 6,   2#1101101100111001001, 19, "\2#11010111;\2#01101100;\2#11100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01101010;", 7,   2#1101101100111001001, 19, "\2#01101011;\2#10110110;\2#01110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10110010;", 7,   2#1101101100111001001, 19, "\2#10110011;\2#10110110;\2#01110010;\2#01000000;", 2) and
        chkPutBitsMsb(            "", 0,  2#01101101100111001001, 20, "\2#01101101;\2#10011100;\2#10010000;", 4) and
        chkPutBitsMsb("\2#00000000;", 1,  2#01101101100111001001, 20, "\2#00110110;\2#11001110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#10000000;", 1,  2#01101101100111001001, 20, "\2#10110110;\2#11001110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#01000000;", 2,  2#01101101100111001001, 20, "\2#01011011;\2#01100111;\2#00100100;", 6) and
        chkPutBitsMsb("\2#10000000;", 2,  2#01101101100111001001, 20, "\2#10011011;\2#01100111;\2#00100100;", 6) and
        chkPutBitsMsb("\2#01000000;", 3,  2#01101101100111001001, 20, "\2#01001101;\2#10110011;\2#10010010;", 7) and
        chkPutBitsMsb("\2#10100000;", 3,  2#01101101100111001001, 20, "\2#10101101;\2#10110011;\2#10010010;", 7) and
        chkPutBitsMsb("\2#01010000;", 4,  2#01101101100111001001, 20, "\2#01010110;\2#11011001;\2#11001001;", 0) and
        chkPutBitsMsb("\2#10110000;", 4,  2#01101101100111001001, 20, "\2#10110110;\2#11011001;\2#11001001;", 0) and
        chkPutBitsMsb("\2#01011000;", 5,  2#01101101100111001001, 20, "\2#01011011;\2#01101100;\2#11100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10011000;", 5,  2#01101101100111001001, 20, "\2#10011011;\2#01101100;\2#11100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01001100;", 6,  2#01101101100111001001, 20, "\2#01001101;\2#10110110;\2#01110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#11010100;", 6,  2#01101101100111001001, 20, "\2#11010101;\2#10110110;\2#01110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01101010;", 7,  2#01101101100111001001, 20, "\2#01101010;\2#11011011;\2#00111001;\2#00100000;", 3) and
        chkPutBitsMsb("\2#10110010;", 7,  2#01101101100111001001, 20, "\2#10110010;\2#11011011;\2#00111001;\2#00100000;", 3) and
        chkPutBitsMsb(            "", 0,  2#11100111111011001001, 20, "\2#11100111;\2#11101100;\2#10010000;", 4) and
        chkPutBitsMsb("\2#00000000;", 1,  2#11100111111011001001, 20, "\2#01110011;\2#11110110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#10000000;", 1,  2#11100111111011001001, 20, "\2#11110011;\2#11110110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#01000000;", 2,  2#11100111111011001001, 20, "\2#01111001;\2#11111011;\2#00100100;", 6) and
        chkPutBitsMsb("\2#10000000;", 2,  2#11100111111011001001, 20, "\2#10111001;\2#11111011;\2#00100100;", 6) and
        chkPutBitsMsb("\2#01000000;", 3,  2#11100111111011001001, 20, "\2#01011100;\2#11111101;\2#10010010;", 7) and
        chkPutBitsMsb("\2#10100000;", 3,  2#11100111111011001001, 20, "\2#10111100;\2#11111101;\2#10010010;", 7) and
        chkPutBitsMsb("\2#01010000;", 4,  2#11100111111011001001, 20, "\2#01011110;\2#01111110;\2#11001001;", 0) and
        chkPutBitsMsb("\2#10110000;", 4,  2#11100111111011001001, 20, "\2#10111110;\2#01111110;\2#11001001;", 0) and
        chkPutBitsMsb("\2#01011000;", 5,  2#11100111111011001001, 20, "\2#01011111;\2#00111111;\2#01100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10011000;", 5,  2#11100111111011001001, 20, "\2#10011111;\2#00111111;\2#01100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01001100;", 6,  2#11100111111011001001, 20, "\2#01001111;\2#10011111;\2#10110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#11010100;", 6,  2#11100111111011001001, 20, "\2#11010111;\2#10011111;\2#10110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01101010;", 7,  2#11100111111011001001, 20, "\2#01101011;\2#11001111;\2#11011001;\2#00100000;", 3) and
        chkPutBitsMsb("\2#10110010;", 7,  2#11100111111011001001, 20, "\2#10110011;\2#11001111;\2#11011001;\2#00100000;", 3) and
        chkPutBitsMsb(            "", 0, 2#011100111111011001001, 21, "\2#01110011;\2#11110110;\2#01001000;", 5) and
        chkPutBitsMsb("\2#00000000;", 1, 2#011100111111011001001, 21, "\2#00111001;\2#11111011;\2#00100100;", 6) and
        chkPutBitsMsb("\2#10000000;", 1, 2#011100111111011001001, 21, "\2#10111001;\2#11111011;\2#00100100;", 6) and
        chkPutBitsMsb("\2#01000000;", 2, 2#011100111111011001001, 21, "\2#01011100;\2#11111101;\2#10010010;", 7) and
        chkPutBitsMsb("\2#10000000;", 2, 2#011100111111011001001, 21, "\2#10011100;\2#11111101;\2#10010010;", 7) and
        chkPutBitsMsb("\2#01000000;", 3, 2#011100111111011001001, 21, "\2#01001110;\2#01111110;\2#11001001;", 0) and
        chkPutBitsMsb("\2#10100000;", 3, 2#011100111111011001001, 21, "\2#10101110;\2#01111110;\2#11001001;", 0) and
        chkPutBitsMsb("\2#01010000;", 4, 2#011100111111011001001, 21, "\2#01010111;\2#00111111;\2#01100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110000;", 4, 2#011100111111011001001, 21, "\2#10110111;\2#00111111;\2#01100100;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01011000;", 5, 2#011100111111011001001, 21, "\2#01011011;\2#10011111;\2#10110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#10011000;", 5, 2#011100111111011001001, 21, "\2#10011011;\2#10011111;\2#10110010;\2#01000000;", 2) and
        chkPutBitsMsb("\2#01001100;", 6, 2#011100111111011001001, 21, "\2#01001101;\2#11001111;\2#11011001;\2#00100000;", 3) and
        chkPutBitsMsb("\2#11010100;", 6, 2#011100111111011001001, 21, "\2#11010101;\2#11001111;\2#11011001;\2#00100000;", 3) and
        chkPutBitsMsb("\2#01101010;", 7, 2#011100111111011001001, 21, "\2#01101010;\2#11100111;\2#11101100;\2#10010000;", 4) and
        chkPutBitsMsb("\2#10110010;", 7, 2#011100111111011001001, 21, "\2#10110010;\2#11100111;\2#11101100;\2#10010000;", 4) and
        chkPutBitsMsb(            "", 0, 2#101000010010111000111, 21, "\2#10100001;\2#00101110;\2#00111000;", 5) and
        chkPutBitsMsb("\2#00000000;", 1, 2#101000010010111000111, 21, "\2#01010000;\2#10010111;\2#00011100;", 6) and
        chkPutBitsMsb("\2#10000000;", 1, 2#101000010010111000111, 21, "\2#11010000;\2#10010111;\2#00011100;", 6) and
        chkPutBitsMsb("\2#01000000;", 2, 2#101000010010111000111, 21, "\2#01101000;\2#01001011;\2#10001110;", 7) and
        chkPutBitsMsb("\2#10000000;", 2, 2#101000010010111000111, 21, "\2#10101000;\2#01001011;\2#10001110;", 7) and
        chkPutBitsMsb("\2#01000000;", 3, 2#101000010010111000111, 21, "\2#01010100;\2#00100101;\2#11000111;", 0) and
        chkPutBitsMsb("\2#10100000;", 3, 2#101000010010111000111, 21, "\2#10110100;\2#00100101;\2#11000111;", 0) and
        chkPutBitsMsb("\2#01010000;", 4, 2#101000010010111000111, 21, "\2#01011010;\2#00010010;\2#11100011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#10110000;", 4, 2#101000010010111000111, 21, "\2#10111010;\2#00010010;\2#11100011;\2#10000000;", 1) and
        chkPutBitsMsb("\2#01011000;", 5, 2#101000010010111000111, 21, "\2#01011101;\2#00001001;\2#01110001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#10011000;", 5, 2#101000010010111000111, 21, "\2#10011101;\2#00001001;\2#01110001;\2#11000000;", 2) and
        chkPutBitsMsb("\2#01001100;", 6, 2#101000010010111000111, 21, "\2#01001110;\2#10000100;\2#10111000;\2#11100000;", 3) and
        chkPutBitsMsb("\2#11010100;", 6, 2#101000010010111000111, 21, "\2#11010110;\2#10000100;\2#10111000;\2#11100000;", 3) and
        chkPutBitsMsb("\2#01101010;", 7, 2#101000010010111000111, 21, "\2#01101011;\2#01000010;\2#01011100;\2#01110000;", 4) and
        chkPutBitsMsb("\2#10110010;", 7, 2#101000010010111000111, 21, "\2#10110011;\2#01000010;\2#01011100;\2#01110000;", 4) then
      writeln("putBitMsb works correct.");
    end if;
  end func;


const proc: main is func
  begin
    writeln;
    chkGetBitLsb;
    chkGetBitsLsb;
    chkPutBitLsb;
    chkPutBitsLsb;
    chkGetBitMsb;
    chkGetBitsMsb;
    chkPutBitMsb;
    chkPutBitsMsb;
  end func;
