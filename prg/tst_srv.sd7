
(********************************************************************)
(*                                                                  *)
(*  tst_srv.sd7   Test server to demonstrate a socket server        *)
(*  Copyright (C) 2007  Thomas Mertes                               *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the           *)
(*  Free Software Foundation, Inc., 51 Franklin Street,             *)
(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)
(*                                                                  *)
(********************************************************************)


$ include "seed7_05.s7i";
  include "socket.s7i";
  include "listener.s7i";


const proc: main is func
  local
    var listener: inetListener is listener.value;
    var file: sock is STD_NULL;
    var integer: num1 is 0;
    var integer: num2 is 0;
  begin
    inetListener := openInetListener(2357);
    listen(inetListener, 10);
    while TRUE do
      sock := accept(inetListener);
      readln(sock, num1);
      readln(sock, num2);
      writeln(sock, num1 + num2);
      close(sock);
    end while;
  end func;
