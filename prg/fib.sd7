
(********************************************************************)
(*                                                                  *)
(*  fib.sd7       Compute fibonacci numbers                         *)
(*  Copyright (C) 1990, 1991, 1992, 1993, 1994, 2004  Thomas Mertes *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the Free      *)
(*  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,  *)
(*  MA 02111-1307 USA                                               *)
(*                                                                  *)
(********************************************************************)


$ include "seed7_05.s7i";

const func integer: fib (in integer: number) is func
  result
    var integer: result is 1;
  begin
    if number <> 1 and number <> 2 then
      result := fib(pred(number)) + fib(number - 2);
    end if;
  end func;

const proc: main is func
  local
    var integer: number is 0;
  begin
    for number range 1 to 20 do
      write("fib(");
      write(number);
      write(") = ");
      write(fib(number));
      writeln;
    end for;
  end func;
