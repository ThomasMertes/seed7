
(********************************************************************)
(*                                                                  *)
(*  more.s7i      Filter file which shows another file screenwise   *)
(*  Copyright (C) 1992, 1993, 1994, 2005  Thomas Mertes             *)
(*                                                                  *)
(*  This file is part of the Seed7 Runtime Library.                 *)
(*                                                                  *)
(*  The Seed7 Runtime Library is free software; you can             *)
(*  redistribute it and/or modify it under the terms of the GNU     *)
(*  Lesser General Public License as published by the Free Software *)
(*  Foundation; either version 2.1 of the License, or (at your      *)
(*  option) any later version.                                      *)
(*                                                                  *)
(*  The Seed7 Runtime Library is distributed in the hope that it    *)
(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)
(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)
(*  PURPOSE.  See the GNU Lesser General Public License for more    *)
(*  details.                                                        *)
(*                                                                  *)
(*  You should have received a copy of the GNU Lesser General       *)
(*  Public License along with this program; if not, write to the    *)
(*  Free Software Foundation, Inc., 59 Temple Place, Suite 330,     *)
(*  Boston, MA 02111-1307 USA                                       *)
(*                                                                  *)
(********************************************************************)


const type: MORE_FILE is sub NULL_FILE struct
    var file: out_file is STD_NULL;
    var file: command_file is STD_NULL;
    var integer: pagesize is 0;
    var integer: line is 0;
    var boolean: active is TRUE;
  end struct;


const func MORE_FILE: open_more (ref file: out_fil, ref file: cmd_fil,
    in integer: pg_size) is func
  result
    var MORE_FILE: more_fil is MORE_FILE.value;
  begin
    more_fil := MORE_FILE.value;
    more_fil.out_file := out_fil;
    more_fil.command_file := cmd_fil;
    more_fil.pagesize := pg_size;
    more_fil.line := 0;
    more_fil.active := TRUE;
  end func;


const proc: page (inout MORE_FILE: more_fil) is func
  begin
    more_fil.active := TRUE;
    more_fil.line := 0;
  end func;


const proc: (inout MORE_FILE: more_fil) << NL is func
  local
    var string: command is "";
  begin
    if more_fil.active then
      more_fil.out_file << NL;
      incr(more_fil.line);
      if more_fil.line >= more_fil.pagesize then
        more_fil.out_file << " *** MORE *** ";
        readln(more_fil.command_file, command);
        more_fil.out_file << NL;
        if lower(command) = "q" then
          more_fil.active := FALSE;
        end if;
        more_fil.line := 0;
      end if;
    end if;
  end func;


const proc: (ref MORE_FILE: more_fil) << (ref string: OBJ) is func
  begin
    if more_fil.active then
      more_fil.out_file << OBJ;
    end if;
  end func;
