20090413:
- A description of data struct elements was added to the chapters rational, bigRational,
  complex, color and time in the manual.
- A description of the functions fileTypeSL, getATime, getCTime, getMTime, setATime,
  setMTime and removeAnyFile was added to the chapter 'OS access' in the manual.
- The compiler (comp.sd7) was improved to correctly handle hashtables as elements of
  structs.
- The compiler (comp.sd7) was improved to to generate dispatcher functions which copy a
  reference to a value when the interface needs the value itself (the value is used and
  possibly freed afterwards by the caller).
- The functions getXmlTagHeadOrContent in the scanfile.s7i and scanstri.s7i libraries were
  improved to correctly read the head of empty element tags when they have no attributes
  (E.g: The tag head of "<aTag/>" is "<aTag" ).
- The functions getXmlCharacterReference and skipXmlTag were added to the scanfile.s7i
  library.
- The ENABLE_SORT template function, which allows the generation of a sort function, was
  added to the seed7_05.s7i library.
- The functions fileTypeSL, cloneFile and copyFile were added to the seed7_05.s7i library.
- The functions str_dd_mm_yyyy, str_hh_mm, timestamp1970, time and getCTime were added to
  the time.s7i library.
- The function alternate_localtime_r in the file tim_win.c was improved to correctly
  handle daylight saving time.
- The tarx.sd7 example program was improved to use the function timestamp1970.

20090329:
- The chapters explaining exponentiation and operating system functions in the manual
  were improved.
- The function getSymbolInXmlTag in scanfile.s7i was fixed to really return "" when EOF
  was reached.
- A documentation comment was added to the function getNextXmlAttribute in scanfile.s7i
  and the function was improved to correctly handle tags ending with > and /> .
- The functions cmd_sh and popen were moved from progs.s7i and seed7_05.s7i to the new
  library shell.s7i .
- The function 'shell' was introduced execute shell commands and to return the exit
  code of the shell.
- The chkbig.sd7 program was improved to contain checks for the exponentiation of -1.
- The chkexc.sd7 program was improved to contain more checks for exceptions raised by
  integer exponentiation.
- The compiler (comp.sd7) was improved to generate better code for some bigInteger
  operations and to support the actions cmd_readlink and cmd_remove_any_file.
- Parameter names were added to the function prototypes of the header file big_drv.h .
- The functions bigSuccTemp and bigPredTemp were added to the files big_rtl.c and
  big_gmp.c .
- A documentation comment was added to the function cp_to_command in the file striutl.c .

20090309:
- The chapters about boolean, complex, char, string and time in the manual were improved.
- A new library named utf16.s7i, which contains support to read and write UTF-16 files,
  was added.
- The functions removeAnyFile, readlink and symlink were added to the seed7_05.s7i
  library.
- The seed7_05.s7i function fileType was improved to return the values FILE_ABSENT,
  FILE_UNKNOWN, FILE_REGULAR, FILE_DIR, FILE_CHAR, FILE_BLOCK, FILE_FIFO, FILE_SYMLINK
  and FILE_SOCKET.
- The functions strTimeZone, getATime, setATime, getMTime and setMTime were added to the
  time.s7i library.
- The time.s7i functions str_date, str_time and toGMT were renamed to strDate, strTime
  and getUTC respectively.
- The time.s7i function 'str' for the type 'time' was improved to include also a time
  zone description.
- The K&R function headers in several files were corrected.
- The files tim_rtl.c and tim_rtl.h were introduced to support conversion between 'time'
  and unix timestamps with the functions mkutc, timFromTimestamp and timToTimestamp.
- The driver functions timAwait and timNow were improved in the files tim_dos.c,
  tim_unx.c and tim_win.c .
- The functions remove_dir, remove_any_file, copy_dir, copy_any_file, cmdBigFileSize,
  cmdFileType, cmdGetcwd and cmdSymlink in the file cmd_rtl.c were improved.
- The functions cmdGetATime, cmdGetMTime, cmdReadlink, cmdRemoveAnyFile, cmdSetATime
  and cmdSetMTime were added to the file cmd_rtl.c .
- The feature test macro WCHAR_OS_PATH was renamed to OS_PATH_WCHAR in several files.
- Several makefiles were improved to create defines for HAS_SYMLINKS, USE_LOCALTIME_R,
  INT64TYPE_SUFFIX_LL, OS_PATH_UTF8, OS_PATH_WCHAR, os_getcwd, os_opendir, os_readdir,
  os_closedir, os_DIR, os_dirent_struct and os_lstat in the file version.h .
- The interpreter and the compiler (comp.sd7) were improved to support the new
  primitive actions CMD_GET_ATIME, CMD_GET_MTIME, CMD_READLINK, CMD_REMOVE_ANY_FILE,
  CMD_SET_ATIME and CMD_SET_MTIME.
- An explanation of the defines OS_PATH_WCHAR, OS_PATH_UTF8, os_getcwd, os_opendir,
  os_readdir, os_closedir, os_DIR, os_dirent_struct and os_lstat was added to the file
  'src/read_me.txt'.
- The function alternate_localtime_r was introduced to be used with bcc32 (which has
  strange ideas about when daylight saving time begins).
- The files bas7.sd7 and planets.sd7 were adjusted to use the improved time functions.
- Spelling errors in the FAQ and in src/read_me.txt were fixed.

20090222:
- A new example program (chkhsh.sd7), which checks hash table operations, was added.
- The logic to link to librarys in the compiler (comp.sd7) was improved.
- A compare function was added for the type 'boolean'.
- The file big_rtl.c was improved to avoid unnecessary shifts wider than the size of
  the type (the result of this shifts was not used anyway).
- The functions remove_dir, remove_any_file, copy_file, copy_dir, copy_any_file and
  move_any_file in the file cmd_rtl.c were improved to use 'os_path_stri' instead of
  'char *'.
- The driver functions cmdCopy, cmdMove and cmdRemove were improved to use wide char
  (UTF-16) functions under windows and normal (UTF-8) functions under UNIX/Linux/BSD.
- The file common.h was improved to contain default defines for os_rmdir, os_chown,
  os_chmod, os_utime, os_utimbuf_struct, os_remove and os_rename.
- The functions dirOpen, dirRead and dirClose in the file dir_rtl.c were improved
  to use os_opendir, os_readdir and os_closedir (defined in dir_rtl.h).
- Commands to create defines for MKDIR_WITH_ONE_PARAMETER, CHOWN_MISSING and
  CHMOD_MISSING in the file version.h were removed from the makefiles.
- The K&R function headers in several files were corrected.
- An explanation of the defines WCHAR_OS_PATH, os_chdir, os_mkdir, os_rmdir, os_fstat,
  os_stat, os_stat_struct, os_chown, os_chmod, os_utime, os_utimbuf_struct, os_remove
  and os_rename was added to the file 'src/read_me.txt'.

20090201:
- A new saving phase was added to the savehd7.sd7 example program. Savehd7 can be used
  to save a potentially damaged harddisk partition to an image file.
- A new chapter about class methods was added to the manual.
- The chapter about the type 'type' in the manual, was improved.
- A check for NULL pointers was added to the function raise_with_arguments.

20090118:
- The savehd7.sd7 example program, which can be used to save a potentially damaged
  harddisk partition to an image file, was improved.
- A FAQ about compiling the Seed7 interpreter was added.
- The function bigFileSize was added to the bigfile.s7i library.
- The functions file_size and file_type were renamed to fileSize and fileType in the
  seed7_05.s7i library.
- The driver functions cmdBigFileSize, cmdChdir, cmdFileType cmdFileSize, cmdMkdir were
  improved to use wide char (UTF-16) functions under windows and normal (UTF-8) functions
  under UNIX/Linux/BSD.
- In the files big_rtl.c and big_gmp.c the function bigFromInt32 was added and the
  functions bigIConv and bigOrd were removed.
- In the file big_drv.h the macros bigIConv and bigOrd were added.
- In the file big_rtl.c the functions bigFromUInt32 and bigFromUInt64 were fixed.
- The feature test makro WIDE_CHAR_STRINGS was renamed to UTF32_STRINGS in various files.
- The primitive action CMD_LNG was renamed to CMD_FILESIZE.
- Several makefiles were improved to create defines for os_chdir, os_mkdir, os_fstat,
  os_stat and os_stat_struct in the file version.h .

20090104:
- A new example program (savehd7.sd7), which can be used to save a partially damaged
  harddisk partition to an image file, was added.
- Several spelling errors in the FAQ and in the manual were fixed.
- The library line.s7i was improved to be useable as file which flushes every line.
- The bas7.sd7 (basic interpreter) example program was improved.
- The preprocessor macros HAS_INT64TYPE and INT64TYPE_IS_INT64 were replaced
  by INT64TYPE in various files.
- The makefiles were improved to create defines for INT64TYPE and UINT64TYPE in the
  file version.h .
- A makefile mk_osx.mak was added to support compilation under Mac OS X with Xcode.
- The type PRIMITIVE_FILE was improved to support the 'setbuf' function.
- Errors in the functions setIConv, prot_set and bigToInt64 were fixed.

20081221:
- The chapter about the Seed7 structured syntax definition in the manual was improved
  (thanks to James Harris for the suggestions and the proofreading).
- A new library named gethttp.s7i, which contains support to get data with the
  HTTP protocol, was added.
- A new library named html.s7i, which contains support functions for HTML, was added.
- The bas7.sd7 (basic interpreter) example program was improved.
- The compiler (comp.sd7) was improved to support the addresses of ITF_CPY and
  ITF_CREATE. That way hash tables with interface values are supported.

20081208:
- A new chapter about the Seed7 structured syntax definition was added to the manual.
- The chapter about declarations in the manual was improved.
- The function getValueOfHeaderAttribute was added to the scanstri.s7i library.
- The seed7_05.s7i library was improved to support case statements for the type boolean.
- The wiz.sd7 example program was improved.

20081116:
- The support for compilation with the bcc32 C compiler from BDS was improved such that
  the chk_all.sd7 check program succeeds.
- The FAQ about the operating systems supported by Seed7, was improved.
- A chapter describing how to replace pointers with interface types was added to the
  manual.
- The obsolete use of the operator >> and << for file input and output was removed
  from the seed7_05.s7i library.
- The general check program chk_all.sd7 was improved to check also for the successful
  compilation of the compiler.
- The compiler (comp.sd7) was improved to generate C programs which are acceptable for
  the bcc32 C compiler.
- The compiler was improved to check that a temporary tmp_*.c file is marked with a
  temp_marker.
- The documentation file src/read_me.txt was improved to explain the #define value
  CHECK_INT_DIV_BY_ZERO.

20081102:
- A new gzip.s7i library, which contains a gzip uncompression function, was added.
- The functions getXmlTagHeadOrContent, getSymbolInXmlTag, getHtmlAttributeValue and
  getNextXmlAttribute were added to the scanfile.s7i library.
- In the library scanstri.s7i the function getXmlTagHeadOrContent was added and the
  function getSymbolInHtmlTag was renamed to getSymbolInXmlTag.
- The call stack written by the (hi) interpreter, when an uncatched exception occurs, was
  improved.
- The compiler (comp.sd7) was improved to write a file name and a line when an uncatched
  exception occurs.
- The handling of sockets in the compiler was improved to support them also for the
  cl C compiler from msvc.
- The makefiles were improved to define 'make clean' additionally to 'make clear' to
  remove the object files and libraries which were created during the compilation process.
- The documentation file src/read_me.txt was improved to explain more #define values used
  in the file version.h .

20081019:
- The support for compilation with the cl C compiler from msvc was improved such that
  the chk_all.sd7 check program succeeds.
- The chkexc.sd7 and chkflt.sd7 example programs were improved to check for more cases
  of division by zero.
- The compiler (comp.sd7) was improved to take the config values ISNAN_WITH_UNDERLINE,
  CHECK_INT_DIV_BY_ZERO and LINKER_FLAGS into account.
- The compiler was improved to avoid boolean expressions with too much parenthesis levels.
- The functions opendir and readdir in the files dir_dos.c and dir_win.c were improved to
  make buffer overflows impossible.
- The files dir_rtl.c and dir_rtl.h were introduced to support reading directorys based
  on opendir(), readdir() and closedir() and optionally on the wide char functions
  wopendir(), wreaddir() and wclosedir().
- An implementation of the functions wopendir(), wreaddir() and wclosedir() based on
  the functions FindFirstFile() and FindNextFile() was added to dir_win.c .
- The documentation file src/read_me.txt was improved to explain compilation with bcc32.
- The makefiles mk_mingw.mak, mk_msys.mak, mk_nmake.mak, mk_msvc.mak and mk_bcc32.mak
  were improved to support the new wide character directory read functions.
- The demo mode of the mahjong.sd7 example program was improved.
- The file scr_win.c was improved to support the keypad cursor keys better.
- The functions wstri_expand and wstri_to_stri were added to the file striutl.c .

20081005:
- The chapter about primitive actions in the manual was improved.
- The definition of STD_NULL in the seed7_05.s7i library was improved to support
  read and write operations with STD_NULL.
- The bas7.sd7 (basic interpreter) example program was improved to support file numbers
  outside the range of 1 to 256 and to convert arrays to images when necessary.
- The compiler (comp.sd7) was improved to support local interface declarations and
  dynamic functions which refer to constant values.
- Several improvements were done in the compiler to support generating C programs
  acceptable for the cl compiler from msvc and for the bcc32 compiler.
- A check for double function pointers was added to the function get_primact() in the
  file actutl.c .
- A boss mode was added to the lander.sd7 and sudoku7.sd7 example programs.
- The file common.h was improved to introduce the types int64type, uint64type,
  int32type, uint32type, int16type, uint16type, int8type and uint8type.
- The functions bigULConv and bigLOrd were renamed to bigFromUInt64 and bigToInt64
  respectively.
- The function bigCLit() was improved to avoid C code that the cl C compiler from msvc
  miscompiles to the wrong machine code.
- The functions setupFloat and _matherr and the makefile mk_bcc32.mak were added
  to support compilation with bcc32.
- The feature test macro HAS_LONGTYPE_64 was renamed to HAS_INT64TYPE in various files.
- The feature macros INHIBIT_C_WARNINGS and NO_EMPTY_STRUCTS were added or improved.
- The makefiles mk_mingw.mak, mk_msvc.mak and mk_nmake.mak were changed to create and
  use the file setpaths.c instead of several other files.

20080921:
- The chapters about object orientation and primitive actions in the manual,
  were improved.
- The primitive actions BIG_MCPY, FLT_HSIN, FLT_HCOS and FLT_HTAN were renamed to
  BIG_MULT_ASSIGN, FLT_SINH, FLT_COSH and FLT_TANH respectively.
- The bas7.sd7 (basic interpreter) example program was improved.
- The compiler (comp.sd7) was improved to support the primitive actions CHR_CONV,
  FLT_PLUS, PRG_MATCH_EXPR, REF_CAT_PARSE, REF_CONV and REF_SETVAR.
- The compiler (comp.sd7) was improved to support HASHOBJECT constants.
- A binary gcd function (binaryGcd) was added to the gcd.sd7 example program.
- The X11 keyboard driver was improved to support the num-lock functionality.
- The functions hash_data_to_list and hash_key_to_list were added to the file listutl.c
- The is_var function defined in progs.s7i library was renamed to isVar.
- The functions matchExpr, setVar, hash_data_to_list and hash_key_to_list were added
  to the progs.s7i library.

20080902:
- The FAQ about development speed and type checking was improved.
- The chapters about boolean, bigInteger, rational, bigRational, float, char, complex,
  string, reference, ref_list and program in the manual, were improved.
- The functions rflTail and rflRange were improved to raise MEMORY_ERROR instead of
  RANGE_ERROR in out of memory situations.
- The 'conv' operator was improved to convert an integer to a float, rational, complex
  or bigRational, to convert a float to a complex and to convert a bigInteger to
  bigRational.
- The function getSymbolWithHtmlEntities was added to the scanfile.s7i library.
- The getc function for the type null_file was improved.
- The 'conj' operator was added for the type complex.
- The compiler (comp.sd7) was improved to support the primitive action FLT_ICONV.
- Several changes were done to support compilation when DO_HEAP_STATISTIC is defined.
- The documentation file src/read_me.txt was improved.
- The 'reference' functions category, getType, is_var, local_vars, local_consts, body,
  array_to_list, array_min_index, array_min_index, struct_to_list, interface_to_struct,
  getValue, setCategory, setType were improved to raise the exception RANGE_ERROR
  when a reference is NIL or does not have the required category.

20080817:
- The FAQ about static type checking was improved and an FAQ about development speed
  and type checking was added.
- A chapter about the type 'category' was added to the manual.
- The chapters about boolean, string, set and reference in the manual, were improved.
- The functions toUuencoded and fromUuencoded were added to the encoding.s7i library.
- The html entity 'ang' and several comments were added to the html_ent.s7i library.
- The error management of the chkint.sd7 program was improved.
- The 'configValue' function was improved to support values for TWOS_COMPLEMENT_INTTYPE,
  INTTYPE_64BIT and INTTYPE_LITERAL_SUFFIX.
- The function growStri was improved to work correctly in out of memory situations.
- The makefiles makefile, mk_cygw.mak, mk_linux.mak, mk_mingw.mak, mk_msvc.mak,
  mk_msys.mak and mk_nmake.mak were improved to define TWOS_COMPLEMENT_INTTYPE when
  appropriate.
- The file setlib.c was improved to work correctly with bitsettype's of different sizes.

20080803:
- The charsets.s7i library was renamed to chartype.s7i .
- A new charsets.s7i library, which contains 44 codepages and the functions conv2unicode
  and conv2unicodeByName, was added.
- The encoding.s7i library, which contains encoding and decoding functions for Base64
  and Quoted-printable, was added.
- The functions 'ord' and 'conv' and a 'for' loop were added to the type 'category'
  defined in the progs.s7i library.
- The functions getWord, getQuotedText and getHttpSymbol were added to the scanstri.s7i
  library.
- The functions getSymbolOrComment, getSymbol and getSymbolInHtmlTag of the scanstri.s7i
  library were improved to return symbols without leading whitespace.
- The function getHtmlTagOrContent was renamed to getXmlTagOrContent in the scanfile.s7i
  library.
- A 'for key' loop for arrays, a 'for' loop for HASHSETs, a 'str' function to convert
  integers to strings with base, a 'lpad0' operator for strings and the functions
  striToUtf8, utf8ToStri and toInt were added to the seed7_05.s7i library.
- The files cgi.s7i and bas7.sd7 were improved to use the new toInt function.
- The interpreter and the compiler (comp.sd7) were improved to support the new
  primitive actions INT_STR_BASED, STR_LPAD0, STR_TOUTF8 and STR_UTF8TOSTRI.
- The compiler (comp.sd7) was improved to generate better code for the primitive actions
  ARR_IDX, STR_ELEMCPY and STR_IDX.
- The toutf8.sd7 example program was modified to use the new charsets.s7i library.
- The files heaputl.c, heaputl.h, str_rtl.c and strlib.c were improved to use strings
  with capacity for the primitive actions STR_APPEND, STR_CAT and STR_HEAD.
- The makefiles were changed to use the $(CFLAGS) always when $(CC) is invoked.
- The socClose function in the file soc_rtl.c was improved to call close() or
  closesocket() depending on the operation system.
- The functions socGetc, socLineRead and socWordRead of the file soc_rtl.c were improved
  to interpret characters >= '\128\' as unsigned.

20080720:
- The FAQs about reserved words and templates were improved.
- The chapters about boolean, integer, bigInteger, rational, float, complex, char
  and array in the manual, were improved.
- A subrange type was added for the types integer, char and the enumeration types.
- The makefiles were improved to set the USE_SIGSETJMP macro in the version.h file.
- The flag USE_SIGSETJMP is now taken into account in the floating point exception
  handling generated by the compiler.
- Support for the action ENU_CONV was added to the (hi) interpreter and the compiler.
- A subrange type is used now in the dnafight.sd7 example program.
- The function update_owner in the file match.c was improved to copy values instead
  of just referring to them.
- The function getSymbolInHtmlTag was added to the scanstri.s7i library.
- The interpreter and the compiler (comp.sd7) were improved to support the function
  /:= for the types float and complex.
- The file seed7/prg/files was replaced with seed7/prg/files.txt which contains
  also a list of include files.
- The function strUtf8ToStri was added to the file str_rtl.c .

20080707:
- Various FAQs about reserved words, user defined statements, static type checking,
  garbage collection, container classes, primitive types and the difference between
  object and primitive types were added or improved.
- The chapters about boolean, integer, bigInteger, rational, bigRational, float,
  complex, char, string and program in the manual, were added or improved.
- A contour was added to a building in the lander.sd7 example program.
- Some debugging output was removed from the mahjong.sd7 example program.
- The function analyze and analyze_stri were renamed to parseFile and parseStri
  respectively in the files progs.s7i, calc.sd7, comp.sd7 .
- The primitive actions PRG_ANALYZE and PRG_STR_ANALYZE were renamed to PRG_FIL_PARSE
  and PRG_STR_PARSE respectively.
- The functions prgAnalyze and prgStrAnalyze were renamed to prgFilParse and prgStrParse
  respectively.

20080622:
- A new example program (cellauto.sd7), which simulates cellular automata, was added.
- Testcases for the @:= statement were added to the chkstr.sd7 program.
- The compiler (comp.sd7) was improved such that the generated code raises MEMORY_ERROR
  when the 'malloc' function fails.
- Support for the actions SET_ICONV and SET_SCONV was added to the (hi) interpreter
  and the compiler.
- The compiler was improved to optionally generate code without range checks for the
  STR_ELEMCPY action.
- The handling of functions returning references to existing objects in the compiler
  was improved.
- Parameter names were added to the function prototypes of the header files bln_rtl.h,
  chr_rtl.h, cmd_rtl.h, flt_rtl.h and ut8_rtl.h.
- The compiletime flag RSHIFT_DOES_SIGN_EXTEND is now taken into account for the
  right shift in the macro 'bitset_pos' defined in the file set_rtl.h.

20080608:
- The chapter about symbol scanning from a file in the manual, was improved.
- A new include file (cgi.s7i) to support the Common Gateway Interface, was added.
- A bug in the getLine function of the scanfile.s7i library was fixed.
- The functions fileExists was added to the seed7_05.s7i library.
- The handling of closures in the compiler (comp.sd7) was improved.
- A new example program (lander.sd7), which simulates a lunar landing, was added.

20080525:
- A new chapter about complex numbers was added to the manual.
- A new chapter about symbol scanning from a file, was added to the manual.
- The makefile for linux/bsd/unix and the file mk_linux.mak were improved to be usable
  for shells where a \n in the echo command leads to errors in the make process (thanks to
  Wolfgang Raith, Jens Thoms Toerring and Arnold Hendriks for helping with this issue).
- The function cp_to_wstri was protected with 'ifdef USE_WFOPEN' in the files striutl.c and
  striutl.h (thanks to Wolfgang Raith for pointing out compilation problems).
- The functions = and <> were added to the complex.s7i library.
- The documentation comments of the libraries scanfile.s7i and scanstri.s7i were improved.
- The functions skipLine and getLine were added to the scanfile.s7i library.
- The strifile.s7i library, which supports string based files, was added.
- The documentation comment of the get_symbol function in the file bas7.sd7 was improved.
- The function processFile which checks the functions getWhiteSpace and getSymbolOrComment
  was added to the program chkscan.sd7 .
- The functions filWrite and ut8Write were improved to raise FILE_ERROR when the
  call of fwrite() was not able to write the whole string.
- Support for the primitive action flt_cast was added to the interpreter and compiler.
- The function setToInt which can convert parts of a set to an integer was added to
  set_rtl.c .

20080508:
- The FAQ "Why a new programming language?" was improved.
- The descriptions of the functions 'rem', 'mod', '[ A .. B ] times C', minIdx, maxIdx,
  rand(array), insert(array), category, local_vars, local_consts, setCategory, setParams,
  'in'(ref_list), 'not in'(ref_list), make_list, pos(ref_list), '&:='(ref_list),
  '@:='(ref_list) and the bufferChar variable in the manual were added or improved.
- The functions float cast, float varCast, boolean varConv, char varConv
  TRACE_REF, pos(ref_list), [minIdx .. maxIdx], minIdx, maxIdx (+ useage of them),
  minIntIdx, maxIntIdx, card(hashSet), xalloc, ord(enum), getwd(null_file) and
  getln(null_file) in the seed7_05.s7i library were added or improved.
- The compiler (comp.sd7) support for the primitive actions arr_maxidx, arr_minidx,
  flt_icast, int_pow, rfl_ipos and sct_alloc was added or improved.
- The compiler handling of INTERFACEOBJECTs and the generation of prototypes was improved.
- The compiler was improved to generate static dispatcher functions.
- The functions arr_maxidx and arr_minidx were added to the file arrlib.c.
- The function bigUIConv was added to the file big_gmp.c.
- The function rflIpos was added to the file rfl_data.c.
- The function flt_icast was added to the file fltlib.c.
- The functions refArrmaxpos, refArrminpos, ref_arrmaxpos and ref_arrminpos were renamed to
  refArrmaxidx, refArrminidx, ref_arrmaxidx ref_arrminidx.

20080420:
- An explatation how to uncompress the Seed7 package was added to the FAQ.
- The descriptions of the functions log2, gcd, lowestSetBit, 'rem', 'mdiv' and
  'mod' in the manual were added or improved.
- The functions gcd and modInverse were added to the bigint.s7i library.
- The bigrat.s7i library was changed to use the gcd function from the bigint.s7i library.
- The chkbig.sd7 program was improved with additional checks for the monadic plus, 'div',
  'rem', 'mdiv', 'mod' and bigInteger constants.
- The chkexc.sd7 program was improved with additional checks for bigInteger functions.
- The chk_all.sd7 program was improved to take the new checks into account.
- The compiler (comp.sd7) was improved to work also with GMP's bigInteger's.
- The compiler was improved to support big_plus and big_gcd.
- The handling of +:=, -:=, *:=, <<:= and >>:= in the compiler was improved to
  avoid memory leaks.
- The handling of the bigInteger 'mdiv' and * in the compiler was improved to do some
  optimisations like using shift operations instead.
- Three example programs printpi1.sd7, printpi2.sd7 and printpi3.sd7 were added.
- The big_gmp.c interface library was added to allow bigInteger computations based
  on the mpz_ functions of the GMP library.
- The file big_rtl.h was renamed to big_drv.h.
- The file biglib.c was change to allow working with big_rtl.c or big_gmp.c .
- The file big_rtl.c was improved to work with a BIGDIGIT_SIZE of 32.
- The functions bigHexCStri, uBigMultSub, uBigSqare, bigClit, bigCmpSignedDigit, bigDiv,
  bigGcd, bigGrow, bigImport, bigLShift, bigLShiftAssign, bigMDiv, bigMod, bigOdd, bigRem,
  bigRShift, bigShrink and bigToBStri of the file big_rtl.c were added or improved.
- An error message about "match value failed" was suppressed in dcllib.c .
- The int_mdiv action (defined in intlib.c) was improved for speed.
- The function prot_bigint (defined in traceutl.c) was changed to use bigHexCStri.
- The function printtype (defined in traceutl.c) was changed to avoid writing a pointer value.
- A bug in the function typHashCode (defined in typ_data.c) was fixed.
- The file read_me.txt was improved to contain a chapter about warnings and a chapter
  which explains how use the GMP library.

20080406:
- The interpreter and the compiler (comp.sd7) were improved to support the functions
  bitLength, lowestSetBit, <<, <<:=, >> and >>:= for the types integer and bigInteger
  (inspired by Mensanator for a program which explores the Collatz Conjecture).
- The priority of the << and >> operators was changed from 19 to 9 in the file syntax.s7i.
- Uses of the obsolete file output operator << where replaced with write statements in
  bas7.sd7, comp.sd7, ms.sd7, pac.sd7, sl.sd7, snake.sd7, tarx.sd7, tetg.sd7 and tet.sd7.
- Descriptions about the new integer/bigInteger functions <<, <<:=, >>, >>:=, bitLength and
  lowestSetBit were added to the manual.
- The chkint.sd7 program was improved with additional checks in chkint for 'div', 'rem',
  'mdiv', 'mod', <<, <<:=, >> and >>:= .
- The chkbig.sd7 program was improved with additional checks for **, compare, lowestSetBit,
  <<, <<:=, >> and >>:= .
- The compiler (comp.sd7) was improved to create optimized/improved versions for the bigInteger
  functions odd, compare, <, <=, >, >=, ** and for the integer functions 'mdiv' and 'mod'.
- A description about the type bigRational was added to the manual.
- An explatation about type inference was added to the FAQ.
- A new constructor for complex numbers from a float was added to the complex.s7i library.
- A boss mode was added to the panic.sd7 and mahjong.sd7 example programs.
- The bas7.sd7 (basic interpreter) example program was improved.
- The makefiles were improved to set the RSHIFT_DOES_SIGN_EXTEND macro in the version.h file.
- A bug in the primitive action flt_mcpy was fixed.
- The primitive action flt_str was improved to support denormal float numbers better.

20080319:
- The functions getEscapeSequence, getCharLiteral, getStringLiteral, getSymbolOrComment and
  getSymbol were added to the scanstri.s7i library.
- The file read_me.txt, which explains the compilation of the interpreter, was added to
  the src directory.
- The actions act_value, big_value, chr_value, fil_value, flt_value, int_value, prg_value,
  rfl_value, set_value, str_value and typ_value were improved to raise an exception for
  references which are NIL or refer to an object with the wrong category.
- The support for the primitive actions itf_eq and itf_ne in the compiler (comp.sd7) was
  improved.
- The handling of bitsets with negative elements in the compiler (comp.sd7) was improved.
- The bas7.sd7 (basic interpreter) example program was improved to support the -p
  option which asks for a prompt at the end of the program.
- Support for the actions bst_append and bst_cat was added to the interpreter.

20080302:
- A new chapter about compile errors was added to faq and to the read_me.
- The functions skipComment, getComment, skipLineComment, getLineComment and getNumber were
  added to the scanstri.s7i library.
- A new example program (chk_all.sd7), which runs interpreted and compiled checks, was added.
- Support for the primitive action CMD_CHDIR was added to the compiler (comp.sd7). 
- Several memory leaks, which happen in the handling of MEMORY_ERROR exceptions, were removed.
- All primitive actions which start with CLS_ were renamed such that the name starts with ITF_ .
- The files clslib.c and clslib.h were replaced by itflib.c and itflib.h .
- The objectcategory CLASSOBJECT was replaced with the objectcategory INTERFACEOBJECT.
- The functions popen and cmd_sh were improved to be consistent on all platforms. Now they
  use always '/' as path delimiter and '\\ ' to describe spaces in the command path.
- The gets function for external_files was improved to work correctly when pipe files are
  read as a whole.
- A workaround was added for a wrong behaviour of the ftell() function under MinGW for pipes.
- The -q option of the 'hi' interpreter was improved to suppress all interpreter messages.
- Several changes to remove C compiler warnings were done.

20080217:
- A new chapter about object orientation was added to the manual
  (Many thanks for the feedback to Leonardo Cecchi, Malcolm McLean and Reinder Verlinde).
- The manual was changed to mention that the 'in' parameter of arrays and structs
  is a reference ('ref') parameter.
- The faq was improved to contain a paragraph about static type checking.
- The implementation type NULL_FILE was renamed to null_file.
- The struct copy of the compiler (comp.sd7) was changed to leave the dynamic type unchanged.
- The following primitive actions were added or improved in the compiler (comp.sd7):
  FIL_ERR, FIL_IN, FIL_OUT, FLT_GROW, FLT_MCPY, HSH_INCL, HSH_LNG, INT_PLUS, PRG_EXEC,
  PRG_STR_ANALYZE, SCR_CURSOR and STR_GETENV.
- The primitive action CLS_CREATE2 was changed to call the CLEAR_TEMP_FLAG macro
  (This is a fix for a bug found by Leonardo Cecchi).
- The function match_subexpr_type was changed to allow normal (not DYNAMIC) interface
  functions to be used for implementation values.
- The primitive action PRC_GETENV was renamed to STR_GETENV.
- The bas7.sd7 (basic interpreter) example program was improved.
- A bug in the primitive action RFL_NOT_ELEM was fixed.
- The functions copy_list, array_to_list and struct_to_list were change to return the
  created list.

20080203:
- The compiler (comp.sd7) was improved to allow the compilation of itself.
- The compiler now compiles the programs rever.sd7 and sl.sd7.
- The scanner.s7i library was renamed to scanfile.s7i and the getName function was
  added to it.
- Three libraries dialog.s7i, scanstri.s7i and charsets.s7i were added.
- The functions str, digits and parse of complex.s7i were changed to use the
  -0.5000+0.8660i format.
- The hasNext function, which allows an iterator like handling of files, was added to
  the file interface.
- Two new object librarys s7_comp and s7_data were added to support the compiler.
- The following files were added: act_comp.c, act_comp.h prg_comp.c, prg_comp.h,
  ref_data.c, ref_data.h, rfl_data.c, rfl_data.h typ_data.c, typ_data.h, datautl.c and
  datautl.h .
- The following primitive actions were added or improved: CMD_FILETYPE, FIL_HAS_NEXT,
  FIL_PRINT, FIL_VALUE, REF_ARRMAXPOS, REF_CAT_PARSE, REF_CAT_STR, RFL_NOT_ELEM
- The prototypes of several *.h files were improved to contain parameter names.
- The category of an object returned by refCategory is now an integer/enumeration like
  type instead of a string.
- The bigAddTemp and bigSbtrTemp functions were added to allow optimized bigInteger
  operations in the compiler.
- The bas7.sd7 (basic interpreter) example program was improved.
- The Exit function of the castle.sd7 example program was improved.

20080120:
- Optimisations for the string functions =, <>, stri[num], &, upper, lower, pos, rpos, split
  and for the array indexing were added to the compiler (comp.sd7).
- Documentation comments were added to bigint.s7i, draw.s7i, bas7.sd7 and mahjong.sd7.
- The bas.sd7 (basic interpreter) example program was improved and renamed to bas7.sd7.
- The functions polar, parse, str and digits were added or improved in complex.s7i.
- The read_dir, chdir, mkdir functions were improved to raise FILE_ERROR on failure.
- The functions open_dir and open_dir_path of the dir.s7i library were changed to return
  STD_NULL when the directory does not exist.
- The functions getDigits, skipSpace, skipWhiteSpace were added to the scanner.s7i library.
- The digits function for the type float was improved to never return -0 .
- The new lpad0 operator was added to convert integers to strings with leading zeros.
- The time conversion functions str_yyyy_mm_dd, str_mm_dd_yy, str_mm_dd_yyyy, str_d_m_yy and
  str_d_m_yyyy were added to the time.s7i library.
- Checks were added to the chkint.sd7 and chkstr.sd7 example programs.
- The code to handle a failing realloc for arrays was improved.
- Bugs in the compiler, with str_append and with val or ref parameters as result in the
  return statement, were fixed.

20080106:
- Documentation comments were added to the functions of the librarys bigint.s7i,
  bigrat.s7i, complex.s7i, float.s7i, getf.s7i, keybd.s7i, rational.s7i, scanner.s7i,
  socket.s7i, stritext.s7i, time.s7i and dna_base.s7i.
- The bas.sd7 (basic interpreter) example program was improved.
- The include mechanism was improved to avoid multiple includes.
- Part of the float.s7i library was moved to the new math.s7i library.
- The library html_ent.s7i, which contains functions to replace HTML entities by
  characters and vice versa, was added.
- A new example program (chkhent.sd7) to check the new HTML functions was added.
- The compiler (comp.sd7) was improved to support the new 'rpos' function.
- The getHtmlTagOrContent function was added to the scanner.s7i library.

20071227:
- The library cards.s7i which contains the card pictures of a french deck was added.
- The documentation of the draw.s7i library was improved.
- Some pictures were moved from castle.sd7 to pic16.s7i and pic32.s7i.
- The function rpos (reverse search for a character in a string) was added to the
  seed7_05.s7i library.
- The bas.sd7 (basic interpreter) example program was improved.
- A new example program (carddemo.sd7), which demonstrates the playing cards of the
  french deck, was added.
- Testcases for the rpos function were added to the chkstr.sd7 program.

20071210:
- The interpreter was improved to flag match errors only once instead of multiple times.
- The graph.s7i library was improved to define the type pointList and the function
  genPointList (to create a pointList from an integer array of x and y coordinates).
- The functions polyLine and fpolyLine (to draw polygons and filled polygons) were
  added to the draw.s7i library .
- The functions pos (search for a character in a string) and isDigitString were added
  to the seed7_05.s7i library.
- Several testcases were added to the chkint.sd7 and chkstr.sd7 programs.
- The drwSetTransparentColor function was added to the drw_x11.c driver.
- An analog clock program (clock3.sd7) provided by Volker Schuller was added.
- The compiler was improved to support the new graphic and string functions.

20071125:
- The interpreter was improved to store the filename and the line of the definition of
  an object.
- The line stored for an expression was improved to be identical with the line of the
  operator symbol or function name.
- The stritext.s7i include file, which supports string array based text files, was added.
- The mahjong.sd7 example program was improved to draw darker vertical surfaces.
- The mahjong tiles of the mahjng32.s7i include file were improved to contain bigger digits.
- Several new functions like getHtmlSymbolOrComment, gray, file and line were added.
- The compiler was improved to support functions with 'in var' parameter called by DYNAMIC
  dispatch functions with a corresponding 'val' parameter.
- The compiler was improved to support the ref_line and ref_file actions.
- An error was fixed in the strIpos function and testcases were added to the chkstr.sd7
  program.

20071110:
- The functions getSymbol, getWhiteSpace, getSymbolOrComment and getSimpleSymbol
  of the scanner.s7i library were created or improved.
- A new example program (chkscan.sd7) to check the new scanner functions was added.
- A bug in the planets.sd7 example program was fixed.
- The manual was corrected to explain that the types 'char' and 'string' support UNICODE.
- The actions cmd_ls and scr_write were improved to use utf-8 characters when available.
- The filOpen function was improved to use _wfopen under windows.
- The timezone handling to get the Greenwich Mean Time was improved.
- A string in shisen.sd7 was enlarged to avoid a RANGE_ERROR exception
  when accessing it.

20071025:
- A new example program (mahjong.sd7) was added.
- An include file (mahjng32.s7i) which contains mahjong tiles was added.
- The interpreter and the compiler were improved to support the gkb_window action.
- The close interface function was changed to work for the type graphFile.

20071010:
- The compiler (comp.sd7) was improved to support the 'remove(array, index)' function.
- The functions isLeapYear, daysInMonth, weekOfYear, weekDateYear and weekDateWeek
  were added to the time.s7i library
- The exception checking program chkexc.sd7 was improved to check for exceptions
  raised with arrays.
- Documentation for the bigInteger type was added to the manual.
- Some strings in pic32.s7i and pairs.sd7 were enlarged to avoid a RANGE_ERROR exception
  when accessing them.

20070925:
- The compiler support for fil_tell, hsh_contains, hsh_excl and str_idx was improved.
- The string indexing (str_idx) was changed to raise RANGE_ERROR for indices outside of
  the string.
- Various spelling errors in faq.htm, faq.txt, manual.htm and manual.txt where fixed.
- The functions filBigLng, filBigSeek, filBigTell and filLng were improved to use _fseeki64
  when available.
- The mandelbr.sd7, chkstr.sd7, chkexc.sd7 and wiz.sd7 example programs were improved.
- A protection aggainst a buffer overflow in scrWrite was added.
- Several function prototypes were changed to use 'const' types.

20070909:
- A gtk-server connection library (gtkserver.s7i), a test program (gtksvtst.sd7) and
  documentation (see doc/gtksvdoc.txt) were added (Patch from Leonardo Cecchi).
- Some spelling corrections for read_me and a draft for a cygwin makefile (mk_cygw.mak)
  were added (Patches from Terrence Brannon).
- A Seed7 mailing list has been created under seed7-NOSPAMusers@lists.sourceforge.net
  (Remove NOSPAM to get the email address).
- The planets.sd7 program was improved to show the name of a star when clicking on it.
- The stack trace of the hi interpreter for uncaught exceptions was improved.

20070823:
- The compiler was improved to support nested exceptions.
- The planets.sd7 example program was improved to contain a panorama with stars and planets.
- An include file (stars.s7i) which contains the names and coordinates of stars was added.
- The intParse function was improved to accepts a plus (+) sign.
- The memory management of the socRecv function was improved.
- Some exception tests were added to chkexc.sd7
- A test for check_atan2 was added to the chkflt.sd7 program.

20070807:
- The handling of local functions in the compiler (comp.sd7) was improved.
- The function 'option' (to get compile time defines) was renamed to 'configValue'.
- The compiler was improved to support the 'configValue' function.
- The 'ord' function for enumerations was changed to work without DYNAMIC.
- The changelog was reversed (sorted now from newest to oldest), and old entrys were added.
- The address of the FSF was changed in various files.

20070723:
- The compiler (comp.sd7) was improved to allow local functions.
- The compiler now supports arrays with indices of any type (not just integer indices).
- A new example program (mandelbr.sd7), to display fractals, was added.
- The -O2 option was added to the compiler (advantageous when compiling mandelbr.sd7).
- The compiler now generates static functions to allow more optimizations.
- A *:= operator and the sqrAbs function were added for the type 'complex'.
- The reflection was changed to use the 'getValue' function instead of the 'value' operator.
- The compiler was improved to support the conversion of integers to an enumeration type.
- The compiler now compiles the programs panic.sd7 and castle.sd7.

20070710:
- The compiler (comp.sd7) support for different C compilers was improved.
- A support for socket send and recv was added to the compiler.
- A description of openInetSocket was added to the documentation.
- A pos function and the 'not in' operator was added for the type ref_list.
- The var_conv operator was renamed to varConv.
- Some setters (setCategory, setValue, setParams) were added to the reflection.
- The classtype of the interpreter was renamed to categorytype since it has
  nothing to do with classes.

20070624:
- As suggested by several users a socket library (socket.s7i) was added.
- Two example programs tst_srv.sd7 and tst_cli.sd7 to test socket functionality were added.
- The popen function was added (suggested by Leonardo Cecchi).
- The compiler was improved to support hash tables with floats, various for loops over
  hash tables and the new socket library.
- The compiler now compiles the programs bas.sd7 and wordcnt.sd7.
- The wator.sd7 example program was improved.
- The heap management and the heap statistic was improved.
- Several function prototypes were changed to use 'const' types.

20070607:
- An explanation of multiple dispatch was added to the FAQ.
- A bug in the 'str' function for 'complex' was fixed (found by Leejun).
- The interpreter was improved to support startsWith, endsWith, array_min_position, heapstat
  and @:= (for ref_lists).
- The compiler suport for drw_cpy, ref_trace, arr_head, arr_tail, arr_idx, varfunc, wintype,
  array literals and dynamic functions (for enumerations) was improved.
- The compiler now writes a message when an uncaught exception was raised.
- The compiler was changed such that destr functions accept also NULL.
- The compiler now compiles the programs snake.sd7 and toutf8.sd7.
- The concentration game was renamed to pairs.sd7
- The functions drwCpy, drwCreate and drwDestr where moved to drw_rtl.c.
- The heap management and the heap statistic was improved.

20070524:
- The file version.h was removed to force the creation of it with the "make depend" command.
- The read_me was changed such that a "rm version.h" is not necessary to compile.
- Several constant types were defined in data_rtl.h.
- The files str_rtl.c, str_rtl.h, set_rtl.c and set_rtl.h were changed to use constant types.
- A bug with compare functions for array sorts and hash tables was fixed.
- The makefile mk_linux.mak was added as copy of 'makefile'.
- The makefile mk_msvc.mak was added to allow experimental compilation with nmake and cl.

20070507:
- As suggested by several users the include files were moved to the 'lib' directory.
- The search for include files was improved to work with an internal search path array.
- The 'hi' interpreter now contains a hardcoded include directory path defined in version.h.
- The makefiles mk_mingw.mak, mk_msys.mak and mk_nmake.mak were added for compilation under MinGW.
- The bigInteger multiplication was changed to use Karatsuba multiplication for bigger integers.
- Several constant types were defined in common.h.

20070419:
- The compiler support for result variables, which are initialized with expressions, was improved.
- The bas (basic interpreter) example program was improved.
- The bigrat.s7i, rational.s7i librarys were improved.
- Some multiplication testcases were added to the chkbig.sd7 example program.
- The compiler was changed to mark its temporary *.c files with a temp_marker.
- Several performance improvements for uBigMultSub, uBigAddTo, uBigDiv, uBigMult,
  uBigMultIntoHelp, bigGrow, bigMult and bigShrink were done.

20070404:
- The support and documentation for the functions split, join, log2, bitLength and
  the operator *:= were improved.
- The compiler support for the functions raise, log2 and split was improved.
- The bas (basic interpreter) example program was improved to support print using statements.
- The support of the for-step loop in the seed7_05.s7i include file was improved.
- Some improvements for the bigRational and bigInteger library were done.
- A bug in uBigAddTo which could cause an error in bigDiv, bigRem, bigMDiv, bigMod was fixed.
- The chkbig.sd7 program was improved to check the log2 function for bigInteger.
- The chkstr.sd7 program was improved to have more checks for the split function.

20070319:
- The interpreter was changed to execute programs only when they have no errors.
- The option -x to execute programs, even when they have errors, was added to the interpreter.
- The *:= operator for the types integer, float, bigInteger and bigRational was added.
- The chkbig.sd7 program was improved to check the *:= operator for big integers.
- The compiler was improved to support the *:= operator and the arr_cat action.
- Several improvements for compile time error messages were done.
- The err.sd7 example program, which checks compile time error messages, was improved.

20070305:
- The support for float was changed to use IEEE 754 NaN and Infinity instead of exceptions.
- The exception checking program chkexc.sd7 was improved and the chkflt.sd7 program was added.
- All exponentiation operators were improved to evaluate 0 ** 0 to 1.
- The associativity of the ** operator was changed to work right to left.
- A declaration for an = and <> operator was added for interface types.
- Basic support for exceptions in compiled programs was added.
- Parts of the manual describing float operations and exponentiation were improved.
- The performance of the flt_ipow action was improved.
- The compiler was improved to produce better code for the primitive actions
  arr_sort, arr_times, cls_eq, cls_ne, flt_isnan, flt_log10, int_fact,
  rfl_append, rfl_cpy, rfl_for, rfl_mklist, rfl_ne, rfl_tail and str_str.

20070219:
- The support for hash tables, sets and console output in compiled programs was improved.
- Support for multiple dispatch of interface (DYNAMIC) functions was added to the compiler.
- The handling of parameters in the dispatch functions generated by the compiler was improved.
- Variable global arrays and structs in compiled programs are now initialized
  with a copy of the initialisation value.
- The compiler was improved to produce better code for the primitive actions
  arr_idx, chr_ge, chr_gt, chr_le, chr_lt, fil_seek, set_cpy, str_cpy,
  prc_option, prg_match, ref_itftosct, typ_isderived and typ_meta.
- A compare and a hashCode function was added for the type 'color'.
- A check for curr_hash != NULL was removed at various places since isit_hash takes care of it.

20070204:
- An abstract data type to create interface types was added.
- The matching of functions was changed such that interface functions are
  preferred over non interface functions.
- The error message which flags wrong access rights of actual parameters was improved.
- The sorting of directory entrys for cmd_ls was improved.
- The unicode support for prc_getenv and prc_option was improved.
- The -v (verbose) option was added to the interpreter.
- A small bug in the startrek.sd7 example program was fixed.
- The handling of interface (DYNAMIC) functions in the compiler was improved.
- The compiler was improved to support the actions arr_cpy, drw_create, drw_destr,
  drw_pfarcchord and drw_pfarcpieslice.
- The handling of enumeration types in the compiler was improved.
- Several accessright changes for file functions in seed7_05.s7i and other libraries
  allow the compiler to produce working code for more file functions.

20070118:
- The compiler was improved to support interfaces (DYNAMIC functions).
  With this improvement several example programs can be compiled now.
- The support for the actions gkb_busy_getc, gkb_xpos, gkb_ypos, kbd_busy_getc,
  drw_pfellipse and arr_arrlit2 was added to the compiler.
- The X11 keyboard driver was improved.

20070104:
- The hashtype was changend to maintain the size of the hash instead of computing it.
- The &:= statement for the type ref_list was added.
- The compiler was improved to support 'in var' parameters.
- A new include file (complex.s7i) to support complex numbers was added.
- The support for the bigIConv, bigOrd, cmdMkdir, drwPArc, drwPCircle, drwPFEllipse,
  filBigLng, filBigSeek and filBigTell functions was added to the compiler.

20061219:
- Support for local constant declarations was added to the compiler.
- The compiler was improved to support the actions big_abs, big_clit, big_hashcode,
  big_value, cmd_ls, flt_grow, flt_shrink, gkb_gets, kbd_gets, set_arrlit and str_chsplit.
- The heap statistic was improved to work for bigInteger objects.
- The array compare functions = and <> have been improved.
- The support for arrays in the compiler was improved.
- The trace level 'h' was added to trace the heapsize.
- The exception handling was corrected to work with hash objects.
- A bug in the in_file handling of the analyzer was fixed.
- The 'hi' interpreter was improved to support the actions rfl_trace and str_split.

20061204:
- The functions bigLength, seek, bigTell were added to support files with 64 bit offsets.
- The file functions getwd, getln, read and readln were changed to remove '\r' before '\n'.
- Parameters of type bigInteger were changed to use call by reference.
- The functions ord and conv for the bigInteger type were added.
- The putf function (to copy a string to a file) was changed and a writef function was added.
- Functions to split and join strings and a check for that functions were added.
- Comparisons = and <> for arrays were added.
- An implementation for 'set of string' based on the 'hash' type was added.
- Keyboard functionality was moved into the new file kbd_rtl.c.
- A new makefile makefile.msy for MinGW MSYS compilation was added.

20061120:
- The rand function and the +:= and -:= operators were added to
  the bigInteger library.
- The checks for bigInteger addition and subtraction in chkbig.sd7
  were improved and checks for the +:= and -:= operators
  were added.
- The compiler support for bigInteger was improved.
- The documentation (manual and faq) was improved.

20061106:
- The hi interpreter was improved to support bigInteger literals.
- Changes have been done to allow a configurable bigdigit size
  (Bigdigits are the building elements of a bigInteger).
- The mdiv function was added to the bigInteger library and the
  chkbig.sd7 program.
- The chkbig.sd7 program was changed to use bigInteger literals.
- Several bigInteger functions have been improved.
- A bigrat.s7i include file to support bigRational numbers has been added.
- The compiler support for bigInteger, setBaselit and strTrim has
  been improved.

20061023:
- The bigInteger library was improved to support modulo, power and
  several comparisons (<, >, <=, >=).
- Testcases for incr, decr, modulo, power and compare were added to
  the chkbig.sd7 program.
- The compiler was improved to support the new bigInteger functionality.

20061008:
- The bigInteger library was improved to support division and remainder.
- Testcases for division and remainder were added to the chkbig.sd7 program.
- The compiler was improved to support bigInteger division and remainder.

20060926:
- The bigInteger library was improved to support addition, subtraction,
  multiplication, negation, absolute value, string conversions and more.
- A lot of testcases have been added to the chkbig.sd7 program.
- The compiler was improved to support more bigInteger functionality.
- The makefile was changed to work on BSD (suggested by Dave Bodenstab).

20060910:
- A new include file (bigint.s7i) and a new example program (chkbig.sd7) were added.
- Changes in the compiler to support some bigInteger functionality were done.
- Support for the str_elemcpy action was added to the compiler.

20060826:
- A description of the 'attr' parameter was added to the manual.
- The first steps towards bigInteger support were done.
- The graphic and keyboard drivers for windows have been improved.
- A check for the maximum of fish and sharks was added to the wator example program.

20060808:
- A description of the 'func', 'varfunc' and 'proc' types was added to the manual.
- The 'parse' operator for the type 'time' was improved.
- The operators '<=', '>' and '<' were added for the type 'duration'.
- The windows graphic driver was improved to use the SetPixel function.
- The filOpen function was changed to open files in binary mode.

20060724:
- A new example program (bifurcation) was added.
- A trim function to remove leading and trailing spaces from strings was added.
- The windows graphic driver was improved to support windows 98.
- A changelog (chlog) was added.

20060707:
- A little improvement of the castle example program was done.
- The drwText function of the windows graphic driver
  was changed to support unicode characters.
- A new example program (planets) was added.

20060622:
- A new example program (castle) was added.
  Castle was inspired by the castle adventure from 1984.
- The graphic driver for windows has been improved for
  circle, arc, chord, pieslice, fellipse.

20060606:
- The bas (basic interpreter) example program was improved to
  support exit statements.
- A tiny bug in the panic example program was fixed.
- The hi interpreter was improved to write a stack trace when
  an exception is not catched.

20060520:
- The performance of the interpreter was raised by circa 8% with
  an improved free list management.
- The graphic and keyborad drivers for windows have been improved.
- A new primitive action (set_arrlit) was defined to create sets from
  integer arrays.
- The bas (basic interpreter) example program was improved to support do loops.
- A sudoku example program (sudoku7) was added.

20060506:
- The reporting of semantic errors was improved (now the
  line number and the line itself is shown).
- A checkmark picture was added to pic16.s7i and pic32.s7i .
- A tiny inaccuracy in the heap statistic was fixed.
- The source and include file management of the interpreter
  was simplified.

20060420:
- The driver function tim_await (using seconds since 1970)
  was replaced by timAwait (using the Gregorian calendar).
- The driver function timNow was changed to deliver a
  timezone which includes the daylight saving time.
- Various pictures where added in pic16.s7i and pic32.s7i .
- The parse function for bitsets was fixed to work for
  empty sets.
- A new example program toutf8 to convert files to utf-8
  was added.
- The windows driver function drwPRect was fixed.

20060404:
- Function to close a graph_file
- Write graphic text under windows
- Parse operator and reading for bitsets
- Allow hashtables for sets
- Date format according to ISO 8601
- New time functions dayOfWeek, julianDayNumber and
  julianDayNumToTime

20060314:
- Improvements for arrays and structs in the compiler
- Function strLit to support the compiler
- Improvements in bas example program.
- Subrange and for-loop for bitset
- Allow line comments in string literals
- Empty line count removed

20060223:
- Some compiler improvements for sets and structs. 
- New graphic function: copyArea 
- Hashes for sets and types 
- New time functions: dayOfYear, toGMT, -:= 
- Utf-8 characters in string and char literals 
- New standard files: STD_UTF8_IN, STD_UTF8_OUT, STD_UTF8_ERR 
- Function file_type to get the type of a file 

20060205:
- The compiler (comp.sd7) can handle strings now. 
- New example program wator.sd7 (Simulation with fish and sharks). 
- Improved example program dnafight.sd7 . 
- New rand function to select a random element from a set. 

20060126:
- Improvements in the compiler (comp.sd7) 
- Changed wrinum.s7i to write roman, english and german numbers. 
- Moved some pictures to pic16.s7i and pic32.s7i. 
- Renamed NO_ERROR to OKAY_NO_ERROR (NO_ERROR is used in windows). 
- Defined compare and hashCode for the type 'reference'. 
- In drw_win.c: Map characters 128 to 159 to unicode chars. 
- In scr_win.c: Map console characters to unicode chars. 
- Add #include "string.h" in files that use memcmp. 
- Add functions to support compilation: 
  filLit, drwCpy, strHead, strRange, strTail and others. 
- In kbd_inf.c: Add support for UTF-8 keys for KEYBOARD. 

20060118:
- Some improvements of the windows support  
- Console mode programs work  
- Windows time driver works  
- GDI Keyboard driver works  
- Graphic programs work to some degree  
  The windows port uses Mingw and the makefile "makefile.win".  
- Changes in the time driver interface tim_drv.h to support compilation.  
- Test program gkbd.sd7 for tests of the keyboard with x11/gdi - windows.  

20060111:
- The beginning of windows support 
  (Textmode programs work, Graphic programs work to some degree) 
  The windows port uses Mingw and the makefile "makefile.win". 
- The definition of 
  $ system "main" main; 
  has been moved to the seed7_05.s7i library. 
  Therefore it is not necessary to specify 'system "main"' in every program. 

20051203:
- Function to get the unsorted keys of a hash 
  (for sorted keys use the sort array function: sort(keys(aHash)) ) 
- Function to get the unsorted values of a hash 
  (for sorted values use the sort array function: sort(values(aHash)) ) 
- flip function for hashes to flip keys and values 
  (the result has the type: hash [baseType] array keyType ) 
- for loop to loop over the unsorted values of a hash 
- for loop to loop over the unsorted keys of a hash 
- for loop to loop over the unsorted values and keys of a hash 

20051124:
- Function to get the keys of a hash 
- Sort function for arrays

20051112:
- Now the Seed7 manual (in the package) uses color. 
- Implement seek for UTF-8 files 
- Fix and improve the gets funktion for UTF-8 files 
- The Seed7 project page contains also screenshots, a manual 
  and an FAQ file. See http://sourceforge.net/projects/seed7 
- Rename 'NL' system variable to 'writeln' and change the 
  corresponding logic 

20051104:
- Now Seed7 supports reading and writing UTF-8 files
- The Seed7 project page contains also screenshots, a manual
  and an FAQ file. See http://sourceforge.net/projects/seed7
- A new pos function to search a string from a given position has
  been added.

20051025:
- Initial release.
