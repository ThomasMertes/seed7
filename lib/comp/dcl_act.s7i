
(********************************************************************)
(*                                                                  *)
(*  dcl_act.s7i   Generate code for actions for declarations.       *)
(*  Copyright (C) 1990 - 1994, 2004 - 2014  Thomas Mertes           *)
(*                                                                  *)
(*  This file is part of the Seed7 compiler.                        *)
(*                                                                  *)
(*  This program is free software; you can redistribute it and/or   *)
(*  modify it under the terms of the GNU General Public License as  *)
(*  published by the Free Software Foundation; either version 2 of  *)
(*  the License, or (at your option) any later version.             *)
(*                                                                  *)
(*  This program is distributed in the hope that it will be useful, *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)
(*  GNU General Public License for more details.                    *)
(*                                                                  *)
(*  You should have received a copy of the GNU General Public       *)
(*  License along with this program; if not, write to the           *)
(*  Free Software Foundation, Inc., 51 Franklin Street,             *)
(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)
(*                                                                  *)
(********************************************************************)


const ACTION: DCL_CONST      is action "DCL_CONST";
const ACTION: DCL_FWD      is action "DCL_FWD";
const ACTION: DCL_GLOBAL      is action "DCL_GLOBAL";
const ACTION: DCL_VAR      is action "DCL_VAR";


const proc: process (DCL_CONST, in reference: function,
    in ref_list: params, inout expr_type: c_expr) is func

  begin
    write_object_declaration := FALSE;
  end func;


const proc: process (DCL_FWD, in reference: function,
    in ref_list: params, inout expr_type: c_expr) is func

  begin
    write_object_declaration := FALSE;
  end func;


const proc: process (DCL_GLOBAL, in reference: function,
    in ref_list: params, inout expr_type: c_expr) is func

  begin
    write_object_declaration := FALSE;
  end func;


const proc: process (DCL_VAR, in reference: function,
    in ref_list: params, inout expr_type: c_expr) is func

  begin
    write_object_declaration := FALSE;
  end func;
